const t=JSON.parse('{"key":"v-0251d77a","path":"/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%80).html","title":"代码随想录算法总结(C++)版本——哈希、字符串","lang":"zh-CN","frontmatter":{"description":"代码随想录算法总结(C++)版本——哈希、字符串 Created: September 2, 2022 1:06 PM 哈希 常见的三种哈希结构 当我们想使用哈希法来解决问题的时候，我们一般会选择如下三种数据结构。 数组 set （集合） map(映射) 在C++中，set 和 map 分别提供以下三种数据结构，其底层实现以及优劣如下表所示： 集合 底层实现 是否有序 数值可否重复 能否更改数值 查询效率 增删效率 set 红黑树 有序 不可重复 不可更改 O(logn) O(logn) unordered_set 哈希表 无序 不可重复 不可更改 O(1) O(1) multiset 红黑树 有序 可重复 不可更改 O(logn) O(logn)","head":[["meta",{"property":"og:url","content":"https://tobeprozy.github.io/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%80).html"}],["meta",{"property":"og:site_name","content":"南叔先生-开源笔记"}],["meta",{"property":"og:title","content":"代码随想录算法总结(C++)版本——哈希、字符串"}],["meta",{"property":"og:description","content":"代码随想录算法总结(C++)版本——哈希、字符串 Created: September 2, 2022 1:06 PM 哈希 常见的三种哈希结构 当我们想使用哈希法来解决问题的时候，我们一般会选择如下三种数据结构。 数组 set （集合） map(映射) 在C++中，set 和 map 分别提供以下三种数据结构，其底层实现以及优劣如下表所示： 集合 底层实现 是否有序 数值可否重复 能否更改数值 查询效率 增删效率 set 红黑树 有序 不可重复 不可更改 O(logn) O(logn) unordered_set 哈希表 无序 不可重复 不可更改 O(1) O(1) multiset 红黑树 有序 可重复 不可更改 O(logn) O(logn)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T10:25:41.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T10:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码随想录算法总结(C++)版本——哈希、字符串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-26T10:25:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"常见的三种哈希结构","slug":"常见的三种哈希结构","link":"#常见的三种哈希结构","children":[]},{"level":3,"title":"242.有效的字母异位词","slug":"_242-有效的字母异位词","link":"#_242-有效的字母异位词","children":[]},{"level":3,"title":"349. 两个数组的交集","slug":"_349-两个数组的交集","link":"#_349-两个数组的交集","children":[]},{"level":2,"title":"第202题. 快乐数","slug":"第202题-快乐数","link":"#第202题-快乐数","children":[{"level":3,"title":"1. 两数之和","slug":"_1-两数之和","link":"#_1-两数之和","children":[]}]},{"level":2,"title":"第454题.四数相加II","slug":"第454题-四数相加ii","link":"#第454题-四数相加ii","children":[]},{"level":2,"title":"383. 赎金信","slug":"_383-赎金信","link":"#_383-赎金信","children":[{"level":3,"title":"暴力解法","slug":"暴力解法","link":"#暴力解法","children":[]},{"level":3,"title":"哈希解法","slug":"哈希解法","link":"#哈希解法","children":[]}]},{"level":2,"title":"第15题. 三数之和","slug":"第15题-三数之和","link":"#第15题-三数之和","children":[{"level":3,"title":"哈希解法","slug":"哈希解法-1","link":"#哈希解法-1","children":[]},{"level":3,"title":"双指针","slug":"双指针","link":"#双指针","children":[]}]},{"level":2,"title":"第18题. 四数之和","slug":"第18题-四数之和","link":"#第18题-四数之和","children":[{"level":3,"title":"双指针","slug":"双指针-1","link":"#双指针-1","children":[]}]},{"level":2,"title":"344.反转字符串","slug":"_344-反转字符串","link":"#_344-反转字符串","children":[]},{"level":2,"title":"541. 反转字符串II","slug":"_541-反转字符串ii","link":"#_541-反转字符串ii","children":[{"level":3,"title":"库函数reverse","slug":"库函数reverse","link":"#库函数reverse","children":[]},{"level":3,"title":"自己实现反转","slug":"自己实现反转","link":"#自己实现反转","children":[]}]},{"level":2,"title":"剑指Offer 05.替换空格","slug":"剑指offer-05-替换空格","link":"#剑指offer-05-替换空格","children":[{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]}]},{"level":2,"title":"151.翻转字符串里的单词","slug":"_151-翻转字符串里的单词","link":"#_151-翻转字符串里的单词","children":[{"level":3,"title":"双指针","slug":"双指针-2","link":"#双指针-2","children":[]}]},{"level":2,"title":"题目：剑指Offer58-II.左旋转字符串","slug":"题目-剑指offer58-ii-左旋转字符串","link":"#题目-剑指offer58-ii-左旋转字符串","children":[]},{"level":2,"title":"28. 实现 strStr()","slug":"_28-实现-strstr","link":"#_28-实现-strstr","children":[{"level":3,"title":"使用next数组来匹配","slug":"使用next数组来匹配","link":"#使用next数组来匹配","children":[]},{"level":3,"title":"前缀表统一减一 C++代码实现","slug":"前缀表统一减一-c-代码实现","link":"#前缀表统一减一-c-代码实现","children":[]},{"level":3,"title":"前缀表（不减一）C++实现","slug":"前缀表-不减一-c-实现","link":"#前缀表-不减一-c-实现","children":[]}]}],"git":{"createdTime":1682504741000,"updatedTime":1682504741000,"contributors":[{"name":"tobeprozy","email":"904762096@qq.com","commits":1}]},"readingTime":{"minutes":17.7,"words":5310},"filePathRelative":"18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——哈希、字符串(一).md","localizedDate":"2023年4月26日","excerpt":"<h1> 代码随想录算法总结(C++)版本——哈希、字符串</h1>\\n<p>Created: September 2, 2022 1:06 PM</p>\\n<h1> 哈希</h1>\\n<h3> 常见的三种哈希结构</h3>\\n<p>当我们想使用哈希法来解决问题的时候，我们一般会选择如下三种数据结构。</p>\\n<ul>\\n<li>数组</li>\\n<li>set （集合）</li>\\n<li>map(映射)</li>\\n</ul>\\n<p>在C++中，set 和 map 分别提供以下三种数据结构，其底层实现以及优劣如下表所示：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>集合</th>\\n<th>底层实现</th>\\n<th>是否有序</th>\\n<th>数值可否重复</th>\\n<th>能否更改数值</th>\\n<th>查询效率</th>\\n<th>增删效率</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>set</td>\\n<td>红黑树</td>\\n<td>有序</td>\\n<td>不可重复</td>\\n<td>不可更改</td>\\n<td>O(logn)</td>\\n<td>O(logn)</td>\\n</tr>\\n<tr>\\n<td>unordered_set</td>\\n<td>哈希表</td>\\n<td>无序</td>\\n<td>不可重复</td>\\n<td>不可更改</td>\\n<td>O(1)</td>\\n<td>O(1)</td>\\n</tr>\\n<tr>\\n<td>multiset</td>\\n<td>红黑树</td>\\n<td>有序</td>\\n<td>可重复</td>\\n<td>不可更改</td>\\n<td>O(logn)</td>\\n<td>O(logn)</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
