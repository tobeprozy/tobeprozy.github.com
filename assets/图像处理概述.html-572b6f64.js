import{_ as a,Y as e,Z as d,a2 as i}from"./framework-39b9cf04.js";const h={},p=i('<div class="hint-container warning"><p class="hint-container-title">注意</p><p>图像处理的一般步骤：提取原始图像→灰度处理→滤波→边缘检测→图像分割→特征提取。</p></div><h1 id="〇、图像性质和表达" tabindex="-1"><a class="header-anchor" href="#〇、图像性质和表达" aria-hidden="true">#</a> 〇、图像性质和表达</h1><h2 id="_0-1-基本概念" tabindex="-1"><a class="header-anchor" href="#_0-1-基本概念" aria-hidden="true">#</a> 0.1 基本概念</h2><aside> 🪁 灰度图像表示为两个变量的标量函数f(x,y),其中x,y是平面内的坐标 数字化图像的定义域是一个有限的离散山歌，器坐标是自然数。数字化图像的值域是一个有限的灰度值（亮度）的离散集合。像素是图像的基本单位。 </aside><h2 id="_0-2-图像数字化" tabindex="-1"><a class="header-anchor" href="#_0-2-图像数字化" aria-hidden="true">#</a> 0.2 图像数字化</h2><aside> 🪁 图像是数字化可以看作是采样函数与连续图像函数的乘积 <p>通常栅格由规则的多边形（方形或正六边形）组成。采样的第二个当面是设置采样点间的距离（采样距离越小图像的分辨率越高）。</p><p>灰阶的量化决定着明暗和伪轮廓。人最多可以识别大约60个灰度级别，只含有黑和白像素的图像称为二值图。</p></aside><h2 id="_0-3-数字图像性质" tabindex="-1"><a class="header-anchor" href="#_0-3-数字图像性质" aria-hidden="true">#</a> 0.3 数字图像性质</h2><aside> 🪁 为了能够表达离散几何，必须定义像素的邻接关系。 必须建立根据两个像素间距离的函数，把几种已在使用的定义方法。最常用的是”城市街区“、”棋盘“和日常生活中用到的欧氏距离。如果栅格上设置了邻接关系，就获得了光栅。 <p>给定光栅，就引入了拓扑性质。这些性质是基于”连通的“这以关系，导致区域、背景、孔和区域边界概念。区域的凸包是包含它的一个最小凸子集。</p><p>4-邻接和8-邻接会产生”交叉线条“悖论，使基本的离散几何算法复杂化。但是，对于二值和灰度图像都存在解决这些悖论的方法。</p><p>一副二值图像的距离变换（斜切）提供每个像素到最近的非零像素的距离。存在一个在计算上高效的计算距离变换的两遍算法，具有与像素数目成线性的复杂度。</p><p>亮度直方图是图像亮度全局描述，给出了像素具有某个亮度的概率密度估计。 人的视觉感知有很多错觉。感知组织作为人感知图像的一些性质对于计算机视觉有启发作用。</p><p>现场图像与任何测量或观测一样，总是带有噪声，定量地估计噪声的程度是可能的，比如用信噪比。</p><p>噪声的常见模型有：白噪声、高斯噪声、冲击噪声、椒盐噪声</p></aside><h2 id="_0-4-彩色图像" tabindex="-1"><a class="header-anchor" href="#_0-4-彩色图像" aria-hidden="true">#</a> 0.4 彩色图像</h2><aside> 🪁 人的色彩感知是在电磁辐射的波长这一客观的物理性质基础之上的主观心理物理层次。 <p>人类针对入射幅照光建立起了波长敏感的三种基本类型的传感器。人类视网膜上的颜色敏感的感受器是锥状体。视网膜上另一种光敏感受器是杆状体，专注于周围光照强度低的情况下的单色感知。</p><p>锥状体按照感知的波长范围分为三类：仅是对应于红、绿、蓝。</p></aside><h2 id="_0-5-摄像机" tabindex="-1"><a class="header-anchor" href="#_0-5-摄像机" aria-hidden="true">#</a> 0.5 摄像机</h2><aside> 🪁 多数相机使用CCD或CMOS光敏元件，两者都使用光伏原理。它们捕获单色图像的亮度。 摄像机配备了必要的电子组件以提供数字化的图像。彩色摄像机和单色摄像机类似，含有色彩滤波器。 </aside><h1 id="一、图像预处理" tabindex="-1"><a class="header-anchor" href="#一、图像预处理" aria-hidden="true">#</a> 一、图像预处理</h1><h2 id="_1-1-图像预处理" tabindex="-1"><a class="header-anchor" href="#_1-1-图像预处理" aria-hidden="true">#</a> <strong>1.1 图像预处理</strong></h2><p>输入输出都是亮度图像</p><p>**目的：**抑制不想要的变形或者增强某些对于后续处理重要的图像特征</p><ul><li><strong>方法：</strong><ol><li>像素亮度变换</li><li>几何变换</li><li>局部邻域预处理</li><li>图像复原</li></ol></li></ul><h2 id="_1-2-像素亮度变换" tabindex="-1"><a class="header-anchor" href="#_1-2-像素亮度变换" aria-hidden="true">#</a> 1.2 像素亮度变换</h2><h3 id="_1-2-1-两类" tabindex="-1"><a class="header-anchor" href="#_1-2-1-两类" aria-hidden="true">#</a> 1.2.1 两类：</h3><ol><li>亮度校正：在修改像素亮度的同时要考虑像素原来的亮度和其在图像中的位置</li><li>灰度级变换：在修改像素亮度时无需考虑其位置</li></ol><h3 id="_1-2-2-常见的亮度变换有" tabindex="-1"><a class="header-anchor" href="#_1-2-2-常见的亮度变换有" aria-hidden="true">#</a> 1.2.2 常见的亮度变换有</h3><ol><li>亮度阈值化</li><li><strong>直方图均衡化:目的是创建一幅在整个亮度范围内具有相同分布的亮度图像</strong></li><li>对数的灰度级变换</li><li>查找表变换</li><li>伪彩色变换</li></ol><h2 id="_1-3-几何变换" tabindex="-1"><a class="header-anchor" href="#_1-3-几何变换" aria-hidden="true">#</a> 1.3 几何变换</h2><h3 id="_1-3-1作用-可以消除图像获取时所出现的几何变形" tabindex="-1"><a class="header-anchor" href="#_1-3-1作用-可以消除图像获取时所出现的几何变形" aria-hidden="true">#</a> 1.3.1作用：可以消除图像获取时所出现的几何变形</h3><h3 id="_1-3-2步骤" tabindex="-1"><a class="header-anchor" href="#_1-3-2步骤" aria-hidden="true">#</a> 1.3.2步骤：</h3><ol><li>像素坐标变换</li><li>亮度插值</li></ol><p>像素坐标变换将输入图像映射到输出图像，常用的有仿射变换和双线性变换，经过变换后，输出点的坐标一般并不符合数字离散光栅；插值被用来确定输出像素的亮度。常使用的有最近邻插值、线性插值、双三次插值</p><h2 id="_1-4局部预处理" tabindex="-1"><a class="header-anchor" href="#_1-4局部预处理" aria-hidden="true">#</a> 1.4局部预处理</h2><h3 id="_1-4-1-方法" tabindex="-1"><a class="header-anchor" href="#_1-4-1-方法" aria-hidden="true">#</a> 1.4.1 方法</h3><p>使用输入图像中一个像素的小邻域来产生输出图像中新的亮度数值</p><h3 id="_1-4-2-分类" tabindex="-1"><a class="header-anchor" href="#_1-4-2-分类" aria-hidden="true">#</a> <strong>1.4.2 分类</strong></h3><ol><li><strong>图像平滑</strong></li><li><strong>边缘检测</strong></li></ol><h3 id="_1-4-3图像平滑" tabindex="-1"><a class="header-anchor" href="#_1-4-3图像平滑" aria-hidden="true">#</a> 1.4.3图像平滑</h3><p>目的：抑制噪声或其他小的波动，等同于在傅里叶频域抑制高频部分</p><p><strong>算法：</strong></p><ol><li>均值<strong>滤波</strong></li><li><strong>中值滤波：是一种减小边缘模糊的非线性平滑方法</strong></li><li>非线性均值滤波：</li></ol><p>基于直接平均的平滑方法会模糊边缘，改进的方法通过在一致性的局部区域内平均来减小模糊。</p><p>中值滤波是一种非线性操作，它用邻域中亮度的中值代替图像中当前的点来减小模糊</p><h3 id="_1-4-4-边缘检测" tabindex="-1"><a class="header-anchor" href="#_1-4-4-边缘检测" aria-hidden="true">#</a> 1.4.4 边缘检测</h3><p>**通过梯度算子确定边缘：**边缘是亮度函数发生急剧变化的位置，它们的效果类似于在傅里叶频域抑制低频部分。</p><ul><li><p><strong>常用算子：</strong></p><ol><li>Roborts算子：2x2，缺点是对噪声高度敏感</li><li>Laplace算子：3x3，缺点是对某些边缘产生双重响应</li><li>Prewitt算子：3x3，与Sobel、Kirsch算子类似，近似一阶导数,在8个可能的方向估计梯度</li><li>Sobel算子：3x3，通常用于检测水平或者垂直边缘</li><li>Kirsch算子：</li></ol><p>图像锐化：一般使用Laplacian算子</p></li></ul><aside> 🪁 边缘是赋给单个像素的性质，它既有幅值强度又有方向。多数的梯度算子可以用卷积掩膜来表达，比如Roberts、Laplace、Prewitt、Sobel、Kirsch算子。 </aside><blockquote><p>卷积边缘检测子的主要缺点是：依赖尺度且对噪声敏感。选择某个最好的局部邻域算子尺度并不是那么容易的。</p></blockquote><p>二阶导数过零点比小尺度的梯度检测更加的稳定，可以用Laplacian of Gaussians (LoG)或者difference of Gaussions（DoG）来计算。</p><p>在多光谱图像中，也可以检测边缘。</p><h3 id="_1-4-5边缘提取" tabindex="-1"><a class="header-anchor" href="#_1-4-5边缘提取" aria-hidden="true">#</a> 1.4.5边缘提取</h3><p>Canny边缘检测子对受白噪声影响的阶跃型边缘是最优的。最优性标准是基于如下要求的:检测重要边缘、小的定位误差、单边缘响应。该检测子与一个对称2D高斯做卷积，再沿梯度方向微分；接着的步骤包括非最大边缘抑制、滞后阈值化处理和特征综合。</p><ol><li>Canny边缘提取</li></ol><p>（1）将图像f与尺度为delta的高斯函数做卷积</p><p>（2）对图像中每个像素，估计局部边缘的法线向量</p><p>（3）用非极大值抑制方法找到边缘位置</p><p>（4）计算边缘强度</p><p>（5）对边缘图像做滞后阈值化处理</p><p>（6）对递增的标准差，重复1-5步骤</p><p>（7）用特征综合办法，收集来自多尺度</p><h3 id="_1-4-6-角点检测" tabindex="-1"><a class="header-anchor" href="#_1-4-6-角点检测" aria-hidden="true">#</a> 1.4.6 角点检测</h3><p>1、Moravec检测</p><p>2、Harris角点检测器</p><p>（1）首先，对图像进行高斯滤波</p><p>（2）对每个像素，估计其垂直两个方向的梯度，使用近视导数的做两次一维卷积即可</p><p>（3）对每个像素和给定的邻域窗口：计算局部结构矩阵A，计算响应函数R（A）</p><p>（4）选取响应函数R（A）的一个阈值，以选取最佳候选角点，并完成非最大化抑制。</p><p>特点：对二维平移、旋转、少量光照变化、视角变化都不敏感，而且计算量很小</p><ol><li><p>最大稳定极值区域检测（MSER）</p><p>不仅在旋转、平移后，即便经历相似和仿射变换也可以被重复检测出来</p><p><strong>遍历极值区域算法流程：</strong></p><p>（1）根据亮度值对图像像素进行排序</p><p>（2）从最小灰度开始向上迭代</p><p>（3）考虑当前灰度值为g的像素；不断加入像素块并更新连通域结构</p><p>（4）如果两个区域合并，可以看做一个小块的消失</p><p>（5）当所有的亮度值都已被处理，我们得到一个保存每一个连通域面积的数据结构，可以看做是一个阈值的函数。</p></li></ol><h3 id="_1-4-7其它局部预处理" tabindex="-1"><a class="header-anchor" href="#_1-4-7其它局部预处理" aria-hidden="true">#</a> 1.4.7其它局部预处理</h3><ol><li>线条寻找</li><li>线条细化</li><li>线条不缺</li><li>兴趣点检测</li></ol><p>一幅图像中，诸如角点和最大稳定极值区域等结构包含更丰富的信息，检测边缘更为稳定，他们常用语图像匹配。</p><h2 id="_1-5图像复原" tabindex="-1"><a class="header-anchor" href="#_1-5图像复原" aria-hidden="true">#</a> 1.5图像复原</h2><p>1.5.1 概念：利用有关退化性质的知识来抑制退化，多数图像复原方法是基于整幅图像上的全局性去卷积的方法。</p><p>1.5.2 三类典型的退化具有简单的函数形式：物体相对于摄像机作近似匀速运动、不当的镜头焦距、大气扰动。</p><p>1.5.3 逆滤波假设退化是由线性函数引起的</p><p>1.5.4 维纳滤波给出了对未被噪声污染的原始图像的一个最小均方差估计；一般而言，它是退化图像的非线性函数。</p><h1 id="二、图像的分割" tabindex="-1"><a class="header-anchor" href="#二、图像的分割" aria-hidden="true">#</a> 二、图像的分割</h1><h2 id="_2-1-图像分割概述" tabindex="-1"><a class="header-anchor" href="#_2-1-图像分割概述" aria-hidden="true">#</a> 2.1 图像分割概述</h2><p>**目的：**将图像划分为与其中含有的真实世界的物体区域有强相关性的组成部分</p><p>**分割的方法：**阈值化、基于边缘的、基于区域的</p><p>每个区域可以用其封闭的边界来表示，每个封闭的边界描述一个区域</p><p>**主要的分割问题：**图像数据的不明确性和信息噪声</p><p>分割过程中可得到的先验信息越多，所获得的的分割效果就越好，</p><h2 id="_2-2-阈值化" tabindex="-1"><a class="header-anchor" href="#_2-2-阈值化" aria-hidden="true">#</a> 2.2 阈值化</h2><p>1、阈值化是最简单的分割处理，计算代价小、速度快。一个常量阈值用来分割物体和背景。既可以在整幅图像上施加阈值(全局阈值)，也可以依赖于图像部分而改变的阈值（局部阈值）。单个阈值在整幅图像上成功的例子很少。</p><p>2、阈值化有许多修正：局部阈值化、带阈值化、多阈值化</p><p>3、阈值检测方法自动地确定阈值。如果事先知道分割后的图像的某种性质，就可以简化阈值选择，因为阈值可以按照该性质得以满足的条件来选择。阈值检测可以使用p率阈值化、直方图形状分析、最优阈值等等。</p><p>4、在二模态直方图中，阈值可以确定为两个最大的局部极大值和极小值位置。</p><p>5、最优阈值化确定阈值为离对应于两个或更多个正态分布最大值之间的最小概率处最近的灰度值。其结果是具有最小错误的分割。</p><p>6、多光谱阈值化适合彩色或多谱段图像。</p><h2 id="_2-3-基于边缘的分割" tabindex="-1"><a class="header-anchor" href="#_2-3-基于边缘的分割" aria-hidden="true">#</a> <strong>2.3 基于边缘的分割</strong></h2><p>1、基于边缘的分割依赖于边缘检测子；边缘标示了图像在灰度、彩色、纹理等方面连续的位置。</p><p>2、图像噪声或不适合的信息通常可以导致在没有边界的地方出现了边缘以及在实际存在边界的地方没有出现边缘。</p><p>3、边缘图像阈值化是基于边缘图构建的，由合适的阈值来实现。</p><p>4、边缘松弛法在相邻边缘的上下文中考虑边缘。如果存在边界出现的足够证据，就增加局部边缘强度，反之亦然。全局松弛法优化过程建立边界。</p><p>5、可以定义内边界、外边界和拓展的边界。内边界总是区域的一部分；外边界绝不是，那么利用内边界、外边界的定义，如果两个区域相邻，它们绝对不会有共同的边界。拓展边界定义了相邻区域的单一的共同边界，可以用标准的像素坐标来标识。</p><p>6、如果定义了最优性准则，可以使用**（启发式）图搜索<strong>或</strong>动态规划方法**确定全局最优边界。基于搜索的边界检测是一种极为有利的分割方法——边界检测过程被转化为在加权图中搜索最优路径的问题。节点与费用关联起来，该费用反映边界通过某个特定节点（像素）的可能性。连接两个指定节点即起点和终点的最优路径（最优边界，相对于某个目标函数来说）就得以确定。</p><p>7、费用定义（评价函数）是边界检测成功的关键。费用计算的复杂度的变化范围覆盖了从简单的边缘强度的逆到复杂的先验知识的表示，先验知识是有关待搜索的边界、分割任务、图像数据等的。</p><p>8、图搜索使用Nilsson的A-算法，可以确保最优性。启发式图搜索可以显著地加快搜索速度，尽管启发式必须满足附加的约束才能确保最优性。</p><p>9、动态规划是基于最优化原理的，给出了从多个起点和终点中同时搜索最优路径的一个有效的方法。</p><p>10、使用A-算法搜索图，并不需要构造整个图，因为只有需要时才计算扩展节点的费用。在动态规划中，必须建好完整的图。</p><p>如果局部费用函数的计算简单，动态规划 可能是在计算上话费不高的选择。然而，对于特定的问题而言，两种图搜索方法（A-算法、动态规划）中究竟哪种方法更有效，取决于评价函数和A-算法的启发式信息的性质。</p><p>11、Hough变换分割适用于在图像中检测已知形状的物体。Hough变换可以检测直线和已知解析公式的曲线（物体边界）。在识别有遮挡物的或受到噪声影响的物体方面是鲁棒性的。</p><p>如果待搜索形状的解析公式并不存在，可以用广义Hough变化，参数曲线（区域边界）描述是基于样本情形的，并在学习阶段确定下来。</p><p>12、尽管根据完全的边界形成区域是微不足道的，根据部分边界确定区域可能是一个非常复杂的任务。可以根据如下的概率来简历区域：像素是否位于由部分边界包围的区域内。这些方法并不总是能找到可以接受的区域，但是它们在很多实际情况中很有用</p><h2 id="_2-4-基于区域的分割" tabindex="-1"><a class="header-anchor" href="#_2-4-基于区域的分割" aria-hidden="true">#</a> 2.4 基于区域的分割</h2><p>1、区域增长分割应该满足：完全分割条件、最大区域一致性条件</p><p>2、有三种基本的区域增长方式：区域归并、区域分裂、分裂与归并区域增长</p><p>3、在分水岭分割中，集水盆地代表了分割后图像的区域。分水岭分割的最初的算法开始与寻找从图像的每个像素到图像表面搞成的局部极小的下游路径。定义集水盆地为满足以下条件的所有像素的集合：这些像素的下游路径终止于同一个高程极小点。在第二种方法中，每个极小值代表了一个集水盆地，策略是冲这个高程极小值开始填充集水盆地。</p><p>4、使用区域增长方法分割图像，时常由于参数设置的非最优性造成的结果，不是含有太多的区域（欠增长）就是含有过少的区域（过增长）。许多后处理器被提出来改进的分类结果。简单的后处理器减少分割后图像中的小区域的数目。更复杂的后处理方法可以从区域增长得到的分割信息与基于边缘的分割结合起来。</p><h2 id="_2-5-匹配" tabindex="-1"><a class="header-anchor" href="#_2-5-匹配" aria-hidden="true">#</a> 2.5 匹配</h2><p>1、模板匹配可以用于在图像中定位已知表观的物体，也可以用于搜索的模式等，最好的匹配是基于某种最优性准则的，该准则依赖于物体的性质和物体的关系。</p><p>2、匹配标准的定义可以有多种方式，特别地，模式与被搜索的图像数据间的相关性是一个普遍性的匹配标准。</p><p>3、斜切匹配可以用于定位一维特征，不然使用基于费用的最优方法可能会失效。</p><h2 id="_2-6-评测" tabindex="-1"><a class="header-anchor" href="#_2-6-评测" aria-hidden="true">#</a> 2.6 评测</h2><p>1、基于模板的匹配耗时，但是该过程可以通过引入合适的模板匹配控制策略来加速</p><p>2、分割的评测对于决定分割算法，给定算法的参数选择非常有用。</p><p>3、监督式的评测比较了分割算法的输出和真值。</p><p>4、监督式的方法通常比较相互重叠区域，或者分割边界间的距离——存在一些不同的做法。</p><p>5、真值尝尝难以定义或者获得的代价很大。非监督式的方法评价分割效果时不需要考虑真值。</p><p>6、有很多非监督式的存在，但它们通常受到图像区域假设的限制。</p><h1 id="三、物体识别" tabindex="-1"><a class="header-anchor" href="#三、物体识别" aria-hidden="true">#</a> 三、物体识别</h1><h2 id="_3-1-物体识别和模式识别" tabindex="-1"><a class="header-anchor" href="#_3-1-物体识别和模式识别" aria-hidden="true">#</a> <strong>3.1 物体识别和模式识别</strong></h2><p>1、模式识别用于区域及物体分类，是复杂机器视觉处理中的重要组成部分。</p><p>2、所有识别操作都要根据一定的知识，既需要关于待处理物体的知识，也需要关于物体类别的更高层次上的一般性知识。</p><h2 id="_3-2-知识表示" tabindex="-1"><a class="header-anchor" href="#_3-2-知识表示" aria-hidden="true">#</a> <strong>3.2 知识表示</strong></h2><p>1、描述与特征 2、语法与语言 3、谓词逻辑 4、 产生式规则 5、模糊逻辑 6、语义网络 7、 框架和脚本</p><h2 id="_3-3-统计模式识别" tabindex="-1"><a class="header-anchor" href="#_3-3-统计模式识别" aria-hidden="true">#</a> 3.3 统计模式识别</h2><p>1、物体识别判断物体的类别，完成这种判定的仪器成为分类器</p><p>2、通常类别的数目事先已知，一般可以根据具体的问题确定。</p><p>3、分类器将使用从物体中检测出的模式来进行决策。</p><p>4、最小近邻分类器易于理解且应用广泛。在高维或者大数据情况下，使用它非常耗时，但可以通过K-D树或者其他近似方法进行改进。</p><p>5、统计模式识别的一个特点是定量的物体秒速，并且采用基本的数值描述——特征。所有可能的模式构成了模式空间或特征空间。在特征空间中形成聚类，而这些聚类可以用分类超曲面分开。</p><p>6、统计分类器是一个具有n输入和1输出的装置。每个输入端接收关于n个特征中一个的信息，这n个特征由待分类物体测量得到。一个R-分类器输出R个符号中的一个wr，即标识符。</p><p>7、在分类器学习过程中，分类参数由一个样本训练集合确定。两种常用的学习策略为概率密度估计和直接损失最小化。</p><p>9、支持向量机的训练基于最大化两类的间隔。支持向量机的非线性分类得益于核技巧。结合多个两类问题的分类器可以得到多类问题的分类器。</p><p>10、聚类分析不需要学习训练集合。它根据待处理模式集合中各元素间相似度将整个集合划分为若干个集合（聚类）。</p><h2 id="_3-4-神经元网络" tabindex="-1"><a class="header-anchor" href="#_3-4-神经元网络" aria-hidden="true">#</a> 3.4 神经元网络</h2><p>1、大多神经元方法都基于对基本处理单元（神经元）的组合，每个处理器接收若干个输入，并生成一个输出。对每个输入都有一个对应的权值与其相对应，输入即是关于输入加权和的函数。</p><p>2、前馈网络在模式识别问题中经常用到，前馈网络采用反向传播算法学习一个训练集合而得到。</p><p>3、自组织网络不需要学习训练集合来达到给模式聚类的目的。</p><h2 id="_3-5-句法模式识别" tabindex="-1"><a class="header-anchor" href="#_3-5-句法模式识别" aria-hidden="true">#</a> 3.5 句法模式识别</h2><p>1、句法模式识别的特点是对物体的定性描述。句法描述的物体的基本性质成为基元。关系结构用来描述物体基元间的关系。</p><p>2、所有基元都成的集合成为字符集。由字符集中字符组成的 能够描述一类物体的所有词语的集合称为描述语言。语法是一个规则的集合，这些规则定义了特定语言中由字符集中的字符构造词语的可能方式。</p><p>3、构造语法通常需要很多人为干预，对于简单的情况，可以采用自动从样本构造语法的过程，这一过程成为语法推导。</p><p>4、关于待处理词语是否能由特定语法产生的识别判定在语法分析过程中完成。</p><h2 id="_3-6-作为图匹配的识别" tabindex="-1"><a class="header-anchor" href="#_3-6-作为图匹配的识别" aria-hidden="true">#</a> <strong>3.6 作为图匹配的识别</strong></h2><p>1、模型与物体图表示间的匹配可以用于识别。精确的图匹配成为图的同构。判定图的同构计算量非常大。</p><p>2、在现实世界中，物体图和模型图很难精准匹配。图同构不能估计不匹配的程度。为了识别由相似图表示的物体，需要决定图的相似度。</p><h2 id="_3-7-识别中的优化技术" tabindex="-1"><a class="header-anchor" href="#_3-7-识别中的优化技术" aria-hidden="true">#</a> 3.7 识别中的优化技术</h2><p>1、优化问题寻找目标函数的最小值和最大值。目标函数的设计是性能的关键。</p><p>2、大多数传统的优化方法采用基于微积分的爬山方法。这些方法很可能只能找到局部极大值，而不是全局极大值。</p><p>3、遗传算法利用适者生存的自然进化机制寻找目标函数的最大值。可能的解表示为一些字符串。遗传算法对可能解的一代进行搜索，而不是对单个解。复制、交叉和突变的序列作用于字符串的当前代，从而生成新的一代。具有最高适合度的串表示了最终解。</p><p>4、模拟退火将两个基本优化原理结合起来，分而治之和迭代改进（爬山算法）。这种结合避免了算法陷入局部极值点。</p><h2 id="_3-8-模糊系统" tabindex="-1"><a class="header-anchor" href="#_3-8-模糊系统" aria-hidden="true">#</a> 3.8 模糊系统</h2><p>1、模糊系统可以表示为多变的、不精确的、不确定的和不准确的知识和信息。与人类表达知识的方式类似，模糊系统采用修饰语。</p><p>2、模糊推理在模糊系统模型的环境下进行，后者由控制、解、操作数据变量、模糊集合、限制、模糊规则及一个控制机制构成。</p><p>3、模糊集合表示模糊空间中的性质。隶属函数体现了描述的模糊性，表示元素属于某个特定集合的确定程度。模糊隶属函数的形状可以通过模糊集限制进行调整。一个限制及其模糊结合构成了一个语义实体，称为语义变量。</p><p>4、模糊if then规则是存储知识的模糊联想存储器。</p><p>5、模糊推理将单独模糊集中蕴含的知识结合起来做出决策。决定相关模糊区域隶属度的函数关系被称为合成方法，并且由此决定了模糊解空间。为了做出决策，逆模糊过程被采用。合成和逆模糊过程构成了模糊推理的基本部分。</p><h2 id="_3-9-boosting" tabindex="-1"><a class="header-anchor" href="#_3-9-boosting" aria-hidden="true">#</a> 3.9 Boosting</h2><p>1、Boosting 是一个一般性的方法，它能够结合多个分类性能一般的分类器（也就是所谓的弱分类器）的输出，提高分类性能。</p><p>2、在Boosting里，一个复杂的分类规则被很多简单的分类规则代替了。其中，每个简单的分类规则可能只是比随机选择稍微好一点。因此，Boosting能够通过结合仅仅稍微精确度的分类器的输出得到非常精确的结构。</p><p>3、AdaBoosting 是一个广泛应用的Boosting算法，其中在训练集上依次训练弱分类器，每次下一个弱分类器是在训练样本的不同权重集合上训练的。权重是有每个样本的分类器的难度确定的。分类的难度是通过前面步骤中的分类器的输出估计的。</p><p>4、所有弱分类器的处处结合起来形成一个强分类器。这种结合是基于加权投票多数的。</p><p>5、对于弱分类器的选择，除了要求它们比随机分类的效果好以外，没有其他要求。</p><h2 id="_3-10-随机森林" tabindex="-1"><a class="header-anchor" href="#_3-10-随机森林" aria-hidden="true">#</a> <strong>3.10 随机森林</strong></h2><p>1、随机森林却别适合于那些包含很多类且有大量数据集可用于训练的问题。</p><p>2、随机森林主要用于两类决策任务：分类和回归</p><p>3、在分类问题中，决策输出是一个类标签。</p><p>4、在非线性回归问题中，输出是一个连续的数值。</p><p>5、森林中的每一棵树都可以被并行的训练，一旦训练完成，每个内部结点都关联一个预先定义的二值测试，而之前未曾见过的数据模式根据内部结点测试的结果从根结点被送到一个叶子结点。</p><p>6、一个随机森林包含了一个决策树集合，其中每一个可能从训练集的一个随机采样的子集训练得到。</p><p>7、与使用单个树进行决策相比，集成多个稍微不同的树能够得到明显高的精度和更好的噪声鲁棒性。</p><h1 id="四、图像的理解" tabindex="-1"><a class="header-anchor" href="#四、图像的理解" aria-hidden="true">#</a> 四、图像的理解</h1><h2 id="_4-1-图像的理解" tabindex="-1"><a class="header-anchor" href="#_4-1-图像的理解" aria-hidden="true">#</a> 4.1 图像的理解</h2><p>1、机器视觉是由较低和较高的处理层次构成，图像理解在这种分类方法中是最高层次的处理。</p><p>2、类似于生物系统，计算机视觉的目的是通过可能的技术和处理方法得到机器行为。</p><h2 id="_4-2-图像理解的控制策略" tabindex="-1"><a class="header-anchor" href="#_4-2-图像理解的控制策略" aria-hidden="true">#</a> 4.2 图像理解的控制策略</h2><p>1、并行和串行的处理控制</p><p>并行处理同时进行多个计算</p><p>串行处理操作是顺序的</p><p>几乎所有的低层次图像处理都可以并行处理。高层次的处理使用更高层抽象形式，在本质上，通常是串行处理。</p><p>2、分层控制</p><p>由图像数据控制（自底向上的控制策略）：处理过程从光栅图像开始分割图像，再到区域（物体）描述，最后是识别。</p><p>基于模型的控制（自顶向下的控制策略）：根据可利用的知识得到一系列假设和期望的性质。</p><p>混合的控制策略使用数据驱动和模型驱动这两种控制策略。</p><h2 id="_4-3-尺度不变特征变换-sift" tabindex="-1"><a class="header-anchor" href="#_4-3-尺度不变特征变换-sift" aria-hidden="true">#</a> 4.3 尺度不变特征变换：SIFT</h2><p>SIFT可以在视角变换的图像中检测已知的图像特征点。</p><p>SIFT可以从图像中提取稳定的点，并且用鲁棒特征对其进行描述，这些特征的一个小的具有几何一致性的子集就可以确定物体在其它图像的出现。</p><p>SIFT包括三个阶段：关键点检测、特征提取和匹配。</p><p>SIFT只需要三个匹配点对就可以定义一个可以使用的变换并且非常鲁棒。</p><h2 id="_4-4-ransac-通过随机抽样一致性来拟合" tabindex="-1"><a class="header-anchor" href="#_4-4-ransac-通过随机抽样一致性来拟合" aria-hidden="true">#</a> 4.4 RANSAC：通过随机抽样一致性来拟合</h2><p>经典的模型拟合方法通常基于最小二乘法、最小残差化的平方和。</p><p>如果数据集有瑕疵，异常值会对模型产生负面影响。</p><p>RANSAC从一个基于可用数据中的少数样本的简单模型开始，然后利用剩下的数据点来确定一致点和异常点，排除异常点后重新计算模型。</p><p>RANSAC代表模型拟合的范畴的改变：“从少数开始增长”是最小二乘法和其它相关方法的对立面，后者期望通过平均来消除偏差。</p><h2 id="_4-5-点分布模型pdm" tabindex="-1"><a class="header-anchor" href="#_4-5-点分布模型pdm" aria-hidden="true">#</a> 4.5 点分布模型PDM</h2><p>AAM同时对形状及其变化以及表观及其变化进行建模。</p><p>在训练集中建模时对形状及表观变化分别进行主分量分析。</p><p>对形状和亮度模型的参数的组合进行主分量分析，从而得到一系列同时刻画形状和纹理变化的分量。</p><p>AAM是PDM的推广，它增强了图像块纹理的亮度统计模型。</p><p>AAM的方法需要一个训练样本（图像块以及确定的物体边界）。根据这个数据集推导出对形状、亮度以及它们的组合的变化的统计描述。</p><h2 id="_4-6-图像理解中的模式识别" tabindex="-1"><a class="header-anchor" href="#_4-6-图像理解中的模式识别" aria-hidden="true">#</a> 4.6 图像理解中的模式识别</h2><p>监督和非监督的模式识别方法可以用于像素分类。在图像理解阶段，从局部多谱图像像素值中得到的特征向量送到分类器，分类器负责为图像的每个像素分配标记。图像理解可以通过像素标记得到。</p><p>被标注的结果图像可能会出现很多小的区域，它们可能是错分类的。基于上下文的后处理方法用于避免这种错误分类。</p><p>局部表观和形状可以通过特征方向图（HOG）来描述。可以用（线性）分类器对图像中的物体进行检测和定位。</p><h2 id="_4-7-boosted层叠分类器" tabindex="-1"><a class="header-anchor" href="#_4-7-boosted层叠分类器" aria-hidden="true">#</a> 4.7 Boosted层叠分类器</h2><p>Boosted层叠分类器使用了注意焦点样式。</p><p>自适应提升算法计算了大量的简单特征并选出了少部分最好的特征。</p><p>在下一级阶段，分类器被组织成为一个层叠的序列，以简单而快速的分类器为首，用于快速排除物体检测假设，然后仅在剩下的未被排除的假设上应用更加复杂强大而缓慢的分类器。</p><h2 id="_4-8-基于随机森林的图像理解" tabindex="-1"><a class="header-anchor" href="#_4-8-基于随机森林的图像理解" aria-hidden="true">#</a> 4.8 基于随机森林的图像理解</h2><p>随机森林把图像分成预先定义大小的图像块</p><p>训练集中的图像块来自物体，并带有标签，非物体的图像块是背景</p><p>通过联合分类和回归同时进行物体检测和定位。</p><p>识别阶段考虑图像尺度，所以图像块大小都相同。</p><p>微软Xbox是随机森林最成功的商业应用。</p><h2 id="_4-9-场景标注、约束传播" tabindex="-1"><a class="header-anchor" href="#_4-9-场景标注、约束传播" aria-hidden="true">#</a> 4.9 场景标注、约束传播</h2><p>离散标注仅仅允许在最终标注结果中，为每个物体分配一个标记。努力的方向是在整幅图像的范围内获得相容的标注。离散标注总是可以发现一个相容的标记或检测出无法为该场景分配相容的标记。</p><p>概率标注允许在物体中同时存在多个标记。标记以概率加权，为每一个物体的标记分配标记记置信度。概率标注通常可以给定一个解释结果以及该解释的置信度量。</p><p>约束传播的策略有助于整幅图像中通过局部相容性调整得到全局相容（全局相容）</p><p>物体标注依赖于物体性质和潜在物体标记与其他直接相互作用的物体的标记之间的相容性度量。</p><p>当搜索解释树，树结点被分配到所有可能的标记，使用基于回溯的深度优先搜索方法。解释树搜索并测试所有可能的标记。</p><h2 id="_4-10图像的语义分割和理解" tabindex="-1"><a class="header-anchor" href="#_4-10图像的语义分割和理解" aria-hidden="true">#</a> 4.10图像的语义分割和理解</h2><p>语义区域增长技术是使用邻接区域之间的先验知识将上下文结合到区域归并中，然后利用约束传播得到整幅图像全局最优的图像分割和解释。</p><p>遗传图像解释是基于假设和验证准则的。一个目标函数用于估计分割的优劣，使用遗传算法优化图像解释，该算法负责产生新的图像分割种群和用于检测的解释假设。</p><h2 id="_4-11-隐马尔可夫模型" tabindex="-1"><a class="header-anchor" href="#_4-11-隐马尔可夫模型" aria-hidden="true">#</a> 4.11 隐马尔可夫模型</h2><p>当试图进行图像理解时，我们常常可以将观察到的模式建模为跃迁系统。如果跃迁是事先知道的，且我们知道某个时刻系统的状态，它们就可以被用于帮助决定下一时刻的状态。马尔可夫模型是该思想最简单的例子。</p><p>隐马尔可夫模型要处理的三个问题：评价、解码和学习。</p><p>Viterbi算法可以用于从可能是不精确的观察中重建系统的演进。</p><p>简单的隐马尔可夫模型本身又有各种扩展：两个（或多个）概率上相互合作的隐马尔可夫模型，即耦合的马尔可夫模型非常成功。</p><h2 id="_4-12-贝叶斯信念网络" tabindex="-1"><a class="header-anchor" href="#_4-12-贝叶斯信念网络" aria-hidden="true">#</a> 4.12 贝叶斯信念网络</h2><p>由马尔可夫概率关系连接的隐藏和可见活动组成的网络。</p><p>如果这些网络无环，给定先验概率，有效的算法可以计算后验概率。</p><p>贝叶斯新年网络是一个通用的技术，在计算机领域广泛用于帮助推理。</p><h2 id="_4-13-马尔可夫随机场" tabindex="-1"><a class="header-anchor" href="#_4-13-马尔可夫随机场" aria-hidden="true">#</a> 4.13 马尔可夫随机场</h2><p>马尔可夫随机场是一种概率的网络，是局部影响的马尔可夫准则的推广。</p><p>理论上，它们的行为可以用团来刻画。如果网络是一个网格，这表明团是直接近邻：这在网格是像素的时候最为有用。</p><p>该理论可以映射到许多视觉问题中，其中先验假设可以解释图像。最可能的解释可以通过马尔可夫随机场产生。</p><p>先验和观测之间的强度可以控制。</p><p>最大化马尔可夫随机场似然可以通过高效的图分割方法求解。</p><p>该理论在视觉领域应用很广泛。</p><h2 id="_4-14-高斯混合模型和期望最大化" tabindex="-1"><a class="header-anchor" href="#_4-14-高斯混合模型和期望最大化" aria-hidden="true">#</a> 4.14 高斯混合模型和期望最大化</h2><p>高斯混合模型可以为真实场景中的很多方面提供易得的解析表示。</p><p>期望最大化算法可以确定高斯混合模型的参数（但可能不是最优的）</p><p>期望最大化算法是用于寻找某种描述性模型的未知参数的通用迭代过程。</p><p>利用Baum-Welch算法训练隐马尔可夫模型是期望最大化算法的另一个特例。</p><h1 id="五、3d几何、对应、从亮度到3d" tabindex="-1"><a class="header-anchor" href="#五、3d几何、对应、从亮度到3d" aria-hidden="true">#</a> 五、3D几何、对应、从亮度到3D</h1><h2 id="_5-1-概述" tabindex="-1"><a class="header-anchor" href="#_5-1-概述" aria-hidden="true">#</a> 5.1 概述</h2><p>3D视觉的目标在于从2D场景推断3D信息，是一个内含几何和辐射的困难任务。几何问题是单幅图像并不提供有关3D结构的充分信息，而辐射问题是创建亮度图像的物理过程的复杂性。这个过程是负责的，通常并非所有输入参数是精确地知道的。</p><h2 id="_5-2-3d视觉任务" tabindex="-1"><a class="header-anchor" href="#_5-2-3d视觉任务" aria-hidden="true">#</a> 5.2 3D视觉任务</h2><p>有几种不同的研究3D视觉的方法，可以分类为自底向上（或重构）或自上而下（基于模型的视觉）</p><p>Marr的理论，成形于20世纪70年代，是自底向上方法的一个例子。其目标是在有关场景中物体的非常弱的假设下，从一副或更多幅亮度图像重构出定性和定量的3D几何描述。</p><p>按自底向上的形式排出四个表达：（1）输入亮度图像（2）基元图，以观察者为中心的坐标系中表达图像中的显著边缘（3）2.5D图，表达到观察者的深度和表面的局部方向；（4）3D表达，在于物体自身相关的坐标系中表达物体的几何。</p><p>2.5D图是基元图通过各种称之为由X到形状的技术导出的。</p><p>3D表达非常难以获得，这个步骤还没有在一般情况下得到解决。</p><p>新的感知范畴，比如主动的、有目的的、定性的视觉，试图为解释视觉的“理解”方面提供计算模型。</p><p>还没有直接带来实际应用，但是很多部分技术（比如，从X到形状）被广泛应用到实践中。</p><h2 id="_5-3-3d视觉及其几何" tabindex="-1"><a class="header-anchor" href="#_5-3-3d视觉及其几何" aria-hidden="true">#</a> 5.3 3D视觉及其几何</h2><p>3D透视几何是3D视觉的基本数学工具，正如它在解释针孔相机中那样。</p><p>在3D世界中的平行线在2D图像中的投影并非是平行的。</p><p>在单透视相机的情况，可以做有关内外相机参数标定的仔细研究。</p><p>极限几何告诉我们对应点的搜索是内在的一维的。这可以用基本举证表达为代数形式。</p><p>这个工具有几个应用，包括图像矫正、从标定后相机测量进行子运动估计、从两个完全标定好的相机做3D欧式重构、从两个只做了内参标定的相机做3D相似重构、从两个未标定的相机做3D射影重构。</p><p>从三个相机的视图间存在三线性关系，这在代数上用三焦距张量表达。</p><p>三线性张量的应用是极线迁移；如果已知两个图像，还有三焦距张量，第三个透视图像可以计算出来。</p><p>对应问题是3D视觉的核心；存在各种被动的和主动的求解技术。</p><h2 id="_5-4-辐射学和3d视觉" tabindex="-1"><a class="header-anchor" href="#_5-4-辐射学和3d视觉" aria-hidden="true">#</a> 5.4 辐射学和3D视觉</h2><p>辐射学告诉我们图像形成的物理机制。</p><p>若已知光源的未知，类型、表面方向和观察者位置，就可以从一幅亮度图像得到某种有关深度和表面方向的信息。</p><p>这个任务被称为由阴影到形状。</p><p>该任务是不明确的和数值上不稳定的。由阴影到形状可以在lambertian表面的简单情况下理解。</p><p>有一个实际的方法，它使用一个相机和三个已知光源，选择性照明提供了三个亮度图像。</p><p>光度测量立体视觉可以测量表面方向。</p><h2 id="_5-5-3d视觉应用" tabindex="-1"><a class="header-anchor" href="#_5-5-3d视觉应用" aria-hidden="true">#</a> 5.5 3D视觉应用</h2><p>1、由X到形状</p><p>形状可以由运动、光流、纹理、聚焦/散聚、会聚、轮廓抽取出来。</p><p>这些技术中的每一个都可以用于到处Marr视觉理论中的2.5D图，它们自身具有实用价值。</p><p>2、完全的3D物体</p><p>对于重建具有平的面的物体而言，线条标注是一个过时但是容易接触到的技术。</p><p>转换为3D物体需要以物体为重心的坐标系。</p><p>3D物体可以机械地测量或通过X线断层摄影术量测。</p><p>体建模策略包括构造立体几何、超二次曲面和广义圆柱。</p><p>表面建模策略包括：边界表达、三角剖分表面和二次曲面面偏。</p><p>3、基于3D模型的视觉</p><p>为了从一组距离图像中创建完整的3D模型，必须首先标记测量得到的表面，即应该找到使一个表面与另一个相匹配的旋转和平移。</p><p>基于模型的视觉使用有关物体的先验知识来简化识别。</p><p>Goad算法是在单幅亮度图像中搜索多面体的方法。</p><p>存在从距离图像中确定曲面物体的技术。</p><p>4、基于2D视图的3D场景表达</p><p>基于2D视图和3D场景表达可以用多视图表达或geons获得。</p><p>选择存储一些参考图像再从它们绘制任意视图是肯恩给定。</p><p>视图内插并不足够，还需要视图外推。这需要知道几何信息，基于视图的方法与3D几何重建相差并不明显。</p><p>从2D无组织视图集合进行3D重建是可能的。该方法最近经常被使用，比如，谷歌街景。</p><p>5、重建场景集合</p><p>大尺度场景特征比如平面参数可以从直线和近似尺寸等已知物体的特性得到。</p><p>众所周知的集合结果可以得到小食店和地面方向。</p><p>尽管大尺度的线索不能得到，相似方法也能很好地工作。</p><h2 id="_5-6-重要概念" tabindex="-1"><a class="header-anchor" href="#_5-6-重要概念" aria-hidden="true">#</a> 5.6 重要概念</h2><p>单应性：也认为是共线或投影变换。</p><aside> 🪁 极限几何学——基本矩阵 反映【**空间一点P的像素点】**在【**不同视角摄像机】**下【**图像坐标系**】中的表示之间的关系。 设$u$， $^CP_a$是场景点X在a,b相机的坐标系，那么存在$u&#39;^{T} F u=0$,其中$F$被称为基本矩阵。 </aside><aside> 🪁 摄像机的相对运动——本质矩阵 反映【**空间一点P的像点】**在【**不同视角摄像机】**下【**摄像机坐标系】**中的表示之间的关系。 设 $^CP_a$， $^CP_a$是场景点X在a,b相机的坐标系，那么存在 $^CP_a^{T} E ^CP_a=0$,其中$F$被称为基本矩阵。 </aside><h1 id="六、形态学处理" tabindex="-1"><a class="header-anchor" href="#六、形态学处理" aria-hidden="true">#</a> 六、形态学处理</h1><h2 id="_6-1-形态学目的" tabindex="-1"><a class="header-anchor" href="#_6-1-形态学目的" aria-hidden="true">#</a> 6.1 形态学目的</h2><p>图像预处理（去噪声、简化形状）</p><p>增强物体结构（抽取骨骼、细化、粗化、凸包）</p><p>从背景中分割图像</p><p>物体量化描述（面积，周长，阴影）</p><h2 id="_6-2-形态学四原则" tabindex="-1"><a class="header-anchor" href="#_6-2-形态学四原则" aria-hidden="true">#</a> 6.2 形态学四原则</h2><p>平移相容、尺度缩放相容、局部知识、上部半连通</p><h2 id="_6-3-数学形态学" tabindex="-1"><a class="header-anchor" href="#_6-3-数学形态学" aria-hidden="true">#</a> 6.3 数学形态学</h2><aside> 🪁 数学形态学强调形状在图像预处理、分割和物体描述中的作用。它产生了具有数学上合理的快速算法。 </aside><aside> 🪁 基本实体是点集。形态学中的变换由来自一个较简单的非线性代数中的运算符描述。数学形态学是传统意义上基于线性运算符的信号处理方法的一个对应。 </aside><aside> 🪁 数学形态学通常分为处理二值图像的二值数学形态学，和处理灰度图像的灰度级数学形态学。 </aside><h2 id="_6-4-形态学运算" tabindex="-1"><a class="header-anchor" href="#_6-4-形态学运算" aria-hidden="true">#</a> 6.4 形态学运算</h2><aside> 🪁 形态学运算是一个两个集合间的关系。其中一个集合是图像，另一个则是小探测器，称为结构元素，结构元素系统地扫描整幅图像；在图像的每个位置上的关系都被记录下来，作为输出图像。 </aside><aside> 🪁 形态学的基本运算是使物体扩张的膨胀和使物体缩小的腐蚀。腐蚀和膨胀不是可逆运算；它们的组合构成了新的运算，开运算和闭运算。 </aside><aside> 🪁 细长的物体通常简化为一个股价——一条位于“物体中轴”的线。 </aside><aside> 🪁 到背景的距离函数是许多快速形态学运算的基础。最终腐蚀经常用来标记斑点的中心。一种高效的重构算法从标记开始生长物体，知道其原始边界。 </aside><blockquote><p>测地变换允许在处理过程中变换元素，这就使算法更加灵活。</p></blockquote><aside> 🪁 测地方法为图像分割提供了快速高效的算法。分水岭变换是最好的分割方法之一。目标区域的边界是影响区域的区域极小值（即地形中的海或湖）。区域边界是这些海或湖的分水线， </aside><blockquote><p>分割通常从交互选择的标记或者通过利用图像语义性质的某种自动化过程开始。</p></blockquote><blockquote><p>粒度测定法是一种分析图像中不同大小例子分布情况的量化工具（类似于筛分法）。得到的结果是一条离散的粒度测定取下（谱）</p></blockquote><h1 id="七、运动分析" tabindex="-1"><a class="header-anchor" href="#七、运动分析" aria-hidden="true">#</a> 七、运动分析</h1><h3 id="_7-1-运动分析概述" tabindex="-1"><a class="header-anchor" href="#_7-1-运动分析概述" aria-hidden="true">#</a> 7.1 运动分析概述</h3><aside> 🪁 运动分析主要处理三种类型的运动相关问题：运动检测、移动物体检测和定位、三维物体性质的推导。 </aside><aside> 🪁 我们通常称三维运动的二维表示为运动场，其中每个点被赋予一个速度向量，它对应于运动方向、速率以及离开在适当图像上的观察者的距离。 </aside><aside> 🪁 光流是运动场的一种构造方法，其中要确定的可能是在图像所有点上的运动方向和运动速度。 </aside><aside> 🪁 特征点的对对应关系是运动场构造的另一种方法。只确定对应特征点上的速度向量。 </aside><aside> 🪁 物体运动参数可以从计算出的运动场向量中得到。 </aside><blockquote><p>运动假设能够帮助定位移动物体，经常使用的假设包括：最大速度、小加速度、共同运动、相互对应关系</p></blockquote><h3 id="_7-2-差分运动分析" tabindex="-1"><a class="header-anchor" href="#_7-2-差分运动分析" aria-hidden="true">#</a> 7.2 差分运动分析</h3><aside> 🪁 假设在固定的相机位置和在恒定的光照条件下，将在不同时刻上获取的图像相减，就可以检测出运动。 </aside><aside> 🪁 存在许多于这个方法相关联的问题，相减的结果高度依赖于物体—背景的对比度。 </aside><aside> 🪁 累计差分图像提高了差分运动分析的性能。他提供了众多信息，包括有关于运动方向和其它与时间相关的运动特性以及缓慢运动和小的物体运动的信息。 </aside><aside> 🪁 检测移动边缘有助于进一克服差分运动分析方法的局限。通过结合空间和时间图像梯度，差分分析能够可靠的用于检测缓慢移运动和小的物体运动的信息。 </aside><h3 id="_7-3-光流" tabindex="-1"><a class="header-anchor" href="#_7-3-光流" aria-hidden="true">#</a> 7.3 光流</h3><aside> 🪁 光流反映了在时间间隔dt内由于运动造成的图像变化，其中时间间隔dt必须满足足够短以保证小的帧间运动变化。 </aside><aside> 🪁 光流场是一个速度场，它表示物体点的三维运动在二维图像上的表现。 </aside><aside> 🪁 光流计算基于两个假设： </aside><blockquote><p>所观测到的任务物体点的亮度不随时间变化</p></blockquote><blockquote><p>图像平面中的近邻点以相类似的方式移动（速度平滑性约束）</p></blockquote><aside> 🪁 如果违背恒定亮度和速度平滑性约束假设，将会出现光流计算错误。在实际图像中，这种违背是很常见的。典型的，光流在高纹理区域、移动边界周围、深度不连续处等位置会发生剧烈的变化。所以导致的误差会在整个光流解上传播。 </aside><aside> 🪁 全局误差传播是全局光流计算方案的最大问题，局部光流估计帮助克服这些困难。 </aside><aside> 🪁 光流分析并不以运动轨迹为结果；代替的是检测出更一般性的运动特性，这样可以显著提高复杂运动分析的可靠性，检测出的参数包括：相互物体速度、延伸焦点（FOE）确定、距离（深度）确定、碰撞检测。 </aside><h3 id="_7-4-基于兴趣点对应关系的运动分析" tabindex="-1"><a class="header-anchor" href="#_7-4-基于兴趣点对应关系的运动分析" aria-hidden="true">#</a> 7.4 基于兴趣点对应关系的运动分析</h3><aside> 🪁 这个方法在所有的序列图像中寻找显著点（兴趣点，特征点）——这些点与它们的周围环境最不相似，代表了物体的角点、边界或图像中任何其他典型的特征，对它们可以随着时间进行跟踪。 </aside><aside> 🪁 Lucas-Kanade 跟踪器广泛使用：假设局部快移动类似，它通过求解一个线性系统来进行鲁棒性跟踪。 </aside><aside> 🪁 KLT跟踪器使用Lucas-Kanade方法来自动获得在图像【视频】中稳定的点。 </aside><aside> 🪁 点检测后面跟着匹配过程，它寻找这些点之间的对应关系。 </aside><aside> 🪁 这个处理的结果是产生一个稀疏的数据场 </aside><aside> 🪁 基于对应关系的运动检测甚至可以用于具有相对较长的帧间时间间隔的情况。 </aside><h3 id="_7-5-特定运动模式的检测" tabindex="-1"><a class="header-anchor" href="#_7-5-特定运动模式的检测" aria-hidden="true">#</a> 7.5 特定运动模式的检测</h3><aside> 🪁 特定运动信息可以从训练集合的实例中推导出。可以作到区分不同形式的运动和其他现象。 </aside><aside> 🪁 同时使用基于图像和基于短期运动的信息。 </aside><aside> 🪁 运动检测使用工作与任意尺度的简单矩形滤波器的小集合；通过检测在时序上对应图像块的差异来检测运动。滤波器的小集合是使用AdaBoost方法从一个大的滤波器集合中选择出来。 </aside><h3 id="_7-6-视频跟踪" tabindex="-1"><a class="header-anchor" href="#_7-6-视频跟踪" aria-hidden="true">#</a> 7.6 视频跟踪</h3><aside> 🪁 背景建模： 视频跟踪一般基于当前帧于背景模型之间的某种差分。 简单的方法容易受噪声和微弱背景变化的影响。 更为鲁棒性的方法有很多，其中最为主要的是为每个像素建立一个混合多高斯背景模型。通过一些启发式的近似来对参数进行实时更新。 </aside><aside> 🪁 基于核函数的跟踪： 基于梯度的物体定位和跟踪可以通过使用一个通用相关准则来完成。 基于核函数的跟踪方法非常高效，能够实时进行跟踪。 这种方法使用一个各向同性核函数在空间上给目标施加一个掩膜，然后在其上应用一个平滑相似度函数来将跟踪问题转化为目标前一时刻邻域范围内的最大相似度搜索。 相似度的优化过程使用的是均值译为算法。 </aside><aside> 🪁 目标轨迹分析： 如果跟踪几个独立的目标，解决的方法常常依赖于运动约束和最小路径一致性函数，这个一致性函数是对导出的目标轨迹和运动约束的一致性度量。 </aside><h3 id="_7-7-运动模型" tabindex="-1"><a class="header-anchor" href="#_7-7-运动模型" aria-hidden="true">#</a> 7.7 运动模型</h3><aside> 🪁 预测其—修正器机制可以用于在存在观测噪声情况下的物体运动估计，然后再对估计进行修正。 </aside><aside> 🪁 卡尔曼滤波： 卡尔曼滤波器是一种常用的动态估计方法，代表了一类用于运动分析的有力工具。 卡尔曼滤波器要求系统是线性的，同时要求系统观测是隐状态的线性方程。噪声，包括系统的和观测的，都假设是高斯白噪声。 </aside><aside> 🪁 粒子滤波： 卡尔曼滤波被广泛应用，但是有一些局限假设。粒子滤波器克服了大多数假设。 粒子滤波器基于每步时间上的统计采样方法；基于图像观测对采样进行调整。 粒子滤波器在视觉中常见的实现是CONDENSATION(condensation)。 </aside><h3 id="_7-8-跟踪学习检测——tld" tabindex="-1"><a class="header-anchor" href="#_7-8-跟踪学习检测——tld" aria-hidden="true">#</a> 7.8 跟踪学习检测——TLD</h3><aside> 🪁 绝大多数跟踪器受限于姿态变化、遮挡等。 很多跟踪器都包含了一个检测器来在图像中（重新）发现物体的表现。 TLD同时进行跟踪和检测，并且也动态地更新它学习的物体模型。 它在一定尺度范围上操作，并且常常基于Lucas-Kanade跟踪器。 在跟踪过程中，模型吸收新的表现，同时删减掉哪些被认为不可能的表现。 </aside><h1 id="八、图像压缩" tabindex="-1"><a class="header-anchor" href="#八、图像压缩" aria-hidden="true">#</a> 八、图像压缩</h1><h2 id="_8-1-图像数据压缩" tabindex="-1"><a class="header-anchor" href="#_8-1-图像数据压缩" aria-hidden="true">#</a> 8.1 图像数据压缩</h2><aside> 🪁 图像压缩的主要目的是在没有明显信息损失的情况下，尽量减少图像数据量。 数据压缩算法试图在保证能够重建图像的前提下去除数据冗余（数据相关性）；这叫做信息保留压缩。 典型的图像压缩/解压缩 过程包括了：去除数据冗余、编码、传输、解码和重建。 数据压缩的方法可以分为两类： 信息保留——lossless（无损）压缩保证无措的数据重建。 信息有损的压缩方法不能保证信息的完整性。 </aside><h2 id="_8-2-图像数据性质" tabindex="-1"><a class="header-anchor" href="#_8-2-图像数据性质" aria-hidden="true">#</a> 8.2 图像数据性质</h2><aside> 🪁 图像的平均信息量是一个很重要的性质，可以用熵来衡量。 已知图像熵后，就可以确定信息冗余。 </aside><h2 id="_8-3-图像数据压缩中的离散图像变换" tabindex="-1"><a class="header-anchor" href="#_8-3-图像数据压缩中的离散图像变换" aria-hidden="true">#</a> 8.3 图像数据压缩中的离散图像变换</h2><aside> 🪁 图像数据可以用离散图像变换的系数来表示。变换系数按照它们的重要程度，例如对于图像信息量的贡献进行排序，贡献小的系数被忽略。 Kahunen-Loeve 变换对于去除相关的（冗余）图像数据最有效。 余弦、傅里叶、哈达玛、沃尔什以及二值变换都可以用于图像数据的压缩。 离散余弦变换DCT-Ⅱ的性能比其它变换更接近于Kahunen-Loeve变换。DCT通常用于小的图像块（典型的是8x8像素），当压缩率高时，会产生降低质量的块效应。 </aside><h2 id="_8-4-预测压缩方法" tabindex="-1"><a class="header-anchor" href="#_8-4-预测压缩方法" aria-hidden="true">#</a> 8.4 预测压缩方法</h2><aside> 🪁 对于一个图像元素，预测压缩使用图像的信息冗余，通过它周围的灰度值对它本身做出估计。 我们可以期望估计值和真实值之间的差别的绝对值相对比较小，而将这个差别和预测模型参数一起编码和传送。 </aside><h2 id="_8-5-矢量量化" tabindex="-1"><a class="header-anchor" href="#_8-5-矢量量化" aria-hidden="true">#</a> 8.5 矢量量化</h2><aside> 🪁 矢量量化压缩技术基于将图像分成小块，并用矢量表示它们。 输入数据矢量使用码字字典中的唯一码字进行编码；存储和传输的是矢量编码，而不是矢量。 码字字典（码本）和编码后的数据一同传输。 </aside><h2 id="_8-6-分层和渐进的压缩方法" tabindex="-1"><a class="header-anchor" href="#_8-6-分层和渐进的压缩方法" aria-hidden="true">#</a> 8.6 分层和渐进的压缩方法</h2><aside> 🪁 通过金字塔表示一个数据源，就可以减少比特量。当图像具有大范围相同灰度区域时，使用四叉树可以获得显著的数据量缩减。 分层压缩使得渐进和只能图像传输变得更容易。 渐进图像传输基于这样一个事实：某些情况下不必传输所有的图像数据。 只能图像传输基于人类视觉感知器的感觉性质——在人眼不注意的图像区域没有必要以全分辨率来显示。 </aside><h2 id="_8-7-压缩方法比较" tabindex="-1"><a class="header-anchor" href="#_8-7-压缩方法比较" aria-hidden="true">#</a> 8.7 压缩方法比较</h2><aside> 🪁 以变换为基础的方法可以更好的保持主观图像质量，对于图像内和图像间的统计性质变化的敏感性较低。 预测方法可以以小得多的代价取得高压缩率，而且速度比基于变换和矢量量化的压缩机制要快得多。 矢量量化方法需要一个复杂的编码器，它们的参数罪域图像数据十分敏感，并且会模糊图像边缘，它的有点在于解码机制较简单，可以只包含一个查找表。 </aside><h2 id="_8-8-其它技术" tabindex="-1"><a class="header-anchor" href="#_8-8-其它技术" aria-hidden="true">#</a> 8.8 其它技术</h2><aside> 🪁 分形图像压缩技术提供特别高的压缩率和高质量的图像重建。它的主要原理是将图像分为碎片（分形），并认为自相似的哪些是一样的。分形图像可以无限放大，因此分形压缩与分辨率无关，一个压缩图像可以用于以任意分辨率的显示。 </aside><h2 id="_8-9-编码" tabindex="-1"><a class="header-anchor" href="#_8-9-编码" aria-hidden="true">#</a> 8.9 编码</h2><aside> 🪁 哈夫曼编码可以提供理想的压缩和无措的解压缩。哈夫曼编码的主要思想是用变长编码表示数据，较短的码字表示出现频率较高的数据。 </aside><h2 id="_8-10-jpeg和mpeg-图像压缩" tabindex="-1"><a class="header-anchor" href="#_8-10-jpeg和mpeg-图像压缩" aria-hidden="true">#</a> 8.10 JPEG和MPEG 图像压缩</h2><aside> 🪁 JPEG和JPEG-2000代表了图像压缩数据的国际标准。 JPEG图像压缩为通用的彩色静态图像压缩制定了一个标准。这个标准在很多应用领域得到了广泛的应用。JPEG压缩模式有四种： 基于DCT的顺序预测、基于DCT的渐进压缩、无损顺序预测压缩、有损和无损分层压缩。 </aside><aside> 🪁 JPEG-2000 是为了克服JPEG的局限性而设计的，尽管名称相似，但是不同于JPEG。 JPEG-2000 基于小波变换并提供了大量灵活的关于质量、分辨率和空间伸缩性的新功能。 JPEG-2000 通常情况下对于需要高质量图片重建和低比特流压缩的应用胜过JPEG压缩。 MPEG标准为全运动的视频图像序列而制定的。 现在常提及的三种标准： 用于压缩低分辨率全运动视频的MPEG-1。 用于高分辨率标注标准的MPEG-2。 用于压缩刷新要求不高的小帧全运动的MPEG-4。 </aside>',384),r=[p];function s(n,t){return e(),d("div",null,r)}const c=a(h,[["render",s],["__file","图像处理概述.html.vue"]]);export{c as default};
