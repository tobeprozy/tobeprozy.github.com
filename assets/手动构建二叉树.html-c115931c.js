const t=JSON.parse('{"key":"v-35992c28","path":"/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html","title":"二叉树手动构建","lang":"zh-CN","frontmatter":{"title":"二叉树手动构建","article":true,"date":"2023-04-14T00:00:00.000Z","category":["C++"],"tag":["算法","C++"],"order":null,"icon":"🧑","description":"::: tips 二叉树手动构建 ::: 二叉树手动构建 已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 已知后序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 但是已知前序遍历序列和后序遍历序列，是不能确定一棵二叉树的。 下面例子通过前序遍历和中序遍历确定唯一的一棵二叉树。 前序遍历：EACBDGF 中序遍历：ABCDEFG 1、首先根据前序遍历找出根节点是E，然后根据中序遍历可以知道ABCD是E的左子树，FG是E的右子树。","head":[["meta",{"property":"og:url","content":"https://tobeprozy.github.io/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html"}],["meta",{"property":"og:site_name","content":"南叔先生-开源笔记"}],["meta",{"property":"og:title","content":"二叉树手动构建"}],["meta",{"property":"og:description","content":"::: tips 二叉树手动构建 ::: 二叉树手动构建 已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 已知后序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 但是已知前序遍历序列和后序遍历序列，是不能确定一棵二叉树的。 下面例子通过前序遍历和中序遍历确定唯一的一棵二叉树。 前序遍历：EACBDGF 中序遍历：ABCDEFG 1、首先根据前序遍历找出根节点是E，然后根据中序遍历可以知道ABCD是E的左子树，FG是E的右子树。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T10:25:41.000Z"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:published_time","content":"2023-04-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T10:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树手动构建\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-26T10:25:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1682504741000,"updatedTime":1682504741000,"contributors":[{"name":"tobeprozy","email":"904762096@qq.com","commits":1}]},"readingTime":{"minutes":1.29,"words":387},"filePathRelative":"12C_plus_plus/算法学习/手动构建二叉树.md","localizedDate":"2023年4月14日","excerpt":"<p>::: tips\\n二叉树手动构建\\n:::</p>\\n<ul>\\n<li>\\n<p>二叉树手动构建</p>\\n<p>已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 已知后序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 但是已知前序遍历序列和后序遍历序列，是不能确定一棵二叉树的。 下面例子通过前序遍历和中序遍历确定唯一的一棵二叉树。</p>\\n<p>前序遍历：EACBDGF</p>\\n<p>中序遍历：ABCDEFG</p>\\n<p>1、首先根据前序遍历找出根节点是E，然后根据中序遍历可以知道ABCD是E的左子树，FG是E的右子树。</p>\\n</li>\\n</ul>\\n<figure><figcaption></figcaption></figure>","autoDesc":true}');export{t as data};
