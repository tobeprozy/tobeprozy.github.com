import{_ as t,Y as o,Z as l,$ as a,a0 as e,a1 as s,a2 as i,D as r}from"./framework-d651fda7.js";const d="/assets/1-9b409af6.png",c={},p=i('<h1 id="每日一问—05将网络图的链接保存为本地链接" tabindex="-1"><a class="header-anchor" href="#每日一问—05将网络图的链接保存为本地链接" aria-hidden="true">#</a> 每日一问—05将网络图的链接保存为本地链接</h1><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>按shift+ctrl+p，输入local images，选择Download images locally，即可将网络图片保存到本地。然后将图片复制到当前文件的photo文件夹下，再将图片的链接替换为本地链接即可。</p></div><h1 id="obsidian-local-images" tabindex="-1"><a class="header-anchor" href="#obsidian-local-images" aria-hidden="true">#</a> Obsidian Local Images</h1><p><strong>This plugin is still young, backups are a good idea.</strong></p>',5),g={href:"https://obsidian.md/",target:"_blank",rel:"noopener noreferrer"},u=i(`<p>The plugin finds all links to external images in your notes, downloads and saves images locally and finally adjusts the link in your note to point to the local image files.</p><figure><img src="https://raw.githubusercontent.com/aleksey-rezvov/obsidian-local-images/HEAD/docs/obsidian-local-images-sep2021.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>For example, we initially have a markup in the note like this:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>![](https://picsum.photos/200/300.jpg)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Local Images plugin will download image 300.jpg, save in <strong>media</strong> subdirectory of the vault, than change the markup so it refer to locally stored image:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>![](media/300.jpg)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It is useful when you copy paste parts from web-pages, and want to keep images in your vault. Because external links can be moved or expired in future.</p><figure><img src="https://raw.githubusercontent.com/aleksey-rezvov/obsidian-local-images/HEAD/docs/obsidian-local-images-html-sep2021.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Use it with commands:</p><p><strong>Download images locally</strong> -- your active page will be processed.</p><p>or</p><p><strong>Download images locally for all your notes</strong> -- will be processed all the pages in your vault, that corresponds to <strong>Include</strong> parameter in the plugin&#39;s settings.</p><p>Also you can turn on in plugin&#39;s settings processing the active page when external links pasted into the page.</p><p>The plugin was not tested with mobile version, probably it can work with it too.</p><h2 id="credit" tabindex="-1"><a class="header-anchor" href="#credit" aria-hidden="true">#</a> Credit</h2>`,15),h={href:"https://github.com/niekcandaele/obsidian-local-images",target:"_blank",rel:"noopener noreferrer"},m=i(`<h2 id="development" tabindex="-1"><a class="header-anchor" href="#development" aria-hidden="true">#</a> Development</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># Start the bundler in watch mode
npm run dev

# It&#39;s useful to set a symlink so you don&#39;t have to copy files over constantly
ln -s /home/user/code/obsidian-local-images /home/user/notes/dev/.obsidian/plugins/local-images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function v(b,f){const n=r("ExternalLinkIcon");return o(),l("div",null,[p,a("p",null,[e("Obsidian Local Images is a plugin for "),a("a",g,[e("Obsidian"),s(n)]),e(" desktop version.")]),u,a("p",null,[e("This plugin was developed from "),a("a",h,[e("niekcandaele's"),s(n)]),e(" code base. Key principles for downloading, saving were given there, and some texts too. Even the plugin's name is original.")]),m])}const y=t(c,[["render",v],["__file","05.html.vue"]]);export{y as default};
