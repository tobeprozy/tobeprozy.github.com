const l=JSON.parse('{"key":"v-e633b5dc","path":"/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9546-60.html","title":"HJ46 截取字符串","lang":"zh-CN","frontmatter":{"description":"HJ46&nbsp;截取字符串 描述 输入一个字符串和一个整数 k ，截取字符串的前k个字符并输出 数据范围：字符串长度满足 1≤n≤1000&nbsp;&nbsp;， 1≤k≤n 输入描述： 1.输入待截取的字符串 2.输入一个正整数k，代表截取的长度 输出描述： 截取后的字符串 方法一：substr（） #include &lt;iostream&gt; #include &lt;string&gt; using namespace std; int main() { string str; int k; while(cin&gt;&gt;str&gt;&gt;k){//输入字符串和k string sub_str = str.substr(0,k); cout&lt;&lt;sub_str&lt;&lt;endl;//输出前k个字符 } }","head":[["meta",{"property":"og:url","content":"https://tobeprozy.github.io/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9546-60.html"}],["meta",{"property":"og:site_name","content":"南叔先生-开源笔记"}],["meta",{"property":"og:title","content":"HJ46 截取字符串"}],["meta",{"property":"og:description","content":"HJ46&nbsp;截取字符串 描述 输入一个字符串和一个整数 k ，截取字符串的前k个字符并输出 数据范围：字符串长度满足 1≤n≤1000&nbsp;&nbsp;， 1≤k≤n 输入描述： 1.输入待截取的字符串 2.输入一个正整数k，代表截取的长度 输出描述： 截取后的字符串 方法一：substr（） #include &lt;iostream&gt; #include &lt;string&gt; using namespace std; int main() { string str; int k; while(cin&gt;&gt;str&gt;&gt;k){//输入字符串和k string sub_str = str.substr(0,k); cout&lt;&lt;sub_str&lt;&lt;endl;//输出前k个字符 } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T10:25:41.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T10:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HJ46 截取字符串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-26T10:25:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[{"level":3,"title":"输入描述：","slug":"输入描述","link":"#输入描述","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述","link":"#输出描述","children":[]}]},{"level":2,"title":"方法一：substr（）","slug":"方法一-substr","link":"#方法一-substr","children":[]},{"level":2,"title":"方法二：遍历","slug":"方法二-遍历","link":"#方法二-遍历","children":[]},{"level":2,"title":"方法一：数组模拟","slug":"方法一-数组模拟","link":"#方法一-数组模拟","children":[]},{"level":2,"title":"方法二：链表","slug":"方法二-链表","link":"#方法二-链表","children":[]},{"level":2,"title":"描述","slug":"描述-1","link":"#描述-1","children":[{"level":3,"title":"输入描述：","slug":"输入描述-1","link":"#输入描述-1","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-1","link":"#输出描述-1","children":[]}]},{"level":2,"title":"方法一：递归","slug":"方法一-递归","link":"#方法一-递归","children":[]},{"level":2,"title":"方法二：双栈法","slug":"方法二-双栈法","link":"#方法二-双栈法","children":[]},{"level":2,"title":"描述","slug":"描述-2","link":"#描述-2","children":[{"level":3,"title":"输入描述：","slug":"输入描述-2","link":"#输入描述-2","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-2","link":"#输出描述-2","children":[]}]},{"level":2,"title":"方法一：根据长度找倒数k","slug":"方法一-根据长度找倒数k","link":"#方法一-根据长度找倒数k","children":[]},{"level":2,"title":"方法二：快慢双指针","slug":"方法二-快慢双指针","link":"#方法二-快慢双指针","children":[]},{"level":2,"title":"描述","slug":"描述-3","link":"#描述-3","children":[{"level":3,"title":"输入描述：","slug":"输入描述-3","link":"#输入描述-3","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-3","link":"#输出描述-3","children":[]}]},{"level":2,"title":"方法一：动态规划","slug":"方法一-动态规划","link":"#方法一-动态规划","children":[]},{"level":2,"title":"方法二：滚动数组+动态规划","slug":"方法二-滚动数组-动态规划","link":"#方法二-滚动数组-动态规划","children":[]},{"level":2,"title":"描述","slug":"描述-4","link":"#描述-4","children":[{"level":3,"title":"输入描述：","slug":"输入描述-4","link":"#输入描述-4","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-4","link":"#输出描述-4","children":[]}]},{"level":2,"title":"方法一：数组模拟（超出空间）","slug":"方法一-数组模拟-超出空间","link":"#方法一-数组模拟-超出空间","children":[]},{"level":2,"title":"方法二：数学规律","slug":"方法二-数学规律","link":"#方法二-数学规律","children":[]},{"level":2,"title":"描述","slug":"描述-5","link":"#描述-5","children":[{"level":3,"title":"输入描述：","slug":"输入描述-5","link":"#输入描述-5","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-5","link":"#输出描述-5","children":[]}]},{"level":2,"title":"方法一：递归","slug":"方法一-递归-1","link":"#方法一-递归-1","children":[]},{"level":2,"title":"方法二：双栈法","slug":"方法二-双栈法-1","link":"#方法二-双栈法-1","children":[]},{"level":2,"title":"描述","slug":"描述-6","link":"#描述-6","children":[{"level":3,"title":"输入描述：","slug":"输入描述-6","link":"#输入描述-6","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-6","link":"#输出描述-6","children":[]}]},{"level":2,"title":"方法一：连除法判断","slug":"方法一-连除法判断","link":"#方法一-连除法判断","children":[]},{"level":2,"title":"描述","slug":"描述-7","link":"#描述-7","children":[{"level":3,"title":"输入描述：","slug":"输入描述-7","link":"#输入描述-7","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-7","link":"#输出描述-7","children":[]}]},{"level":2,"title":"方法一：","slug":"方法一","link":"#方法一","children":[]},{"level":2,"title":"描述","slug":"描述-8","link":"#描述-8","children":[{"level":3,"title":"输入描述：","slug":"输入描述-8","link":"#输入描述-8","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-8","link":"#输出描述-8","children":[]}]},{"level":2,"title":"方法一：","slug":"方法一-1","link":"#方法一-1","children":[]},{"level":2,"title":"描述","slug":"描述-9","link":"#描述-9","children":[{"level":3,"title":"输入描述：","slug":"输入描述-9","link":"#输入描述-9","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-9","link":"#输出描述-9","children":[]}]},{"level":2,"title":"方法一：暴力方法","slug":"方法一-暴力方法","link":"#方法一-暴力方法","children":[]},{"level":2,"title":"方法二：堆方法","slug":"方法二-堆方法","link":"#方法二-堆方法","children":[]},{"level":2,"title":"描述","slug":"描述-10","link":"#描述-10","children":[{"level":3,"title":"输入描述：","slug":"输入描述-10","link":"#输入描述-10","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-10","link":"#输出描述-10","children":[]}]},{"level":2,"title":"方法一：哈希表统计频率","slug":"方法一-哈希表统计频率","link":"#方法一-哈希表统计频率","children":[]},{"level":2,"title":"方法二：队列+哈希表统计位置","slug":"方法二-队列-哈希表统计位置","link":"#方法二-队列-哈希表统计位置","children":[]},{"level":2,"title":"方法三：首次末次比较解法","slug":"方法三-首次末次比较解法","link":"#方法三-首次末次比较解法","children":[]},{"level":2,"title":"方法四：频数统计方法","slug":"方法四-频数统计方法","link":"#方法四-频数统计方法","children":[]},{"level":2,"title":"描述","slug":"描述-11","link":"#描述-11","children":[{"level":3,"title":"输入描述：","slug":"输入描述-11","link":"#输入描述-11","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-11","link":"#输出描述-11","children":[]}]},{"level":2,"title":"方法一：穷举","slug":"方法一-穷举","link":"#方法一-穷举","children":[]},{"level":2,"title":"方法二：穷举优化","slug":"方法二-穷举优化","link":"#方法二-穷举优化","children":[]},{"level":2,"title":"续[[华为机试61-75]]","slug":"续-华为机试61-75","link":"#续-华为机试61-75","children":[]}],"git":{"createdTime":1682504741000,"updatedTime":1682504741000,"contributors":[{"name":"tobeprozy","email":"904762096@qq.com","commits":1}]},"readingTime":{"minutes":22.22,"words":6666},"filePathRelative":"18Data_Structure/数据结构编程练习/华为机试108/华为机试46-60.md","localizedDate":"2023年4月26日","excerpt":"<h1> HJ46&nbsp;截取字符串</h1>\\n<h2> 描述</h2>\\n<p>输入一个字符串和一个整数 k ，截取字符串的前k个字符并输出</p>\\n<p>数据范围：字符串长度满足 1≤n≤1000&nbsp;&nbsp;， 1≤k≤n</p>\\n<h3> 输入描述：</h3>\\n<p>1.输入待截取的字符串</p>\\n<p>2.输入一个正整数k，代表截取的长度</p>\\n<h3> 输出描述：</h3>\\n<p>截取后的字符串</p>\\n<h2> 方法一：substr（）</h2>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;string&gt;</span></span>\\n\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    string str<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> k<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span>cin<span class=\\"token operator\\">&gt;&gt;</span>str<span class=\\"token operator\\">&gt;&gt;</span>k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span><span class=\\"token comment\\">//输入字符串和k</span>\\n        string sub_str <span class=\\"token operator\\">=</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">substr</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        cout<span class=\\"token operator\\">&lt;&lt;</span>sub_str<span class=\\"token operator\\">&lt;&lt;</span>endl<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//输出前k个字符</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{l as data};
