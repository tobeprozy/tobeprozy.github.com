const n=JSON.parse('{"key":"v-3c4f39c8","path":"/12C_plus_plus/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95.html","title":"查找算法","lang":"zh-CN","frontmatter":{"title":"查找算法","article":true,"date":"2023-04-14T00:00:00.000Z","category":["C++"],"tag":["算法","C++"],"order":null,"icon":"🧑","description":"::: tips 查找算法 ::: find_if(iterator beg, iterator end, _Pred); #include&lt;iostream&gt; using namespace std; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;string&gt; //常用查找算法：find_if //1. 查找内置数据类型 class GreaterFive { public: \\tbool operator()(int val) \\t{ \\t\\treturn val &gt; 5; \\t} }; void test01() { \\tvector&lt;int&gt;v; \\tfor (int i = 0; i &lt; 10; i++) \\t{ \\t\\tv.push_back(i); \\t} \\t//查找容器中是否有大于5的元素 \\tvector&lt;int&gt;::iterator it = find_if(v.begin(), v.end(), GreaterFive()); \\tif (it == v.end()) \\t{ \\t\\tcout &lt;&lt; \\"未找到大于5的元素！\\" &lt;&lt; endl; \\t} \\telse \\t{ \\t\\tcout &lt;&lt; \\"找到大于5的元素：\\" &lt;&lt; *it &lt;&lt; endl; \\t} } //2. 查找自定义数据类型（必须重载==） class Person { public: \\tPerson(string name, int age) \\t{ \\t\\tthis-&gt;m_Name = name; \\t\\tthis-&gt;m_Age = age; \\t} \\t//重载==使得底层find知道如何对比Person数据类型 \\tbool operator==(const Person &amp;p) \\t{ \\t\\tif (this-&gt;m_Name == p.m_Name&amp;&amp;this-&gt;m_Age == p.m_Age) \\t\\t{ \\t\\t\\treturn true; \\t\\t} \\t\\telse \\t\\t{ \\t\\t\\treturn false; \\t\\t} \\t} \\tstring m_Name; \\tint m_Age; }; class Greater20 { public: \\tbool operator()(Person &amp;p) \\t{ \\t\\treturn p.m_Age &gt; 20; \\t} }; void test02() { \\tvector&lt;Person&gt;v; \\t//创建数据 \\tPerson p1(\\"aaa\\", 10); \\tPerson p2(\\"bbb\\", 20); \\tPerson p3(\\"ccc\\", 30); \\tPerson p4(\\"ddd\\", 40); \\t//放到容器中 \\tv.push_back(p1); \\tv.push_back(p2); \\tv.push_back(p3); \\tv.push_back(p4); \\t//查找容器中是否有年龄大于20的人 \\tvector&lt;Person&gt;::iterator it = find_if(v.begin(), v.end(), Greater20()); \\tif (it == v.end()) \\t{ \\t\\tcout &lt;&lt; \\"未找到年龄大于20的人！\\" &lt;&lt; endl; \\t} \\telse \\t{ \\t\\tcout &lt;&lt; \\"找到年龄大于20的人！姓名：\\" &lt;&lt; it-&gt;m_Name &lt;&lt; \\" 年龄：\\" &lt;&lt; it-&gt;m_Age &lt;&lt; endl; \\t} } int main() { \\ttest01(); \\ttest02(); \\tsystem(\\"pause\\"); \\treturn 0; } adjacent_find(iterator beg, iterator end); #include&lt;iostream&gt; using namespace std; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;string&gt; //常用查找算法：adjacent_find void test01() { \\tvector&lt;int&gt;v; \\tv.push_back(0); \\tv.push_back(2); \\tv.push_back(0); \\tv.push_back(3); \\tv.push_back(1); \\tv.push_back(4); \\tv.push_back(3); \\tv.push_back(3); \\t//查找容器中是否有相邻重复元素 \\tvector&lt;int&gt;::iterator it = adjacent_find(v.begin(), v.end()); \\tif (it == v.end()) \\t{ \\t\\tcout &lt;&lt; \\"未找到相邻重复元素！\\" &lt;&lt; endl; \\t} \\telse \\t{ \\t\\tcout &lt;&lt; \\"找到相邻重复元素：\\" &lt;&lt; *it &lt;&lt; endl; \\t} } int main() { \\ttest01(); \\tsystem(\\"pause\\"); \\treturn 0; } count_if(iterator beg, iterator end, _Pred); #include&lt;iostream&gt; using namespace std; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;string&gt; //常用查找算法：count_if //1. 统计内置数据类型 class Greater20 { public: \\tbool operator()(int val) \\t{ \\t\\treturn val &gt; 20; \\t} }; void test01() { \\tvector&lt;int&gt;v; \\tv.push_back(10); \\tv.push_back(40); \\tv.push_back(30); \\tv.push_back(40); \\tv.push_back(20); \\tv.push_back(40); \\t//统计大于20的元素的个数 \\tint num = count_if(v.begin(), v.end(), Greater20()); \\tcout &lt;&lt; \\"大于20的元素个数为：\\" &lt;&lt; num &lt;&lt; endl; } //2. 统计自定义数据类型 class Person { public: \\tPerson(string name, int age) \\t{ \\t\\tthis-&gt;m_Name = name; \\t\\tthis-&gt;m_Age = age; \\t} \\tstring m_Name; \\tint m_Age; }; class AgeGreater20 { public: \\tbool operator()(Person &amp;p) \\t{ \\t\\treturn p.m_Age &gt; 20; \\t} }; void test02() { \\tvector&lt;Person&gt;v; \\t \\tPerson p1(\\"刘备\\", 35); \\tPerson p2(\\"关羽\\", 35); \\tPerson p3(\\"张飞\\", 35); \\tPerson p4(\\"赵云\\", 30); \\tPerson p5(\\"曹操\\", 20); \\t \\tv.push_back(p1); \\tv.push_back(p2); \\tv.push_back(p3); \\tv.push_back(p4); \\tv.push_back(p5); \\t \\t//统计大于20岁的人员个数 \\tint num = count_if(v.begin(), v.end(), AgeGreater20()); \\t\\t \\tcout &lt;&lt; \\"年龄大于20岁的人员个数为：\\" &lt;&lt; num &lt;&lt; endl; } int main() { \\ttest01(); \\ttest02(); \\tsystem(\\"pause\\"); \\treturn 0; } random_shuffle(iterator beg, iterator end);","head":[["meta",{"property":"og:url","content":"https://tobeprozy.github.io/12C_plus_plus/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"南叔先生-开源笔记"}],["meta",{"property":"og:title","content":"查找算法"}],["meta",{"property":"og:description","content":"::: tips 查找算法 ::: find_if(iterator beg, iterator end, _Pred); #include&lt;iostream&gt; using namespace std; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;string&gt; //常用查找算法：find_if //1. 查找内置数据类型 class GreaterFive { public: \\tbool operator()(int val) \\t{ \\t\\treturn val &gt; 5; \\t} }; void test01() { \\tvector&lt;int&gt;v; \\tfor (int i = 0; i &lt; 10; i++) \\t{ \\t\\tv.push_back(i); \\t} \\t//查找容器中是否有大于5的元素 \\tvector&lt;int&gt;::iterator it = find_if(v.begin(), v.end(), GreaterFive()); \\tif (it == v.end()) \\t{ \\t\\tcout &lt;&lt; \\"未找到大于5的元素！\\" &lt;&lt; endl; \\t} \\telse \\t{ \\t\\tcout &lt;&lt; \\"找到大于5的元素：\\" &lt;&lt; *it &lt;&lt; endl; \\t} } //2. 查找自定义数据类型（必须重载==） class Person { public: \\tPerson(string name, int age) \\t{ \\t\\tthis-&gt;m_Name = name; \\t\\tthis-&gt;m_Age = age; \\t} \\t//重载==使得底层find知道如何对比Person数据类型 \\tbool operator==(const Person &amp;p) \\t{ \\t\\tif (this-&gt;m_Name == p.m_Name&amp;&amp;this-&gt;m_Age == p.m_Age) \\t\\t{ \\t\\t\\treturn true; \\t\\t} \\t\\telse \\t\\t{ \\t\\t\\treturn false; \\t\\t} \\t} \\tstring m_Name; \\tint m_Age; }; class Greater20 { public: \\tbool operator()(Person &amp;p) \\t{ \\t\\treturn p.m_Age &gt; 20; \\t} }; void test02() { \\tvector&lt;Person&gt;v; \\t//创建数据 \\tPerson p1(\\"aaa\\", 10); \\tPerson p2(\\"bbb\\", 20); \\tPerson p3(\\"ccc\\", 30); \\tPerson p4(\\"ddd\\", 40); \\t//放到容器中 \\tv.push_back(p1); \\tv.push_back(p2); \\tv.push_back(p3); \\tv.push_back(p4); \\t//查找容器中是否有年龄大于20的人 \\tvector&lt;Person&gt;::iterator it = find_if(v.begin(), v.end(), Greater20()); \\tif (it == v.end()) \\t{ \\t\\tcout &lt;&lt; \\"未找到年龄大于20的人！\\" &lt;&lt; endl; \\t} \\telse \\t{ \\t\\tcout &lt;&lt; \\"找到年龄大于20的人！姓名：\\" &lt;&lt; it-&gt;m_Name &lt;&lt; \\" 年龄：\\" &lt;&lt; it-&gt;m_Age &lt;&lt; endl; \\t} } int main() { \\ttest01(); \\ttest02(); \\tsystem(\\"pause\\"); \\treturn 0; } adjacent_find(iterator beg, iterator end); #include&lt;iostream&gt; using namespace std; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;string&gt; //常用查找算法：adjacent_find void test01() { \\tvector&lt;int&gt;v; \\tv.push_back(0); \\tv.push_back(2); \\tv.push_back(0); \\tv.push_back(3); \\tv.push_back(1); \\tv.push_back(4); \\tv.push_back(3); \\tv.push_back(3); \\t//查找容器中是否有相邻重复元素 \\tvector&lt;int&gt;::iterator it = adjacent_find(v.begin(), v.end()); \\tif (it == v.end()) \\t{ \\t\\tcout &lt;&lt; \\"未找到相邻重复元素！\\" &lt;&lt; endl; \\t} \\telse \\t{ \\t\\tcout &lt;&lt; \\"找到相邻重复元素：\\" &lt;&lt; *it &lt;&lt; endl; \\t} } int main() { \\ttest01(); \\tsystem(\\"pause\\"); \\treturn 0; } count_if(iterator beg, iterator end, _Pred); #include&lt;iostream&gt; using namespace std; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;string&gt; //常用查找算法：count_if //1. 统计内置数据类型 class Greater20 { public: \\tbool operator()(int val) \\t{ \\t\\treturn val &gt; 20; \\t} }; void test01() { \\tvector&lt;int&gt;v; \\tv.push_back(10); \\tv.push_back(40); \\tv.push_back(30); \\tv.push_back(40); \\tv.push_back(20); \\tv.push_back(40); \\t//统计大于20的元素的个数 \\tint num = count_if(v.begin(), v.end(), Greater20()); \\tcout &lt;&lt; \\"大于20的元素个数为：\\" &lt;&lt; num &lt;&lt; endl; } //2. 统计自定义数据类型 class Person { public: \\tPerson(string name, int age) \\t{ \\t\\tthis-&gt;m_Name = name; \\t\\tthis-&gt;m_Age = age; \\t} \\tstring m_Name; \\tint m_Age; }; class AgeGreater20 { public: \\tbool operator()(Person &amp;p) \\t{ \\t\\treturn p.m_Age &gt; 20; \\t} }; void test02() { \\tvector&lt;Person&gt;v; \\t \\tPerson p1(\\"刘备\\", 35); \\tPerson p2(\\"关羽\\", 35); \\tPerson p3(\\"张飞\\", 35); \\tPerson p4(\\"赵云\\", 30); \\tPerson p5(\\"曹操\\", 20); \\t \\tv.push_back(p1); \\tv.push_back(p2); \\tv.push_back(p3); \\tv.push_back(p4); \\tv.push_back(p5); \\t \\t//统计大于20岁的人员个数 \\tint num = count_if(v.begin(), v.end(), AgeGreater20()); \\t\\t \\tcout &lt;&lt; \\"年龄大于20岁的人员个数为：\\" &lt;&lt; num &lt;&lt; endl; } int main() { \\ttest01(); \\ttest02(); \\tsystem(\\"pause\\"); \\treturn 0; } random_shuffle(iterator beg, iterator end);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T10:25:41.000Z"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:published_time","content":"2023-04-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T10:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"查找算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-26T10:25:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1682504741000,"updatedTime":1682504741000,"contributors":[{"name":"tobeprozy","email":"904762096@qq.com","commits":1}]},"readingTime":{"minutes":2.68,"words":805},"filePathRelative":"12C_plus_plus/查找算法.md","localizedDate":"2023年4月14日","excerpt":"<p>::: tips\\n查找算法\\n:::</p>\\n<ul>\\n<li>\\n<p><strong>find_if(iterator beg, iterator end, _Pred);</strong></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;vector&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;algorithm&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;string&gt;</span></span>\\n\\n<span class=\\"token comment\\">//常用查找算法：find_if</span>\\n\\n<span class=\\"token comment\\">//1. 查找内置数据类型</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">GreaterFive</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">bool</span> <span class=\\"token keyword\\">operator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> val<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> val <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">test01</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span>v<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token comment\\">//查找容器中是否有大于5的元素</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span><span class=\\"token double-colon punctuation\\">::</span>iterator it <span class=\\"token operator\\">=</span> <span class=\\"token function\\">find_if</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">GreaterFive</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>it <span class=\\"token operator\\">==</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"未找到大于5的元素！\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">else</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"找到大于5的元素：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token operator\\">*</span>it <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">//2. 查找自定义数据类型（必须重载==）</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token function\\">Person</span><span class=\\"token punctuation\\">(</span>string name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token operator\\">-&gt;</span>m_Name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token operator\\">-&gt;</span>m_Age <span class=\\"token operator\\">=</span> age<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token comment\\">//重载==使得底层find知道如何对比Person数据类型</span>\\n\\t<span class=\\"token keyword\\">bool</span> <span class=\\"token keyword\\">operator</span><span class=\\"token operator\\">==</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Person <span class=\\"token operator\\">&amp;</span>p<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token operator\\">-&gt;</span>m_Name <span class=\\"token operator\\">==</span> p<span class=\\"token punctuation\\">.</span>m_Name<span class=\\"token operator\\">&amp;&amp;</span><span class=\\"token keyword\\">this</span><span class=\\"token operator\\">-&gt;</span>m_Age <span class=\\"token operator\\">==</span> p<span class=\\"token punctuation\\">.</span>m_Age<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t<span class=\\"token keyword\\">else</span>\\n\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\tstring m_Name<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> m_Age<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Greater20</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">bool</span> <span class=\\"token keyword\\">operator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>Person <span class=\\"token operator\\">&amp;</span>p<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> p<span class=\\"token punctuation\\">.</span>m_Age <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">test02</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span>Person<span class=\\"token operator\\">&gt;</span>v<span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token comment\\">//创建数据</span>\\n\\tPerson <span class=\\"token function\\">p1</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"aaa\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tPerson <span class=\\"token function\\">p2</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"bbb\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tPerson <span class=\\"token function\\">p3</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ccc\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tPerson <span class=\\"token function\\">p4</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ddd\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">40</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token comment\\">//放到容器中</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p4<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token comment\\">//查找容器中是否有年龄大于20的人</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span>Person<span class=\\"token operator\\">&gt;</span><span class=\\"token double-colon punctuation\\">::</span>iterator it <span class=\\"token operator\\">=</span> <span class=\\"token function\\">find_if</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Greater20</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>it <span class=\\"token operator\\">==</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"未找到年龄大于20的人！\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">else</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"找到年龄大于20的人！姓名：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> it<span class=\\"token operator\\">-&gt;</span>m_Name <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"    年龄：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> it<span class=\\"token operator\\">-&gt;</span>m_Age <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">test01</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">test02</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token function\\">system</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"pause\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>adjacent_find(iterator beg, iterator end);</strong></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;vector&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;algorithm&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;string&gt;</span></span>\\n\\n<span class=\\"token comment\\">//常用查找算法：adjacent_find</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">test01</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span>v<span class=\\"token punctuation\\">;</span>\\n\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> \\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token comment\\">//查找容器中是否有相邻重复元素</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span><span class=\\"token double-colon punctuation\\">::</span>iterator it <span class=\\"token operator\\">=</span> <span class=\\"token function\\">adjacent_find</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>it <span class=\\"token operator\\">==</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"未找到相邻重复元素！\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">else</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"找到相邻重复元素：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token operator\\">*</span>it <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">test01</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token function\\">system</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"pause\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>count_if(iterator beg, iterator end, _Pred);</strong></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;vector&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;algorithm&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;string&gt;</span></span>\\n\\n<span class=\\"token comment\\">//常用查找算法：count_if</span>\\n\\n<span class=\\"token comment\\">//1. 统计内置数据类型</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Greater20</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">bool</span> <span class=\\"token keyword\\">operator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> val<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> val <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">test01</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span>v<span class=\\"token punctuation\\">;</span>\\n\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">40</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">40</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">40</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token comment\\">//统计大于20的元素的个数</span>\\n\\t<span class=\\"token keyword\\">int</span> num <span class=\\"token operator\\">=</span> <span class=\\"token function\\">count_if</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Greater20</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"大于20的元素个数为：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> num <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">//2. 统计自定义数据类型</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token function\\">Person</span><span class=\\"token punctuation\\">(</span>string name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token operator\\">-&gt;</span>m_Name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token operator\\">-&gt;</span>m_Age <span class=\\"token operator\\">=</span> age<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\tstring m_Name<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> m_Age<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AgeGreater20</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">bool</span> <span class=\\"token keyword\\">operator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>Person <span class=\\"token operator\\">&amp;</span>p<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> p<span class=\\"token punctuation\\">.</span>m_Age <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">test02</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tvector<span class=\\"token operator\\">&lt;</span>Person<span class=\\"token operator\\">&gt;</span>v<span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tPerson <span class=\\"token function\\">p1</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"刘备\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">35</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tPerson <span class=\\"token function\\">p2</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"关羽\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">35</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tPerson <span class=\\"token function\\">p3</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"张飞\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">35</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tPerson <span class=\\"token function\\">p4</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"赵云\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tPerson <span class=\\"token function\\">p5</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"曹操\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p4<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tv<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>p5<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\t<span class=\\"token comment\\">//统计大于20岁的人员个数</span>\\n\\t<span class=\\"token keyword\\">int</span> num <span class=\\"token operator\\">=</span> <span class=\\"token function\\">count_if</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">AgeGreater20</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t\\n\\tcout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"年龄大于20岁的人员个数为：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> num <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">test01</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">test02</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token function\\">system</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"pause\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>random_shuffle(iterator beg, iterator end);</strong></p>\\n</li>\\n</ul>","autoDesc":true}');export{n as data};
