const n=JSON.parse('{"key":"v-82e57f90","path":"/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%AD%97%E7%AC%A6%E4%B8%B2.html","title":"HJ1 字符串最后一个单词的长度# HJ11 数字颠倒","lang":"zh-CN","frontmatter":{"description":"HJ1 字符串最后一个单词的长度# HJ11&nbsp;数字颠倒 描述 输入一个整数，将这个整数以字符串的形式逆序输出 程序不考虑负数的情况，若数字含有0，则逆序形式也含有0，如输入为100，则输出为001 数据范围： 0≤n≤2^30−1 输入描述： 输入一个int整数 输出描述： 将这个整数以字符串的形式逆序输出 方法一：转换为字符串 #include &lt;iostream&gt; #include &lt;string&gt; #include &lt;algorithm&gt; using namespace std; int main() { string s; cin &gt;&gt; s; // 以字符串格式输入 reverse(s.begin(), s.end()); // reverse来倒序原有的字符串 cout &lt;&lt; s; return 0; }","head":[["meta",{"property":"og:url","content":"https://tobeprozy.github.io/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%AD%97%E7%AC%A6%E4%B8%B2.html"}],["meta",{"property":"og:site_name","content":"南叔先生-开源笔记"}],["meta",{"property":"og:title","content":"HJ1 字符串最后一个单词的长度# HJ11 数字颠倒"}],["meta",{"property":"og:description","content":"HJ1 字符串最后一个单词的长度# HJ11&nbsp;数字颠倒 描述 输入一个整数，将这个整数以字符串的形式逆序输出 程序不考虑负数的情况，若数字含有0，则逆序形式也含有0，如输入为100，则输出为001 数据范围： 0≤n≤2^30−1 输入描述： 输入一个int整数 输出描述： 将这个整数以字符串的形式逆序输出 方法一：转换为字符串 #include &lt;iostream&gt; #include &lt;string&gt; #include &lt;algorithm&gt; using namespace std; int main() { string s; cin &gt;&gt; s; // 以字符串格式输入 reverse(s.begin(), s.end()); // reverse来倒序原有的字符串 cout &lt;&lt; s; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T10:25:41.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T10:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HJ1 字符串最后一个单词的长度# HJ11 数字颠倒\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-26T10:25:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[{"level":3,"title":"输入描述：","slug":"输入描述","link":"#输入描述","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述","link":"#输出描述","children":[]}]},{"level":2,"title":"方法一：转换为字符串","slug":"方法一-转换为字符串","link":"#方法一-转换为字符串","children":[]},{"level":2,"title":"方法二：数学方法转换","slug":"方法二-数学方法转换","link":"#方法二-数学方法转换","children":[]},{"level":2,"title":"描述","slug":"描述-1","link":"#描述-1","children":[{"level":3,"title":"输入描述：","slug":"输入描述-1","link":"#输入描述-1","children":[]},{"level":3,"title":"输出描述：","slug":"输出描述-1","link":"#输出描述-1","children":[]}]},{"level":2,"title":"方法一：逆序拼接","slug":"方法一-逆序拼接","link":"#方法一-逆序拼接","children":[]},{"level":2,"title":"方法二：双指针交换","slug":"方法二-双指针交换","link":"#方法二-双指针交换","children":[]}],"git":{"createdTime":1682504741000,"updatedTime":1682504741000,"contributors":[{"name":"tobeprozy","email":"904762096@qq.com","commits":1}]},"readingTime":{"minutes":1.34,"words":402},"filePathRelative":"18Data_Structure/数据结构编程练习/华为机试108/字符串.md","localizedDate":"2023年4月26日","excerpt":"<h1> HJ1 字符串最后一个单词的长度# HJ11&nbsp;数字颠倒</h1>\\n<h2> 描述</h2>\\n<p>输入一个整数，将这个整数以字符串的形式逆序输出</p>\\n<p>程序不考虑负数的情况，若数字含有0，则逆序形式也含有0，如输入为100，则输出为001</p>\\n<p>数据范围： 0≤n≤2^30−1</p>\\n<h3> 输入描述：</h3>\\n<p>输入一个int整数</p>\\n<h3> 输出描述：</h3>\\n<p>将这个整数以字符串的形式逆序输出</p>\\n<h2> 方法一：转换为字符串</h2>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;string&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;algorithm&gt;</span></span>\\n\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    string s<span class=\\"token punctuation\\">;</span>\\n    cin <span class=\\"token operator\\">&gt;&gt;</span> s<span class=\\"token punctuation\\">;</span>                         <span class=\\"token comment\\">// 以字符串格式输入</span>\\n    <span class=\\"token function\\">reverse</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>        <span class=\\"token comment\\">// reverse来倒序原有的字符串</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> s<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
