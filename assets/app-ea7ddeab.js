import{d as p,r as V,a as Ae,b as po,c as T,i as pn,e as ge,f as lo,g as co,o as J,h as g,j as s,k as Fn,l as Ea,m as en,n as Be,p as yt,q as uo,s as wn,t as _a,u as Qn,w as Y,v as Eo,x as _o,y as mo,z as vo,A as ho,T as Nn,B as un,C as Ao,R as on,D as ln,E as kn,F as ma,G as Jn,H as go,I as _e,J as Je,K as Bo,L as Xe,M as In,N as ko,O as nt,P as fo,Q as Lt,S as bo,U as Do,V as yo,W as Lo,X as Co}from"./framework-39b9cf04.js";const Po="modulepreload",wo=function(n){return"/"+n},Ct={},t=function(e,a,o){if(!a||a.length===0)return e();const i=document.getElementsByTagName("link");return Promise.all(a.map(r=>{if(r=wo(r),r in Ct)return;Ct[r]=!0;const l=r.endsWith(".css"),c=l?'[rel="stylesheet"]':"";if(!!o)for(let _=i.length-1;_>=0;_--){const h=i[_];if(h.href===r&&(!l||h.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${r}"]${c}`))return;const d=document.createElement("link");if(d.rel=l?"stylesheet":Po,l||(d.as="script",d.crossOrigin=""),d.href=r,document.head.appendChild(d),l)return new Promise((_,h)=>{d.addEventListener("load",_),d.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>e())},Io={"v-3f9d0d55":()=>t(()=>import("./DailyRoutine.html-3b5b23d0.js"),[]).then(({data:n})=>n),"v-3d0aa58a":()=>t(()=>import("./Fitness.html-8b6c18e0.js"),[]).then(({data:n})=>n),"v-8daa1a0e":()=>t(()=>import("./index.html-56901c59.js"),[]).then(({data:n})=>n),"v-35f5db9e":()=>t(()=>import("./blog.html-681f446f.js"),[]).then(({data:n})=>n),"v-184f4da6":()=>t(()=>import("./intro.html-06355ca9.js"),[]).then(({data:n})=>n),"v-cbac378e":()=>t(()=>import("./每日一问.html-bba20437.js"),[]).then(({data:n})=>n),"v-1b6f6622":()=>t(()=>import("./详情目录.html-7c51a515.js"),[]).then(({data:n})=>n),"v-f2b510ca":()=>t(()=>import("./index.html-079f1a7e.js"),[]).then(({data:n})=>n),"v-5f23e614":()=>t(()=>import("./传感器篇.html-04b4c105.js"),[]).then(({data:n})=>n),"v-73fd881e":()=>t(()=>import("./详情目录.html-53c06caf.js"),[]).then(({data:n})=>n),"v-71abbcb8":()=>t(()=>import("./几块重点知识.html-c53d3a6c.js"),[]).then(({data:n})=>n),"v-70468548":()=>t(()=>import("./图像处理概述.html-b038a799.js"),[]).then(({data:n})=>n),"v-1c922e62":()=>t(()=>import("./详情目录.html-8b8cadce.js"),[]).then(({data:n})=>n),"v-43e0343a":()=>t(()=>import("./岗位要求.html-0cc1c61d.js"),[]).then(({data:n})=>n),"v-14c29da6":()=>t(()=>import("./详情目录.html-821631fc.js"),[]).then(({data:n})=>n),"v-b5397e12":()=>t(()=>import("./优化方法概述.html-5af37617.js"),[]).then(({data:n})=>n),"v-08d39477":()=>t(()=>import("./详情目录.html-a35efc22.js"),[]).then(({data:n})=>n),"v-ce610fb2":()=>t(()=>import("./详情目录.html-e2a72c8b.js"),[]).then(({data:n})=>n),"v-f324007c":()=>t(()=>import("./SLAM概述.html-aacaf90d.js"),[]).then(({data:n})=>n),"v-47a7673e":()=>t(()=>import("./详情目录.html-f3c6d087.js"),[]).then(({data:n})=>n),"v-08ca3814":()=>t(()=>import("./详情目录.html-807052d5.js"),[]).then(({data:n})=>n),"v-a08b6ee0":()=>t(()=>import("./深度学习常用框架.html-357100cf.js"),[]).then(({data:n})=>n),"v-25e12d9b":()=>t(()=>import("./详情目录.html-6810ced6.js"),[]).then(({data:n})=>n),"v-54bd8ca5":()=>t(()=>import("./详情目录.html-6d683928.js"),[]).then(({data:n})=>n),"v-409dbff8":()=>t(()=>import("./详情目录.html-c926d7fc.js"),[]).then(({data:n})=>n),"v-0c685ccf":()=>t(()=>import("./自动驾驶框架.html-72ebf60a.js"),[]).then(({data:n})=>n),"v-a85882fc":()=>t(()=>import("./自动驾驶概述.html-1247155b.js"),[]).then(({data:n})=>n),"v-67b64117":()=>t(()=>import("./详情目录.html-b039a09b.js"),[]).then(({data:n})=>n),"v-70b4f572":()=>t(()=>import("./C__个人经验.html-992c8f96.js"),[]).then(({data:n})=>n),"v-0cb8adde":()=>t(()=>import("./C__面试常见问题.html-0f9ede16.js"),[]).then(({data:n})=>n),"v-6661285a":()=>t(()=>import("./容器应用知识.html-31202b17.js"),[]).then(({data:n})=>n),"v-3c4f39c8":()=>t(()=>import("./查找算法.html-c1b184a7.js"),[]).then(({data:n})=>n),"v-38689776":()=>t(()=>import("./计算机基础知识.html-46f7ba6e.js"),[]).then(({data:n})=>n),"v-983620b4":()=>t(()=>import("./详情目录.html-2e52d31c.js"),[]).then(({data:n})=>n),"v-34885982":()=>t(()=>import("./进制转换、字符串操、大数运算.html-f46fc901.js"),[]).then(({data:n})=>n),"v-216f4be0":()=>t(()=>import("./Python个人经验.html-34d36543.js"),[]).then(({data:n})=>n),"v-55c868b4":()=>t(()=>import("./详情目录.html-4db09744.js"),[]).then(({data:n})=>n),"v-6960f508":()=>t(()=>import("./Matlab_Personal_Experience.html-3b46da3c.js"),[]).then(({data:n})=>n),"v-b1fac674":()=>t(()=>import("./详情目录.html-af98b2d2.js"),[]).then(({data:n})=>n),"v-e2af76be":()=>t(()=>import("./Docker.html-3cf71ea2.js"),[]).then(({data:n})=>n),"v-1af0691c":()=>t(()=>import("./Huginn.html-ff084374.js"),[]).then(({data:n})=>n),"v-20fdbfbe":()=>t(()=>import("./Linux命令大全.html-eed55c7b.js"),[]).then(({data:n})=>n),"v-db1b8a5e":()=>t(()=>import("./NAS.html-12eba930.js"),[]).then(({data:n})=>n),"v-e1627542":()=>t(()=>import("./TTRSS.html-c10eec37.js"),[]).then(({data:n})=>n),"v-126b6205":()=>t(()=>import("./linux基础.html-433a707f.js"),[]).then(({data:n})=>n),"v-0a266134":()=>t(()=>import("./详情目录.html-62df451b.js"),[]).then(({data:n})=>n),"v-4b876903":()=>t(()=>import("./ROS学习笔记.html-4b249ac0.js"),[]).then(({data:n})=>n),"v-3b9795f5":()=>t(()=>import("./详情目录.html-20694b8d.js"),[]).then(({data:n})=>n),"v-61953c47":()=>t(()=>import("./详情目录.html-8b476bef.js"),[]).then(({data:n})=>n),"v-4c82cb4a":()=>t(()=>import("./详情目录.html-184d48ea.js"),[]).then(({data:n})=>n),"v-6a8e50a4":()=>t(()=>import("./详情目录.html-df4e10f8.js"),[]).then(({data:n})=>n),"v-acd854b2":()=>t(()=>import("./机械个人经验.html-47615cc4.js"),[]).then(({data:n})=>n),"v-76997a97":()=>t(()=>import("./详情目录.html-5b13fef3.js"),[]).then(({data:n})=>n),"v-41edfa86":()=>t(()=>import("./详情目录.html-d5227d23.js"),[]).then(({data:n})=>n),"v-6be267ce":()=>t(()=>import("./详情目录.html-1a42ee77.js"),[]).then(({data:n})=>n),"v-0038f2fb":()=>t(()=>import("./计算机常见问题.html-70b190d4.js"),[]).then(({data:n})=>n),"v-0716ff7e":()=>t(()=>import("./详情目录.html-3a185de4.js"),[]).then(({data:n})=>n),"v-98addf5e":()=>t(()=>import("./NewSystem.html-4c4a68fe.js"),[]).then(({data:n})=>n),"v-44a8fb1e":()=>t(()=>import("./QTTabBar.html-750b5959.js"),[]).then(({data:n})=>n),"v-5587baac":()=>t(()=>import("./faq.html-79534f3b.js"),[]).then(({data:n})=>n),"v-44f90a36":()=>t(()=>import("./详情目录.html-89804380.js"),[]).then(({data:n})=>n),"v-12f6ea90":()=>t(()=>import("./AppNotes.html-a65f87b4.js"),[]).then(({data:n})=>n),"v-76999b1b":()=>t(()=>import("./Applist.html-964aa9e4.js"),[]).then(({data:n})=>n),"v-1a9ff8b2":()=>t(()=>import("./ChatGPT.html-061c29ac.js"),[]).then(({data:n})=>n),"v-5920455e":()=>t(()=>import("./Chrome.html-37ad595e.js"),[]).then(({data:n})=>n),"v-b69ace8c":()=>t(()=>import("./design.html-7ed13160.js"),[]).then(({data:n})=>n),"v-e2eb686a":()=>t(()=>import("./详情目录.html-6df91b34.js"),[]).then(({data:n})=>n),"v-6a34da33":()=>t(()=>import("./AutoHotkey.html-fa959401.js"),[]).then(({data:n})=>n),"v-4556bd9c":()=>t(()=>import("./Electron.html-f76b86a1.js"),[]).then(({data:n})=>n),"v-76febaae":()=>t(()=>import("./HTML.html-40b9ff4e.js"),[]).then(({data:n})=>n),"v-32f0a9c7":()=>t(()=>import("./Javascript.html-810aa8ef.js"),[]).then(({data:n})=>n),"v-59faba45":()=>t(()=>import("./Markdown.html-0292b6ae.js"),[]).then(({data:n})=>n),"v-0488f538":()=>t(()=>import("./Python.html-1e3d81e9.js"),[]).then(({data:n})=>n),"v-20c9c705":()=>t(()=>import("./index.html-e9be5af8.js"),[]).then(({data:n})=>n),"v-6167c5d7":()=>t(()=>import("./Regex.html-76524993.js"),[]).then(({data:n})=>n),"v-2159d138":()=>t(()=>import("./Vue.html-c2fcb647.js"),[]).then(({data:n})=>n),"v-2fa9cbc7":()=>t(()=>import("./详情目录.html-ee6cf07f.js"),[]).then(({data:n})=>n),"v-f2437614":()=>t(()=>import("./Cloudflare.html-90d590e6.js"),[]).then(({data:n})=>n),"v-247cbeda":()=>t(()=>import("./DNS.html-30e65b1f.js"),[]).then(({data:n})=>n),"v-6b3525a8":()=>t(()=>import("./GitHub.html-ea5ea8e7.js"),[]).then(({data:n})=>n),"v-b661953e":()=>t(()=>import("./Static.html-efe24582.js"),[]).then(({data:n})=>n),"v-47c345ec":()=>t(()=>import("./VPS.html-09c7cff1.js"),[]).then(({data:n})=>n),"v-0b5295fc":()=>t(()=>import("./详情目录.html-de346bde.js"),[]).then(({data:n})=>n),"v-390aeeac":()=>t(()=>import("./Coupon.html-40987fb2.js"),[]).then(({data:n})=>n),"v-f189b148":()=>t(()=>import("./Diet.html-8378bca4.js"),[]).then(({data:n})=>n),"v-43061c7a":()=>t(()=>import("./HomeAutomation.html-cad5bc00.js"),[]).then(({data:n})=>n),"v-44ac2954":()=>t(()=>import("./Life.html-42703e10.js"),[]).then(({data:n})=>n),"v-45a6d3cf":()=>t(()=>import("./Maintenance.html-70864796.js"),[]).then(({data:n})=>n),"v-cd21b0de":()=>t(()=>import("./Medical.html-6f411dec.js"),[]).then(({data:n})=>n),"v-1b11198a":()=>t(()=>import("./Shoppinglist.html-b1d60834.js"),[]).then(({data:n})=>n),"v-758df17a":()=>t(()=>import("./详情目录.html-e88e5cb8.js"),[]).then(({data:n})=>n),"v-122a55c4":()=>t(()=>import("./Interview.html-11317cd8.js"),[]).then(({data:n})=>n),"v-968482f4":()=>t(()=>import("./Personal_Information.html-b38bc1b1.js"),[]).then(({data:n})=>n),"v-5aad6466":()=>t(()=>import("./详情目录.html-df17fc6e.js"),[]).then(({data:n})=>n),"v-572bc774":()=>t(()=>import("./Comments.html-60ed76ce.js"),[]).then(({data:n})=>n),"v-d73f600c":()=>t(()=>import("./Site Navigation.html-3b10ce8f.js"),[]).then(({data:n})=>n),"v-dd7edeaa":()=>t(()=>import("./VuePress.html-5c3b5b8f.js"),[]).then(({data:n})=>n),"v-4b524440":()=>t(()=>import("./WebGuide.html-334465a7.js"),[]).then(({data:n})=>n),"v-cbf1feee":()=>t(()=>import("./docsify.html-9c0910ee.js"),[]).then(({data:n})=>n),"v-562138db":()=>t(()=>import("./详情目录.html-15ff35f5.js"),[]).then(({data:n})=>n),"v-afb5c98c":()=>t(()=>import("./index.html-c9f7fb79.js"),[]).then(({data:n})=>n),"v-2fc0ab4f":()=>t(()=>import("./navbar.html-43f457cb.js"),[]).then(({data:n})=>n),"v-7b000337":()=>t(()=>import("./sidebar.html-e776fa23.js"),[]).then(({data:n})=>n),"v-2810f732":()=>t(()=>import("./详情目录.html-9c749850.js"),[]).then(({data:n})=>n),"v-3ac441f0":()=>t(()=>import("./docker使用.html-05e0678d.js"),[]).then(({data:n})=>n),"v-6d97b4e7":()=>t(()=>import("./make、makefile、CMake和CMakeLists.html-6d2a3111.js"),[]).then(({data:n})=>n),"v-25397ed8":()=>t(()=>import("./ubuntu分区管理工具.html-1c1f8b3f.js"),[]).then(({data:n})=>n),"v-dc60b056":()=>t(()=>import("./ubuntu命令行修改apt_pip源到国内源.html-f36fc9d2.js"),[]).then(({data:n})=>n),"v-1f2626a6":()=>t(()=>import("./交叉编译.html-004c5490.js"),[]).then(({data:n})=>n),"v-158fc2d0":()=>t(()=>import("./如何查看ip.html-1ba81eff.js"),[]).then(({data:n})=>n),"v-b8c93872":()=>t(()=>import("./安装anaconda、tensorflow、Pytoch.html-644eef84.js"),[]).then(({data:n})=>n),"v-5e4552a4":()=>t(()=>import("./开发知识.html-99ba51a8.js"),[]).then(({data:n})=>n),"v-3e3e22f8":()=>t(()=>import("./深度学基础.html-a77ad3ac.js"),[]).then(({data:n})=>n),"v-8b564fc6":()=>t(()=>import("./详情目录.html-89ae0aa1.js"),[]).then(({data:n})=>n),"v-5392bf0c":()=>t(()=>import("./01.html-b166e5a8.js"),[]).then(({data:n})=>n),"v-50290dce":()=>t(()=>import("./02.html-ad564604.js"),[]).then(({data:n})=>n),"v-4cbf5c90":()=>t(()=>import("./03.html-a349efc1.js"),[]).then(({data:n})=>n),"v-4955ab52":()=>t(()=>import("./04.html-39f5ba0b.js"),[]).then(({data:n})=>n),"v-45ebfa14":()=>t(()=>import("./05.html-225063f9.js"),[]).then(({data:n})=>n),"v-428248d6":()=>t(()=>import("./06.html-f9ea0aa8.js"),[]).then(({data:n})=>n),"v-3f189798":()=>t(()=>import("./07.html-e6c582a4.js"),[]).then(({data:n})=>n),"v-fcb74944":()=>t(()=>import("./多传感器融合概述.html-86e2ea05.js"),[]).then(({data:n})=>n),"v-b6ed6200":()=>t(()=>import("./IWI1843.html-c0f50a7a.js"),[]).then(({data:n})=>n),"v-556d5707":()=>t(()=>import("./图像分类.html-9ea73e67.js"),[]).then(({data:n})=>n),"v-2dc68459":()=>t(()=>import("./VIO里程计.html-ae176e6c.js"),[]).then(({data:n})=>n),"v-3b374fed":()=>t(()=>import("./立体视觉.html-7cf3ba81.js"),[]).then(({data:n})=>n),"v-458ac3fc":()=>t(()=>import("./opencv概述.html-091eecde.js"),[]).then(({data:n})=>n),"v-34aaaefc":()=>t(()=>import("./机器视觉概述.html-aa6c2c5a.js"),[]).then(({data:n})=>n),"v-168d6ffc":()=>t(()=>import("./模式识别概述.html-b6edc575.js"),[]).then(({data:n})=>n),"v-ab6c903c":()=>t(()=>import("./目标检测概述.html-ed87f04c.js"),[]).then(({data:n})=>n),"v-f1cbec06":()=>t(()=>import("./企业要求.html-d5765b74.js"),[]).then(({data:n})=>n),"v-469c82f9":()=>t(()=>import("./车道线检测.html-951815c3.js"),[]).then(({data:n})=>n),"v-4561cc1a":()=>t(()=>import("./CNN.html-7293a5e5.js"),[]).then(({data:n})=>n),"v-4a0ba51f":()=>t(()=>import("./学习资源.html-25d049e3.js"),[]).then(({data:n})=>n),"v-afccdf7a":()=>t(()=>import("./Download Machine Learning Algorithm Cheat Sheet.html-0ced4466.js"),[]).then(({data:n})=>n),"v-d4bc44f4":()=>t(()=>import("./Keras.html-da1f48d6.js"),[]).then(({data:n})=>n),"v-0df8921e":()=>t(()=>import("./Matplotlib.html-e81aea0f.js"),[]).then(({data:n})=>n),"v-2a5173cc":()=>t(()=>import("./Microsoft Azure机器学习备忘单.html-fddf9cb3.js"),[]).then(({data:n})=>n),"v-59cc65be":()=>t(()=>import("./Numpy.html-2fa67c7c.js"),[]).then(({data:n})=>n),"v-58a92c3c":()=>t(()=>import("./PySpark.html-bd35bef3.js"),[]).then(({data:n})=>n),"v-992e20ec":()=>t(()=>import("./Python 3 Cheat Sheet.html-8319329d.js"),[]).then(({data:n})=>n),"v-973c7be4":()=>t(()=>import("./Scikit-Learn.html-45270f3f.js"),[]).then(({data:n})=>n),"v-54d76c1e":()=>t(()=>import("./Scikit-Learn算法.html-d5cabc42.js"),[]).then(({data:n})=>n),"v-e796fda4":()=>t(()=>import("./Scipy.html-138dfa3a.js"),[]).then(({data:n})=>n),"v-3a27e90a":()=>t(()=>import("./TensorFlow.html-8ec79697.js"),[]).then(({data:n})=>n),"v-b52aa0f6":()=>t(()=>import("./使用dplyr和tidyr进行数据整理.html-7e83bb26.js"),[]).then(({data:n})=>n),"v-09aa8acc":()=>t(()=>import("./备忘单.html-52f2053a.js"),[]).then(({data:n})=>n),"v-48bbaf63":()=>t(()=>import("./数据可视化.html-d0dea4dc.js"),[]).then(({data:n})=>n),"v-ae41da2c":()=>t(()=>import("./数据整理.html-725e8a3f.js"),[]).then(({data:n})=>n),"v-4833ebdb":()=>t(()=>import("./数据科学Python编程.html-51e34ef9.js"),[]).then(({data:n})=>n),"v-6952f1b6":()=>t(()=>import("./数据科学_Bokeh速查表.html-81dd382a.js"),[]).then(({data:n})=>n),"v-f0cbb6f6":()=>t(()=>import("./机器学习算法概述.html-19c22205.js"),[]).then(({data:n})=>n),"v-b1bf1050":()=>t(()=>import("./神经网络.html-bbb02b53.js"),[]).then(({data:n})=>n),"v-2d5994ec":()=>t(()=>import("./基本算法.html-8565305f.js"),[]).then(({data:n})=>n),"v-2af9f3cf":()=>t(()=>import("./数学知识.html-173d4e31.js"),[]).then(({data:n})=>n),"v-4d9679e6":()=>t(()=>import("./机器学习100个问题.html-9ab05f34.js"),[]).then(({data:n})=>n),"v-ec36b34c":()=>t(()=>import("./机器学习重点知识.html-528ca4ed.js"),[]).then(({data:n})=>n),"v-2d03f0c6":()=>t(()=>import("./Data_Science_Cheat_Sheet_for_BusinessLeaders.html-f20479e0.js"),[]).then(({data:n})=>n),"v-6805b4bb":()=>t(()=>import("./Data_Visualization_Cheat_Sheet.html-ebec0394.js"),[]).then(({data:n})=>n),"v-336a38f6":()=>t(()=>import("./Importing_Datain_Python_Cheat_Sheet.html-9e699a19.js"),[]).then(({data:n})=>n),"v-def94006":()=>t(()=>import("./Jupyter_Notebook_Cheat_Sheet.html-0adb8d69.js"),[]).then(({data:n})=>n),"v-58116dc6":()=>t(()=>import("./Keras_Cheat_Sheet Neural_Networks_in_Python.html-e4f99b7f.js"),[]).then(({data:n})=>n),"v-8dab9cb2":()=>t(()=>import("./Matplotlib_Cheat_Sheet_Plotting_in_Python.html-2e68f063.js"),[]).then(({data:n})=>n),"v-46da7670":()=>t(()=>import("./NumPy_Cheat_Sheet_Data_Analysis_in_Python.html-c2df47a6.js"),[]).then(({data:n})=>n),"v-5e173d0c":()=>t(()=>import("./Pandas Cheat Sheet for Data Science in Python.html-2c819cfe.js"),[]).then(({data:n})=>n),"v-3bd3ff2b":()=>t(()=>import("./Pandas_Cheat_Sheet_Data_Wrangling_in_Python.html-bc8fd031.js"),[]).then(({data:n})=>n),"v-7f5facd4":()=>t(()=>import("./Power_BI_for_Business_Intelligence_Sheet.html-7f237ee9.js"),[]).then(({data:n})=>n),"v-f5428c04":()=>t(()=>import("./PySpark_Cheat_Sheet_Spark_DataFrames_in_Python.html-c53d825c.js"),[]).then(({data:n})=>n),"v-dc7629d2":()=>t(()=>import("./PySpark_Cheat_Sheet_Spark_in_Python.html-15304728.js"),[]).then(({data:n})=>n),"v-23bbef8c":()=>t(()=>import("./Python_Data_Visualization_Bokeh_Cheat_Sheet.html-08bd1f35.js"),[]).then(({data:n})=>n),"v-4d72f195":()=>t(()=>import("./Python_Seaborn_Cheat_Sheet.html-ca3df472.js"),[]).then(({data:n})=>n),"v-1736b1a8":()=>t(()=>import("./SQL_for_Data_Science.html-8fd9cd04.js"),[]).then(({data:n})=>n),"v-4ae7f9a0":()=>t(()=>import("./SciPy_Cheat_Sheet_Linear_Algebra_in_Python.html-adbcaf72.js"),[]).then(({data:n})=>n),"v-e6e27064":()=>t(()=>import("./Scikit_Learn_Cheat_Sheet_Python_Machine_Learning.html-2641f0a7.js"),[]).then(({data:n})=>n),"v-5d588d29":()=>t(()=>import("./Tidyverse_Cheat_Sheet_For_Beginners.html-dbb552e2.js"),[]).then(({data:n})=>n),"v-41eb2fad":()=>t(()=>import("./Top_Machine_Learning_Algoritms.html-ac13b74c.js"),[]).then(({data:n})=>n),"v-7aafd3e1":()=>t(()=>import("./spaCy_Cheat_Sheet_Advanced_NLP_in_Python.html-3beb707c.js"),[]).then(({data:n})=>n),"v-a36af388":()=>t(()=>import("./xts_Cheat_Sheet_Time_Series_in_R.html-05e1b3e2.js"),[]).then(({data:n})=>n),"v-8811a470":()=>t(()=>import("./感知算法概述.html-e9a6bcd6.js"),[]).then(({data:n})=>n),"v-080b3415":()=>t(()=>import("./STL Algorithms.html-ee59d073.js"),[]).then(({data:n})=>n),"v-fd0c12b2":()=>t(()=>import("./STL Containers.html-555f06c2.js"),[]).then(({data:n})=>n),"v-683f08d8":()=>t(()=>import("./STL Iterators.html-d3bd7576.js"),[]).then(({data:n})=>n),"v-68ce8cab":()=>t(()=>import("./string相关函数.html-68a9c33f.js"),[]).then(({data:n})=>n),"v-282370f6":()=>t(()=>import("./vs使用leetcode.html-47843b33.js"),[]).then(({data:n})=>n),"v-35992c28":()=>t(()=>import("./手动构建二叉树.html-c115931c.js"),[]).then(({data:n})=>n),"v-14eff5b4":()=>t(()=>import("./Ubuntu使用经验.html-1f71297a.js"),[]).then(({data:n})=>n),"v-2508f406":()=>t(()=>import("./leetcode算法学习.html-d546c3ed.js"),[]).then(({data:n})=>n),"v-16d7eae4":()=>t(()=>import("./Conda安装.html-3b19d8de.js"),[]).then(({data:n})=>n),"v-06b354bd":()=>t(()=>import("./git安装及使用.html-7f40667a.js"),[]).then(({data:n})=>n),"v-fcd49ea4":()=>t(()=>import("./PS系列.html-a7b67fdd.js"),[]).then(({data:n})=>n),"v-090c59bd":()=>t(()=>import("./激活和安装.html-ade100dc.js"),[]).then(({data:n})=>n),"v-60368e60":()=>t(()=>import("./Pytorch.html-a6ddad85.js"),[]).then(({data:n})=>n),"v-cc837190":()=>t(()=>import("./tensorflow.html-065a1eb7.js"),[]).then(({data:n})=>n),"v-49fdddb7":()=>t(()=>import("./Vscode常见问题.html-0edeca06.js"),[]).then(({data:n})=>n),"v-267bd09c":()=>t(()=>import("./配置vscode代理.html-c7cf4588.js"),[]).then(({data:n})=>n),"v-0f95e42c":()=>t(()=>import("./0_live_equipments.html-6ca6dbb9.js"),[]).then(({data:n})=>n),"v-2a6722dc":()=>t(()=>import("./1_obs_basic.html-427fd5d7.js"),[]).then(({data:n})=>n),"v-d42be1fe":()=>t(()=>import("./2_obs_streamfx.html-a13b2167.js"),[]).then(({data:n})=>n),"v-3be238de":()=>t(()=>import("./3_obs_plugins.html-4ef161cc.js"),[]).then(({data:n})=>n),"v-7577c576":()=>t(()=>import("./4_live_effects.html-c5f1bc0f.js"),[]).then(({data:n})=>n),"v-13093ca8":()=>t(()=>import("./5_live_platforms.html-97d03696.js"),[]).then(({data:n})=>n),"v-3a5c1610":()=>t(()=>import("./6_live_positioning.html-425adabe.js"),[]).then(({data:n})=>n),"v-428ff05c":()=>t(()=>import("./前端开发与设计.html-b11004aa.js"),[]).then(({data:n})=>n),"v-ccaa603c":()=>t(()=>import("./吃掉那只青蛙.html-81c67294.js"),[]).then(({data:n})=>n),"v-5077b2a8":()=>t(()=>import("./提升思维.html-5e0e69a3.js"),[]).then(({data:n})=>n),"v-0fb6d2aa":()=>t(()=>import("./影响力.html-b4c8b518.js"),[]).then(({data:n})=>n),"v-5941f6a8":()=>t(()=>import("./社会认知.html-6c8333e4.js"),[]).then(({data:n})=>n),"v-7652e8ab":()=>t(()=>import("./自我认知.html-db7a1004.js"),[]).then(({data:n})=>n),"v-193410a6":()=>t(()=>import("./写作.html-6349a880.js"),[]).then(({data:n})=>n),"v-5bda9b9c":()=>t(()=>import("./商业传记.html-b53ae2db.js"),[]).then(({data:n})=>n),"v-954c8e4e":()=>t(()=>import("./市场营销.html-2e8b29d3.js"),[]).then(({data:n})=>n),"v-2fa3514c":()=>t(()=>import("./社会经济.html-6008e673.js"),[]).then(({data:n})=>n),"v-cfd7a768":()=>t(()=>import("./doker.html-2e394bd7.js"),[]).then(({data:n})=>n),"v-09974639":()=>t(()=>import("./mlib.html-5e50547c.js"),[]).then(({data:n})=>n),"v-5da217d9":()=>t(()=>import("./nntc.html-5d8fe657.js"),[]).then(({data:n})=>n),"v-063e92f9":()=>t(()=>import("./基于LeNet-5的手写数字识别.html-3fe51ef8.js"),[]).then(({data:n})=>n),"v-54376779":()=>t(()=>import("./READEME.html-a7c0f1e5.js"),[]).then(({data:n})=>n),"v-0c2cc5c3":()=>t(()=>import("./std mmultimap.html-87939610.js"),[]).then(({data:n})=>n),"v-55e0227d":()=>t(()=>import("./std mmultiset.html-9ce1f2d0.js"),[]).then(({data:n})=>n),"v-c391adde":()=>t(()=>import("./std set.html-70756ffd.js"),[]).then(({data:n})=>n),"v-decc39fe":()=>t(()=>import("./std unorder_map.html-ffa325fa.js"),[]).then(({data:n})=>n),"v-4b65808a":()=>t(()=>import("./std unorder_set.html-0d4eb519.js"),[]).then(({data:n})=>n),"v-30fe8b7c":()=>t(()=>import("./二叉树.html-74002fc7.js"),[]).then(({data:n})=>n),"v-29cabcf7":()=>t(()=>import("./代码随想录算法总结(C__)版本——二叉树 .html-3764ec02.js"),[]).then(({data:n})=>n),"v-0cef7c3e":()=>t(()=>import("./代码随想录算法总结(C__)版本——动态规划（一）.html-6bf791a3.js"),[]).then(({data:n})=>n),"v-35a63887":()=>t(()=>import("./代码随想录算法总结(C__)版本——动态规划（三）.html-b67af74e.js"),[]).then(({data:n})=>n),"v-904008be":()=>t(()=>import("./代码随想录算法总结(C__)版本——动态规划（二）背包问题.html-09da9eb3.js"),[]).then(({data:n})=>n),"v-3dffc5f0":()=>t(()=>import("./代码随想录算法总结(C__)版本——单调栈.html-66726eed.js"),[]).then(({data:n})=>n),"v-1141bba7":()=>t(()=>import("./代码随想录算法总结(C__)版本——双指针.html-9c0551a9.js"),[]).then(({data:n})=>n),"v-0251d77a":()=>t(()=>import("./代码随想录算法总结(C__)版本——哈希、字符串(一).html-245d24f6.js"),[]).then(({data:n})=>n),"v-b416d81a":()=>t(()=>import("./代码随想录算法总结(C__)版本——哈希、字符串（二）.html-031462b6.js"),[]).then(({data:n})=>n),"v-769589df":()=>t(()=>import("./代码随想录算法总结(C__)版本——回溯.html-60ca0937.js"),[]).then(({data:n})=>n),"v-375de289":()=>t(()=>import("./代码随想录算法总结(C__)版本——数组、链表.html-7944890b.js"),[]).then(({data:n})=>n),"v-9b426004":()=>t(()=>import("./代码随想录算法总结(C__)版本——数组、链表（二）.html-2320990e.js"),[]).then(({data:n})=>n),"v-3fc2abd2":()=>t(()=>import("./代码随想录算法总结(C__)版本——栈和队列.html-178f8253.js"),[]).then(({data:n})=>n),"v-c4b5c206":()=>t(()=>import("./代码随想录算法总结(C__)版本——贪心.html-fc4d4fc8.js"),[]).then(({data:n})=>n),"v-4eb7a968":()=>t(()=>import("./代码随想录算法总结(python)版本.html-2ee5a88c.js"),[]).then(({data:n})=>n),"v-23ff6a91":()=>t(()=>import("./图知识.html-b191b4e9.js"),[]).then(({data:n})=>n),"v-f98b864a":()=>t(()=>import("./华为机试1-15.html-5d570cdf.js"),[]).then(({data:n})=>n),"v-11571ff2":()=>t(()=>import("./华为机试16-30.html-fdfd6a59.js"),[]).then(({data:n})=>n),"v-52024d87":()=>t(()=>import("./华为机试31-45.html-75024855.js"),[]).then(({data:n})=>n),"v-e633b5dc":()=>t(()=>import("./华为机试46-60.html-9244b98f.js"),[]).then(({data:n})=>n),"v-64dd5ab2":()=>t(()=>import("./华为机试61-75.html-8e288d03.js"),[]).then(({data:n})=>n),"v-08752a32":()=>t(()=>import("./华为机试76-90.html-500b064b.js"),[]).then(({data:n})=>n),"v-395aae57":()=>t(()=>import("./华为机试91-108.html-df426a94.js"),[]).then(({data:n})=>n),"v-740cffbe":()=>t(()=>import("./华为机试目录.html-7ff598d7.js"),[]).then(({data:n})=>n),"v-82e57f90":()=>t(()=>import("./字符串.html-0929e8f8.js"),[]).then(({data:n})=>n),"v-2d1ff9b6":()=>t(()=>import("./VSCODE配置python环境的问题.html-eda09663.js"),[]).then(({data:n})=>n),"v-3706649a":()=>t(()=>import("./404.html-43191c10.js"),[]).then(({data:n})=>n),"v-c0fd436c":()=>t(()=>import("./index.html-d771f383.js"),[]).then(({data:n})=>n),"v-6c2440fd":()=>t(()=>import("./index.html-d80026b0.js"),[]).then(({data:n})=>n),"v-7dedfedf":()=>t(()=>import("./index.html-bbcf08dc.js"),[]).then(({data:n})=>n),"v-3e63b855":()=>t(()=>import("./index.html-5421428f.js"),[]).then(({data:n})=>n),"v-fcb5a2b6":()=>t(()=>import("./index.html-0edf5e87.js"),[]).then(({data:n})=>n),"v-93e92daa":()=>t(()=>import("./index.html-20f6a145.js"),[]).then(({data:n})=>n),"v-f24c27d0":()=>t(()=>import("./index.html-2010e906.js"),[]).then(({data:n})=>n),"v-6d1a129e":()=>t(()=>import("./index.html-ed798c7e.js"),[]).then(({data:n})=>n),"v-d8980732":()=>t(()=>import("./index.html-fc7d4f30.js"),[]).then(({data:n})=>n),"v-0ced9628":()=>t(()=>import("./index.html-ebcde351.js"),[]).then(({data:n})=>n),"v-76e3d7b5":()=>t(()=>import("./index.html-87c3e43b.js"),[]).then(({data:n})=>n),"v-be857f74":()=>t(()=>import("./index.html-008f9433.js"),[]).then(({data:n})=>n),"v-6e6a0778":()=>t(()=>import("./index.html-0c5019c2.js"),[]).then(({data:n})=>n),"v-0ea5cf26":()=>t(()=>import("./index.html-947b7bb1.js"),[]).then(({data:n})=>n),"v-34187ef8":()=>t(()=>import("./index.html-3546f775.js"),[]).then(({data:n})=>n),"v-2059f917":()=>t(()=>import("./index.html-3d282c70.js"),[]).then(({data:n})=>n),"v-5583c685":()=>t(()=>import("./index.html-95e4e7a5.js"),[]).then(({data:n})=>n),"v-d43d9c1e":()=>t(()=>import("./index.html-963c4555.js"),[]).then(({data:n})=>n),"v-13beb188":()=>t(()=>import("./index.html-918264b3.js"),[]).then(({data:n})=>n),"v-c3a82396":()=>t(()=>import("./index.html-76719d6a.js"),[]).then(({data:n})=>n),"v-5bdef966":()=>t(()=>import("./index.html-6ac27e79.js"),[]).then(({data:n})=>n),"v-6f99db1e":()=>t(()=>import("./index.html-4e0d7beb.js"),[]).then(({data:n})=>n),"v-250fc524":()=>t(()=>import("./index.html-b63062f2.js"),[]).then(({data:n})=>n),"v-65b40627":()=>t(()=>import("./index.html-7f9f86a0.js"),[]).then(({data:n})=>n),"v-1ef96281":()=>t(()=>import("./index.html-3e572021.js"),[]).then(({data:n})=>n),"v-bc4f592c":()=>t(()=>import("./index.html-24661896.js"),[]).then(({data:n})=>n),"v-5a538009":()=>t(()=>import("./index.html-649458f4.js"),[]).then(({data:n})=>n),"v-6bd118f4":()=>t(()=>import("./index.html-a617d958.js"),[]).then(({data:n})=>n),"v-23804371":()=>t(()=>import("./index.html-8eddbea3.js"),[]).then(({data:n})=>n),"v-145ac574":()=>t(()=>import("./index.html-9ba381b1.js"),[]).then(({data:n})=>n),"v-c1f8ec22":()=>t(()=>import("./index.html-d0854467.js"),[]).then(({data:n})=>n),"v-c25a1d84":()=>t(()=>import("./index.html-358f3828.js"),[]).then(({data:n})=>n),"v-10fcf391":()=>t(()=>import("./index.html-a1eea5d9.js"),[]).then(({data:n})=>n),"v-51cde070":()=>t(()=>import("./index.html-9c0353b0.js"),[]).then(({data:n})=>n),"v-343c5b24":()=>t(()=>import("./index.html-5e9fe611.js"),[]).then(({data:n})=>n),"v-fe15c146":()=>t(()=>import("./index.html-3fdf2099.js"),[]).then(({data:n})=>n),"v-6d0c2fb3":()=>t(()=>import("./index.html-127613f5.js"),[]).then(({data:n})=>n),"v-0d75c62c":()=>t(()=>import("./index.html-ea6f3092.js"),[]).then(({data:n})=>n),"v-7cfaf478":()=>t(()=>import("./index.html-cab5dffc.js"),[]).then(({data:n})=>n),"v-0985594b":()=>t(()=>import("./index.html-f19583b4.js"),[]).then(({data:n})=>n),"v-39b2b91d":()=>t(()=>import("./index.html-aa4031f2.js"),[]).then(({data:n})=>n),"v-820dd504":()=>t(()=>import("./index.html-abaf0a7f.js"),[]).then(({data:n})=>n),"v-54e5d97d":()=>t(()=>import("./index.html-f112ced8.js"),[]).then(({data:n})=>n),"v-8bff77f0":()=>t(()=>import("./index.html-9a6485f2.js"),[]).then(({data:n})=>n),"v-40423f97":()=>t(()=>import("./index.html-7aa64ddb.js"),[]).then(({data:n})=>n),"v-1d2491d8":()=>t(()=>import("./index.html-b94f96a7.js"),[]).then(({data:n})=>n),"v-f71f574a":()=>t(()=>import("./index.html-e2182318.js"),[]).then(({data:n})=>n),"v-18edd1fa":()=>t(()=>import("./index.html-a01128eb.js"),[]).then(({data:n})=>n),"v-16bde808":()=>t(()=>import("./index.html-835f5c4b.js"),[]).then(({data:n})=>n),"v-30a064d8":()=>t(()=>import("./index.html-5786e02c.js"),[]).then(({data:n})=>n),"v-5b8c87a0":()=>t(()=>import("./index.html-450051a4.js"),[]).then(({data:n})=>n),"v-4b695752":()=>t(()=>import("./index.html-4bcd382e.js"),[]).then(({data:n})=>n),"v-aa9b67b6":()=>t(()=>import("./index.html-d719d14a.js"),[]).then(({data:n})=>n),"v-96ca831c":()=>t(()=>import("./index.html-2c039ecc.js"),[]).then(({data:n})=>n),"v-18da1d4a":()=>t(()=>import("./index.html-d8323dd4.js"),[]).then(({data:n})=>n),"v-25ef39fc":()=>t(()=>import("./index.html-edd68c86.js"),[]).then(({data:n})=>n),"v-a232faec":()=>t(()=>import("./index.html-80619e61.js"),[]).then(({data:n})=>n),"v-395841ba":()=>t(()=>import("./index.html-6b9c5577.js"),[]).then(({data:n})=>n),"v-7776e8ca":()=>t(()=>import("./index.html-06020251.js"),[]).then(({data:n})=>n),"v-5db4daba":()=>t(()=>import("./index.html-f1bd7ae4.js"),[]).then(({data:n})=>n),"v-282e9bed":()=>t(()=>import("./index.html-a5200713.js"),[]).then(({data:n})=>n),"v-2c85be28":()=>t(()=>import("./index.html-768a6726.js"),[]).then(({data:n})=>n),"v-1eaa3342":()=>t(()=>import("./index.html-cb48cad0.js"),[]).then(({data:n})=>n),"v-8475bea4":()=>t(()=>import("./index.html-23109dca.js"),[]).then(({data:n})=>n),"v-3f02980e":()=>t(()=>import("./index.html-357a783e.js"),[]).then(({data:n})=>n),"v-1e50dd80":()=>t(()=>import("./index.html-2e5e619e.js"),[]).then(({data:n})=>n),"v-9e59f8b0":()=>t(()=>import("./index.html-597f8c84.js"),[]).then(({data:n})=>n),"v-9e3ba55e":()=>t(()=>import("./index.html-5ffaf97b.js"),[]).then(({data:n})=>n),"v-a4a38bbe":()=>t(()=>import("./index.html-712fd3f6.js"),[]).then(({data:n})=>n),"v-5e535007":()=>t(()=>import("./index.html-920eaddf.js"),[]).then(({data:n})=>n),"v-286a28ba":()=>t(()=>import("./index.html-50efc74e.js"),[]).then(({data:n})=>n),"v-68af4193":()=>t(()=>import("./index.html-488c6315.js"),[]).then(({data:n})=>n),"v-59e96ac9":()=>t(()=>import("./index.html-2e26bf3f.js"),[]).then(({data:n})=>n),"v-5bc93818":()=>t(()=>import("./index.html-85ac7315.js"),[]).then(({data:n})=>n),"v-744d024e":()=>t(()=>import("./index.html-5b54f87c.js"),[]).then(({data:n})=>n),"v-e52c881c":()=>t(()=>import("./index.html-3d193931.js"),[]).then(({data:n})=>n),"v-154dc4c4":()=>t(()=>import("./index.html-b782d287.js"),[]).then(({data:n})=>n),"v-01560935":()=>t(()=>import("./index.html-5fbf1bd7.js"),[]).then(({data:n})=>n),"v-150ab774":()=>t(()=>import("./index.html-12aaf7d4.js"),[]).then(({data:n})=>n),"v-b7d62b20":()=>t(()=>import("./index.html-dafaff96.js"),[]).then(({data:n})=>n),"v-6232e040":()=>t(()=>import("./index.html-d6a835cd.js"),[]).then(({data:n})=>n),"v-36ced019":()=>t(()=>import("./index.html-b4dc960a.js"),[]).then(({data:n})=>n),"v-5bf89d1e":()=>t(()=>import("./index.html-48880ac3.js"),[]).then(({data:n})=>n),"v-7dbcb65a":()=>t(()=>import("./index.html-88b9a85c.js"),[]).then(({data:n})=>n),"v-98ba1434":()=>t(()=>import("./index.html-17b5d41d.js"),[]).then(({data:n})=>n),"v-2aea4e7c":()=>t(()=>import("./index.html-f1c8aa80.js"),[]).then(({data:n})=>n),"v-58b53772":()=>t(()=>import("./index.html-bc24ebac.js"),[]).then(({data:n})=>n),"v-20581ca8":()=>t(()=>import("./index.html-780105c8.js"),[]).then(({data:n})=>n),"v-72c4ce0d":()=>t(()=>import("./index.html-ef0e7919.js"),[]).then(({data:n})=>n),"v-2687e471":()=>t(()=>import("./index.html-3e13d10b.js"),[]).then(({data:n})=>n),"v-21ee427c":()=>t(()=>import("./index.html-32e2ae23.js"),[]).then(({data:n})=>n),"v-58d23f98":()=>t(()=>import("./index.html-e425546d.js"),[]).then(({data:n})=>n),"v-473420d3":()=>t(()=>import("./index.html-c8e57235.js"),[]).then(({data:n})=>n),"v-315ef24a":()=>t(()=>import("./index.html-8eef6355.js"),[]).then(({data:n})=>n),"v-65eddd24":()=>t(()=>import("./index.html-0939e3eb.js"),[]).then(({data:n})=>n),"v-29255efc":()=>t(()=>import("./index.html-738d8dc8.js"),[]).then(({data:n})=>n),"v-78cbe7bb":()=>t(()=>import("./index.html-dd843a9a.js"),[]).then(({data:n})=>n),"v-229aed01":()=>t(()=>import("./index.html-e76ac2dc.js"),[]).then(({data:n})=>n),"v-9db2faec":()=>t(()=>import("./index.html-e9666e6f.js"),[]).then(({data:n})=>n),"v-7f36686c":()=>t(()=>import("./index.html-b1a332cc.js"),[]).then(({data:n})=>n),"v-2565fbec":()=>t(()=>import("./index.html-6812d050.js"),[]).then(({data:n})=>n),"v-878ee446":()=>t(()=>import("./index.html-3a9651b4.js"),[]).then(({data:n})=>n),"v-1b3d947c":()=>t(()=>import("./index.html-038aedfd.js"),[]).then(({data:n})=>n),"v-b314c74c":()=>t(()=>import("./index.html-acdfe20a.js"),[]).then(({data:n})=>n),"v-9c48d85a":()=>t(()=>import("./index.html-d23ad516.js"),[]).then(({data:n})=>n),"v-245f5676":()=>t(()=>import("./index.html-6ad2ea90.js"),[]).then(({data:n})=>n),"v-895a84ee":()=>t(()=>import("./index.html-be84a5e1.js"),[]).then(({data:n})=>n),"v-262aef94":()=>t(()=>import("./index.html-10f556f8.js"),[]).then(({data:n})=>n),"v-ba3c9d2c":()=>t(()=>import("./index.html-715bcaf0.js"),[]).then(({data:n})=>n),"v-211f44ee":()=>t(()=>import("./index.html-2e9f1787.js"),[]).then(({data:n})=>n),"v-14145d44":()=>t(()=>import("./index.html-d6034b38.js"),[]).then(({data:n})=>n),"v-200c1937":()=>t(()=>import("./index.html-30dea42f.js"),[]).then(({data:n})=>n),"v-006f9769":()=>t(()=>import("./index.html-451edf7f.js"),[]).then(({data:n})=>n),"v-7f234e30":()=>t(()=>import("./index.html-6a979c9b.js"),[]).then(({data:n})=>n),"v-6106c001":()=>t(()=>import("./index.html-8a525239.js"),[]).then(({data:n})=>n),"v-3f71e568":()=>t(()=>import("./index.html-32ba475d.js"),[]).then(({data:n})=>n),"v-28cbf673":()=>t(()=>import("./index.html-cf415bd8.js"),[]).then(({data:n})=>n),"v-60d861aa":()=>t(()=>import("./index.html-52a0a4d8.js"),[]).then(({data:n})=>n),"v-7cc75969":()=>t(()=>import("./index.html-4778f07a.js"),[]).then(({data:n})=>n),"v-0da0cada":()=>t(()=>import("./index.html-6647e6b7.js"),[]).then(({data:n})=>n),"v-c27e0a54":()=>t(()=>import("./index.html-50eaa539.js"),[]).then(({data:n})=>n),"v-295ddd76":()=>t(()=>import("./index.html-7cdfe47c.js"),[]).then(({data:n})=>n),"v-1a507bec":()=>t(()=>import("./index.html-7abb36a0.js"),[]).then(({data:n})=>n),"v-f8ee5dc4":()=>t(()=>import("./index.html-61445e48.js"),[]).then(({data:n})=>n),"v-e93a9404":()=>t(()=>import("./index.html-0976b44e.js"),[]).then(({data:n})=>n),"v-ae84acf8":()=>t(()=>import("./index.html-c32b28c2.js"),[]).then(({data:n})=>n),"v-211e8c1d":()=>t(()=>import("./index.html-1f5c3b6f.js"),[]).then(({data:n})=>n),"v-3f1309c0":()=>t(()=>import("./index.html-034daf18.js"),[]).then(({data:n})=>n),"v-293a5861":()=>t(()=>import("./index.html-1d90591f.js"),[]).then(({data:n})=>n),"v-b309c306":()=>t(()=>import("./index.html-650ca91c.js"),[]).then(({data:n})=>n),"v-b3026aae":()=>t(()=>import("./index.html-8206f39b.js"),[]).then(({data:n})=>n)},So=JSON.parse('{"base":"/","lang":"zh-CN","title":"南叔先生-开源笔记","description":"关于我认知里的工科世界：自动驾驶和机器人是工科世界里的百科全书，记录并输出一切能让自己提升的知识。","head":[],"locales":{}}'),va={"v-3f9d0d55":p(()=>t(()=>import("./DailyRoutine.html-7d611b21.js"),["assets/DailyRoutine.html-7d611b21.js","assets/framework-39b9cf04.js"])),"v-3d0aa58a":p(()=>t(()=>import("./Fitness.html-ce027332.js"),["assets/Fitness.html-ce027332.js","assets/framework-39b9cf04.js"])),"v-8daa1a0e":p(()=>t(()=>import("./index.html-708f1e54.js"),["assets/index.html-708f1e54.js","assets/framework-39b9cf04.js"])),"v-35f5db9e":p(()=>t(()=>import("./blog.html-fb6cb309.js"),["assets/blog.html-fb6cb309.js","assets/framework-39b9cf04.js"])),"v-184f4da6":p(()=>t(()=>import("./intro.html-1e9c9bf3.js"),["assets/intro.html-1e9c9bf3.js","assets/framework-39b9cf04.js"])),"v-cbac378e":p(()=>t(()=>import("./每日一问.html-f7b636c2.js"),["assets/每日一问.html-f7b636c2.js","assets/framework-39b9cf04.js"])),"v-1b6f6622":p(()=>t(()=>import("./详情目录.html-f947794d.js"),["assets/详情目录.html-f947794d.js","assets/framework-39b9cf04.js"])),"v-f2b510ca":p(()=>t(()=>import("./index.html-ba38ab81.js"),["assets/index.html-ba38ab81.js","assets/framework-39b9cf04.js"])),"v-5f23e614":p(()=>t(()=>import("./传感器篇.html-d0a2cf02.js"),["assets/传感器篇.html-d0a2cf02.js","assets/framework-39b9cf04.js"])),"v-73fd881e":p(()=>t(()=>import("./详情目录.html-83dcec4a.js"),["assets/详情目录.html-83dcec4a.js","assets/framework-39b9cf04.js"])),"v-71abbcb8":p(()=>t(()=>import("./几块重点知识.html-51b5767a.js"),["assets/几块重点知识.html-51b5767a.js","assets/framework-39b9cf04.js"])),"v-70468548":p(()=>t(()=>import("./图像处理概述.html-572b6f64.js"),["assets/图像处理概述.html-572b6f64.js","assets/framework-39b9cf04.js"])),"v-1c922e62":p(()=>t(()=>import("./详情目录.html-5571d4ef.js"),["assets/详情目录.html-5571d4ef.js","assets/framework-39b9cf04.js"])),"v-43e0343a":p(()=>t(()=>import("./岗位要求.html-3bea0b16.js"),["assets/岗位要求.html-3bea0b16.js","assets/framework-39b9cf04.js"])),"v-14c29da6":p(()=>t(()=>import("./详情目录.html-7003d99d.js"),["assets/详情目录.html-7003d99d.js","assets/framework-39b9cf04.js"])),"v-b5397e12":p(()=>t(()=>import("./优化方法概述.html-0aa17d90.js"),["assets/优化方法概述.html-0aa17d90.js","assets/framework-39b9cf04.js"])),"v-08d39477":p(()=>t(()=>import("./详情目录.html-69ab145a.js"),["assets/详情目录.html-69ab145a.js","assets/framework-39b9cf04.js"])),"v-ce610fb2":p(()=>t(()=>import("./详情目录.html-cb7f583f.js"),["assets/详情目录.html-cb7f583f.js","assets/framework-39b9cf04.js"])),"v-f324007c":p(()=>t(()=>import("./SLAM概述.html-1c656ad9.js"),["assets/SLAM概述.html-1c656ad9.js","assets/framework-39b9cf04.js"])),"v-47a7673e":p(()=>t(()=>import("./详情目录.html-4758289c.js"),["assets/详情目录.html-4758289c.js","assets/framework-39b9cf04.js"])),"v-08ca3814":p(()=>t(()=>import("./详情目录.html-523e42b8.js"),["assets/详情目录.html-523e42b8.js","assets/framework-39b9cf04.js"])),"v-a08b6ee0":p(()=>t(()=>import("./深度学习常用框架.html-51f9df8d.js"),["assets/深度学习常用框架.html-51f9df8d.js","assets/framework-39b9cf04.js"])),"v-25e12d9b":p(()=>t(()=>import("./详情目录.html-0f5dd31d.js"),["assets/详情目录.html-0f5dd31d.js","assets/framework-39b9cf04.js"])),"v-54bd8ca5":p(()=>t(()=>import("./详情目录.html-4d7ae25b.js"),["assets/详情目录.html-4d7ae25b.js","assets/framework-39b9cf04.js"])),"v-409dbff8":p(()=>t(()=>import("./详情目录.html-498ecda0.js"),["assets/详情目录.html-498ecda0.js","assets/framework-39b9cf04.js"])),"v-0c685ccf":p(()=>t(()=>import("./自动驾驶框架.html-2ef5befd.js"),["assets/自动驾驶框架.html-2ef5befd.js","assets/framework-39b9cf04.js"])),"v-a85882fc":p(()=>t(()=>import("./自动驾驶概述.html-003cf7a4.js"),["assets/自动驾驶概述.html-003cf7a4.js","assets/framework-39b9cf04.js"])),"v-67b64117":p(()=>t(()=>import("./详情目录.html-5246a100.js"),["assets/详情目录.html-5246a100.js","assets/framework-39b9cf04.js"])),"v-70b4f572":p(()=>t(()=>import("./C__个人经验.html-0868dd24.js"),["assets/C__个人经验.html-0868dd24.js","assets/framework-39b9cf04.js"])),"v-0cb8adde":p(()=>t(()=>import("./C__面试常见问题.html-167d1adf.js"),["assets/C__面试常见问题.html-167d1adf.js","assets/framework-39b9cf04.js"])),"v-6661285a":p(()=>t(()=>import("./容器应用知识.html-c07b6f19.js"),["assets/容器应用知识.html-c07b6f19.js","assets/framework-39b9cf04.js"])),"v-3c4f39c8":p(()=>t(()=>import("./查找算法.html-453fc10d.js"),["assets/查找算法.html-453fc10d.js","assets/framework-39b9cf04.js"])),"v-38689776":p(()=>t(()=>import("./计算机基础知识.html-6273ec4f.js"),["assets/计算机基础知识.html-6273ec4f.js","assets/framework-39b9cf04.js"])),"v-983620b4":p(()=>t(()=>import("./详情目录.html-b2e7affa.js"),["assets/详情目录.html-b2e7affa.js","assets/framework-39b9cf04.js"])),"v-34885982":p(()=>t(()=>import("./进制转换、字符串操、大数运算.html-b422d052.js"),["assets/进制转换、字符串操、大数运算.html-b422d052.js","assets/framework-39b9cf04.js"])),"v-216f4be0":p(()=>t(()=>import("./Python个人经验.html-5bc70d09.js"),["assets/Python个人经验.html-5bc70d09.js","assets/framework-39b9cf04.js"])),"v-55c868b4":p(()=>t(()=>import("./详情目录.html-671f1251.js"),["assets/详情目录.html-671f1251.js","assets/framework-39b9cf04.js"])),"v-6960f508":p(()=>t(()=>import("./Matlab_Personal_Experience.html-19bfdd4d.js"),["assets/Matlab_Personal_Experience.html-19bfdd4d.js","assets/framework-39b9cf04.js"])),"v-b1fac674":p(()=>t(()=>import("./详情目录.html-4717a675.js"),["assets/详情目录.html-4717a675.js","assets/framework-39b9cf04.js"])),"v-e2af76be":p(()=>t(()=>import("./Docker.html-6b8bc249.js"),["assets/Docker.html-6b8bc249.js","assets/framework-39b9cf04.js"])),"v-1af0691c":p(()=>t(()=>import("./Huginn.html-ef88b35f.js"),["assets/Huginn.html-ef88b35f.js","assets/framework-39b9cf04.js"])),"v-20fdbfbe":p(()=>t(()=>import("./Linux命令大全.html-912ce5ca.js"),["assets/Linux命令大全.html-912ce5ca.js","assets/framework-39b9cf04.js"])),"v-db1b8a5e":p(()=>t(()=>import("./NAS.html-e663a356.js"),["assets/NAS.html-e663a356.js","assets/framework-39b9cf04.js"])),"v-e1627542":p(()=>t(()=>import("./TTRSS.html-22a17bf3.js"),["assets/TTRSS.html-22a17bf3.js","assets/framework-39b9cf04.js"])),"v-126b6205":p(()=>t(()=>import("./linux基础.html-fee20be2.js"),["assets/linux基础.html-fee20be2.js","assets/framework-39b9cf04.js"])),"v-0a266134":p(()=>t(()=>import("./详情目录.html-4f0c0471.js"),["assets/详情目录.html-4f0c0471.js","assets/framework-39b9cf04.js"])),"v-4b876903":p(()=>t(()=>import("./ROS学习笔记.html-8f6c028e.js"),["assets/ROS学习笔记.html-8f6c028e.js","assets/framework-39b9cf04.js"])),"v-3b9795f5":p(()=>t(()=>import("./详情目录.html-fa8f543b.js"),["assets/详情目录.html-fa8f543b.js","assets/framework-39b9cf04.js"])),"v-61953c47":p(()=>t(()=>import("./详情目录.html-7bfd86c9.js"),["assets/详情目录.html-7bfd86c9.js","assets/framework-39b9cf04.js"])),"v-4c82cb4a":p(()=>t(()=>import("./详情目录.html-4514ab1f.js"),["assets/详情目录.html-4514ab1f.js","assets/framework-39b9cf04.js"])),"v-6a8e50a4":p(()=>t(()=>import("./详情目录.html-fa541d71.js"),["assets/详情目录.html-fa541d71.js","assets/framework-39b9cf04.js"])),"v-acd854b2":p(()=>t(()=>import("./机械个人经验.html-deb99c35.js"),["assets/机械个人经验.html-deb99c35.js","assets/framework-39b9cf04.js"])),"v-76997a97":p(()=>t(()=>import("./详情目录.html-f6f43996.js"),["assets/详情目录.html-f6f43996.js","assets/framework-39b9cf04.js"])),"v-41edfa86":p(()=>t(()=>import("./详情目录.html-33fa259d.js"),["assets/详情目录.html-33fa259d.js","assets/framework-39b9cf04.js"])),"v-6be267ce":p(()=>t(()=>import("./详情目录.html-3615f088.js"),["assets/详情目录.html-3615f088.js","assets/framework-39b9cf04.js"])),"v-0038f2fb":p(()=>t(()=>import("./计算机常见问题.html-6399d445.js"),["assets/计算机常见问题.html-6399d445.js","assets/framework-39b9cf04.js"])),"v-0716ff7e":p(()=>t(()=>import("./详情目录.html-2a459859.js"),["assets/详情目录.html-2a459859.js","assets/framework-39b9cf04.js"])),"v-98addf5e":p(()=>t(()=>import("./NewSystem.html-247ce8c4.js"),["assets/NewSystem.html-247ce8c4.js","assets/framework-39b9cf04.js"])),"v-44a8fb1e":p(()=>t(()=>import("./QTTabBar.html-074d074a.js"),["assets/QTTabBar.html-074d074a.js","assets/framework-39b9cf04.js"])),"v-5587baac":p(()=>t(()=>import("./faq.html-4ff266a0.js"),["assets/faq.html-4ff266a0.js","assets/framework-39b9cf04.js"])),"v-44f90a36":p(()=>t(()=>import("./详情目录.html-fd4945d9.js"),["assets/详情目录.html-fd4945d9.js","assets/framework-39b9cf04.js"])),"v-12f6ea90":p(()=>t(()=>import("./AppNotes.html-d4999241.js"),["assets/AppNotes.html-d4999241.js","assets/framework-39b9cf04.js"])),"v-76999b1b":p(()=>t(()=>import("./Applist.html-e6d68849.js"),["assets/Applist.html-e6d68849.js","assets/framework-39b9cf04.js"])),"v-1a9ff8b2":p(()=>t(()=>import("./ChatGPT.html-c937ea39.js"),["assets/ChatGPT.html-c937ea39.js","assets/framework-39b9cf04.js"])),"v-5920455e":p(()=>t(()=>import("./Chrome.html-a023b5cf.js"),["assets/Chrome.html-a023b5cf.js","assets/framework-39b9cf04.js"])),"v-b69ace8c":p(()=>t(()=>import("./design.html-47302b6d.js"),["assets/design.html-47302b6d.js","assets/framework-39b9cf04.js"])),"v-e2eb686a":p(()=>t(()=>import("./详情目录.html-8e0b8e0c.js"),["assets/详情目录.html-8e0b8e0c.js","assets/framework-39b9cf04.js"])),"v-6a34da33":p(()=>t(()=>import("./AutoHotkey.html-1bd36616.js"),["assets/AutoHotkey.html-1bd36616.js","assets/framework-39b9cf04.js"])),"v-4556bd9c":p(()=>t(()=>import("./Electron.html-57fe989a.js"),["assets/Electron.html-57fe989a.js","assets/framework-39b9cf04.js"])),"v-76febaae":p(()=>t(()=>import("./HTML.html-40e2e6ad.js"),["assets/HTML.html-40e2e6ad.js","assets/framework-39b9cf04.js"])),"v-32f0a9c7":p(()=>t(()=>import("./Javascript.html-17c26d17.js"),["assets/Javascript.html-17c26d17.js","assets/framework-39b9cf04.js"])),"v-59faba45":p(()=>t(()=>import("./Markdown.html-94d0cb33.js"),["assets/Markdown.html-94d0cb33.js","assets/framework-39b9cf04.js"])),"v-0488f538":p(()=>t(()=>import("./Python.html-9a0f9f7f.js"),["assets/Python.html-9a0f9f7f.js","assets/framework-39b9cf04.js"])),"v-20c9c705":p(()=>t(()=>import("./index.html-ca26b77a.js"),["assets/index.html-ca26b77a.js","assets/framework-39b9cf04.js"])),"v-6167c5d7":p(()=>t(()=>import("./Regex.html-7d99daa3.js"),["assets/Regex.html-7d99daa3.js","assets/framework-39b9cf04.js"])),"v-2159d138":p(()=>t(()=>import("./Vue.html-a6a1610c.js"),["assets/Vue.html-a6a1610c.js","assets/framework-39b9cf04.js"])),"v-2fa9cbc7":p(()=>t(()=>import("./详情目录.html-3af90508.js"),["assets/详情目录.html-3af90508.js","assets/framework-39b9cf04.js"])),"v-f2437614":p(()=>t(()=>import("./Cloudflare.html-3a2370c7.js"),["assets/Cloudflare.html-3a2370c7.js","assets/framework-39b9cf04.js"])),"v-247cbeda":p(()=>t(()=>import("./DNS.html-8c1b663d.js"),["assets/DNS.html-8c1b663d.js","assets/framework-39b9cf04.js"])),"v-6b3525a8":p(()=>t(()=>import("./GitHub.html-2f4726af.js"),["assets/GitHub.html-2f4726af.js","assets/framework-39b9cf04.js"])),"v-b661953e":p(()=>t(()=>import("./Static.html-682d6b4c.js"),["assets/Static.html-682d6b4c.js","assets/framework-39b9cf04.js"])),"v-47c345ec":p(()=>t(()=>import("./VPS.html-89b9c1ca.js"),["assets/VPS.html-89b9c1ca.js","assets/framework-39b9cf04.js"])),"v-0b5295fc":p(()=>t(()=>import("./详情目录.html-381c8673.js"),["assets/详情目录.html-381c8673.js","assets/framework-39b9cf04.js"])),"v-390aeeac":p(()=>t(()=>import("./Coupon.html-0c2ca197.js"),["assets/Coupon.html-0c2ca197.js","assets/framework-39b9cf04.js"])),"v-f189b148":p(()=>t(()=>import("./Diet.html-4b9b3956.js"),["assets/Diet.html-4b9b3956.js","assets/framework-39b9cf04.js"])),"v-43061c7a":p(()=>t(()=>import("./HomeAutomation.html-2a5228fe.js"),["assets/HomeAutomation.html-2a5228fe.js","assets/framework-39b9cf04.js"])),"v-44ac2954":p(()=>t(()=>import("./Life.html-23d509ec.js"),["assets/Life.html-23d509ec.js","assets/framework-39b9cf04.js"])),"v-45a6d3cf":p(()=>t(()=>import("./Maintenance.html-021f894f.js"),["assets/Maintenance.html-021f894f.js","assets/framework-39b9cf04.js"])),"v-cd21b0de":p(()=>t(()=>import("./Medical.html-e06e243b.js"),["assets/Medical.html-e06e243b.js","assets/framework-39b9cf04.js"])),"v-1b11198a":p(()=>t(()=>import("./Shoppinglist.html-7d855c37.js"),["assets/Shoppinglist.html-7d855c37.js","assets/framework-39b9cf04.js"])),"v-758df17a":p(()=>t(()=>import("./详情目录.html-ff8d22e0.js"),["assets/详情目录.html-ff8d22e0.js","assets/framework-39b9cf04.js"])),"v-122a55c4":p(()=>t(()=>import("./Interview.html-e789757d.js"),["assets/Interview.html-e789757d.js","assets/framework-39b9cf04.js"])),"v-968482f4":p(()=>t(()=>import("./Personal_Information.html-7eba3653.js"),["assets/Personal_Information.html-7eba3653.js","assets/framework-39b9cf04.js"])),"v-5aad6466":p(()=>t(()=>import("./详情目录.html-ee229627.js"),["assets/详情目录.html-ee229627.js","assets/framework-39b9cf04.js"])),"v-572bc774":p(()=>t(()=>import("./Comments.html-08d7d3a7.js"),["assets/Comments.html-08d7d3a7.js","assets/framework-39b9cf04.js"])),"v-d73f600c":p(()=>t(()=>import("./Site Navigation.html-b036bc9b.js"),["assets/Site Navigation.html-b036bc9b.js","assets/framework-39b9cf04.js"])),"v-dd7edeaa":p(()=>t(()=>import("./VuePress.html-2ced2296.js"),["assets/VuePress.html-2ced2296.js","assets/framework-39b9cf04.js"])),"v-4b524440":p(()=>t(()=>import("./WebGuide.html-bba79b90.js"),["assets/WebGuide.html-bba79b90.js","assets/framework-39b9cf04.js"])),"v-cbf1feee":p(()=>t(()=>import("./docsify.html-e9a28aea.js"),["assets/docsify.html-e9a28aea.js","assets/framework-39b9cf04.js"])),"v-562138db":p(()=>t(()=>import("./详情目录.html-c003076e.js"),["assets/详情目录.html-c003076e.js","assets/framework-39b9cf04.js"])),"v-afb5c98c":p(()=>t(()=>import("./index.html-022a204e.js"),["assets/index.html-022a204e.js","assets/framework-39b9cf04.js"])),"v-2fc0ab4f":p(()=>t(()=>import("./navbar.html-39ec5c05.js"),["assets/navbar.html-39ec5c05.js","assets/framework-39b9cf04.js"])),"v-7b000337":p(()=>t(()=>import("./sidebar.html-00ec844d.js"),["assets/sidebar.html-00ec844d.js","assets/framework-39b9cf04.js"])),"v-2810f732":p(()=>t(()=>import("./详情目录.html-aa3e895e.js"),["assets/详情目录.html-aa3e895e.js","assets/framework-39b9cf04.js"])),"v-3ac441f0":p(()=>t(()=>import("./docker使用.html-17bb18b3.js"),["assets/docker使用.html-17bb18b3.js","assets/framework-39b9cf04.js"])),"v-6d97b4e7":p(()=>t(()=>import("./make、makefile、CMake和CMakeLists.html-334b36e4.js"),["assets/make、makefile、CMake和CMakeLists.html-334b36e4.js","assets/framework-39b9cf04.js"])),"v-25397ed8":p(()=>t(()=>import("./ubuntu分区管理工具.html-d340aacf.js"),["assets/ubuntu分区管理工具.html-d340aacf.js","assets/framework-39b9cf04.js"])),"v-dc60b056":p(()=>t(()=>import("./ubuntu命令行修改apt_pip源到国内源.html-96849af3.js"),["assets/ubuntu命令行修改apt_pip源到国内源.html-96849af3.js","assets/framework-39b9cf04.js"])),"v-1f2626a6":p(()=>t(()=>import("./交叉编译.html-52cda9be.js"),["assets/交叉编译.html-52cda9be.js","assets/framework-39b9cf04.js"])),"v-158fc2d0":p(()=>t(()=>import("./如何查看ip.html-4d3d0dab.js"),["assets/如何查看ip.html-4d3d0dab.js","assets/framework-39b9cf04.js"])),"v-b8c93872":p(()=>t(()=>import("./安装anaconda、tensorflow、Pytoch.html-258cc10d.js"),["assets/安装anaconda、tensorflow、Pytoch.html-258cc10d.js","assets/framework-39b9cf04.js"])),"v-5e4552a4":p(()=>t(()=>import("./开发知识.html-0b2c9f81.js"),["assets/开发知识.html-0b2c9f81.js","assets/framework-39b9cf04.js"])),"v-3e3e22f8":p(()=>t(()=>import("./深度学基础.html-3cbdac52.js"),["assets/深度学基础.html-3cbdac52.js","assets/framework-39b9cf04.js"])),"v-8b564fc6":p(()=>t(()=>import("./详情目录.html-8480cd5a.js"),["assets/详情目录.html-8480cd5a.js","assets/framework-39b9cf04.js"])),"v-5392bf0c":p(()=>t(()=>import("./01.html-4fd60b4e.js"),["assets/01.html-4fd60b4e.js","assets/framework-39b9cf04.js"])),"v-50290dce":p(()=>t(()=>import("./02.html-8fc8c02d.js"),["assets/02.html-8fc8c02d.js","assets/framework-39b9cf04.js"])),"v-4cbf5c90":p(()=>t(()=>import("./03.html-a0cad886.js"),["assets/03.html-a0cad886.js","assets/framework-39b9cf04.js"])),"v-4955ab52":p(()=>t(()=>import("./04.html-8f0053ea.js"),["assets/04.html-8f0053ea.js","assets/framework-39b9cf04.js"])),"v-45ebfa14":p(()=>t(()=>import("./05.html-6ff38289.js"),["assets/05.html-6ff38289.js","assets/framework-39b9cf04.js"])),"v-428248d6":p(()=>t(()=>import("./06.html-e64f8270.js"),["assets/06.html-e64f8270.js","assets/framework-39b9cf04.js"])),"v-3f189798":p(()=>t(()=>import("./07.html-921deeeb.js"),["assets/07.html-921deeeb.js","assets/framework-39b9cf04.js"])),"v-fcb74944":p(()=>t(()=>import("./多传感器融合概述.html-3911a884.js"),["assets/多传感器融合概述.html-3911a884.js","assets/framework-39b9cf04.js"])),"v-b6ed6200":p(()=>t(()=>import("./IWI1843.html-380465e0.js"),["assets/IWI1843.html-380465e0.js","assets/framework-39b9cf04.js"])),"v-556d5707":p(()=>t(()=>import("./图像分类.html-b83cf8a9.js"),["assets/图像分类.html-b83cf8a9.js","assets/framework-39b9cf04.js"])),"v-2dc68459":p(()=>t(()=>import("./VIO里程计.html-5d3d3c85.js"),["assets/VIO里程计.html-5d3d3c85.js","assets/framework-39b9cf04.js"])),"v-3b374fed":p(()=>t(()=>import("./立体视觉.html-3375c173.js"),["assets/立体视觉.html-3375c173.js","assets/framework-39b9cf04.js"])),"v-458ac3fc":p(()=>t(()=>import("./opencv概述.html-088396bd.js"),["assets/opencv概述.html-088396bd.js","assets/framework-39b9cf04.js"])),"v-34aaaefc":p(()=>t(()=>import("./机器视觉概述.html-e76a69ba.js"),["assets/机器视觉概述.html-e76a69ba.js","assets/framework-39b9cf04.js"])),"v-168d6ffc":p(()=>t(()=>import("./模式识别概述.html-158538b8.js"),["assets/模式识别概述.html-158538b8.js","assets/framework-39b9cf04.js"])),"v-ab6c903c":p(()=>t(()=>import("./目标检测概述.html-ffbc72d7.js"),["assets/目标检测概述.html-ffbc72d7.js","assets/framework-39b9cf04.js"])),"v-f1cbec06":p(()=>t(()=>import("./企业要求.html-d02a99c8.js"),["assets/企业要求.html-d02a99c8.js","assets/framework-39b9cf04.js"])),"v-469c82f9":p(()=>t(()=>import("./车道线检测.html-14974b44.js"),["assets/车道线检测.html-14974b44.js","assets/framework-39b9cf04.js"])),"v-4561cc1a":p(()=>t(()=>import("./CNN.html-c011df1d.js"),["assets/CNN.html-c011df1d.js","assets/framework-39b9cf04.js"])),"v-4a0ba51f":p(()=>t(()=>import("./学习资源.html-6ae88c37.js"),["assets/学习资源.html-6ae88c37.js","assets/framework-39b9cf04.js"])),"v-afccdf7a":p(()=>t(()=>import("./Download Machine Learning Algorithm Cheat Sheet.html-03508f88.js"),["assets/Download Machine Learning Algorithm Cheat Sheet.html-03508f88.js","assets/framework-39b9cf04.js"])),"v-d4bc44f4":p(()=>t(()=>import("./Keras.html-547513b5.js"),["assets/Keras.html-547513b5.js","assets/framework-39b9cf04.js"])),"v-0df8921e":p(()=>t(()=>import("./Matplotlib.html-cbc5c777.js"),["assets/Matplotlib.html-cbc5c777.js","assets/framework-39b9cf04.js"])),"v-2a5173cc":p(()=>t(()=>import("./Microsoft Azure机器学习备忘单.html-0c19b8a1.js"),["assets/Microsoft Azure机器学习备忘单.html-0c19b8a1.js","assets/framework-39b9cf04.js"])),"v-59cc65be":p(()=>t(()=>import("./Numpy.html-18b6a24b.js"),["assets/Numpy.html-18b6a24b.js","assets/framework-39b9cf04.js"])),"v-58a92c3c":p(()=>t(()=>import("./PySpark.html-a2ceb6e3.js"),["assets/PySpark.html-a2ceb6e3.js","assets/framework-39b9cf04.js"])),"v-992e20ec":p(()=>t(()=>import("./Python 3 Cheat Sheet.html-4cd0191b.js"),["assets/Python 3 Cheat Sheet.html-4cd0191b.js","assets/framework-39b9cf04.js"])),"v-973c7be4":p(()=>t(()=>import("./Scikit-Learn.html-7d67528b.js"),["assets/Scikit-Learn.html-7d67528b.js","assets/framework-39b9cf04.js"])),"v-54d76c1e":p(()=>t(()=>import("./Scikit-Learn算法.html-2f3bc345.js"),["assets/Scikit-Learn算法.html-2f3bc345.js","assets/framework-39b9cf04.js"])),"v-e796fda4":p(()=>t(()=>import("./Scipy.html-bc681b07.js"),["assets/Scipy.html-bc681b07.js","assets/framework-39b9cf04.js"])),"v-3a27e90a":p(()=>t(()=>import("./TensorFlow.html-1083eaaf.js"),["assets/TensorFlow.html-1083eaaf.js","assets/framework-39b9cf04.js"])),"v-b52aa0f6":p(()=>t(()=>import("./使用dplyr和tidyr进行数据整理.html-96954425.js"),["assets/使用dplyr和tidyr进行数据整理.html-96954425.js","assets/framework-39b9cf04.js"])),"v-09aa8acc":p(()=>t(()=>import("./备忘单.html-c3abe76d.js"),["assets/备忘单.html-c3abe76d.js","assets/framework-39b9cf04.js"])),"v-48bbaf63":p(()=>t(()=>import("./数据可视化.html-b16bc39b.js"),["assets/数据可视化.html-b16bc39b.js","assets/framework-39b9cf04.js"])),"v-ae41da2c":p(()=>t(()=>import("./数据整理.html-2cc6fd9d.js"),["assets/数据整理.html-2cc6fd9d.js","assets/framework-39b9cf04.js"])),"v-4833ebdb":p(()=>t(()=>import("./数据科学Python编程.html-7a902d33.js"),["assets/数据科学Python编程.html-7a902d33.js","assets/framework-39b9cf04.js"])),"v-6952f1b6":p(()=>t(()=>import("./数据科学_Bokeh速查表.html-4b1c4f7e.js"),["assets/数据科学_Bokeh速查表.html-4b1c4f7e.js","assets/framework-39b9cf04.js"])),"v-f0cbb6f6":p(()=>t(()=>import("./机器学习算法概述.html-280b4234.js"),["assets/机器学习算法概述.html-280b4234.js","assets/framework-39b9cf04.js"])),"v-b1bf1050":p(()=>t(()=>import("./神经网络.html-656fbc6d.js"),["assets/神经网络.html-656fbc6d.js","assets/framework-39b9cf04.js"])),"v-2d5994ec":p(()=>t(()=>import("./基本算法.html-a7db9538.js"),["assets/基本算法.html-a7db9538.js","assets/framework-39b9cf04.js"])),"v-2af9f3cf":p(()=>t(()=>import("./数学知识.html-f237de58.js"),["assets/数学知识.html-f237de58.js","assets/framework-39b9cf04.js"])),"v-4d9679e6":p(()=>t(()=>import("./机器学习100个问题.html-bbbaca3c.js"),["assets/机器学习100个问题.html-bbbaca3c.js","assets/framework-39b9cf04.js"])),"v-ec36b34c":p(()=>t(()=>import("./机器学习重点知识.html-3375c406.js"),["assets/机器学习重点知识.html-3375c406.js","assets/framework-39b9cf04.js"])),"v-2d03f0c6":p(()=>t(()=>import("./Data_Science_Cheat_Sheet_for_BusinessLeaders.html-9135e1b7.js"),["assets/Data_Science_Cheat_Sheet_for_BusinessLeaders.html-9135e1b7.js","assets/framework-39b9cf04.js"])),"v-6805b4bb":p(()=>t(()=>import("./Data_Visualization_Cheat_Sheet.html-48d1e461.js"),["assets/Data_Visualization_Cheat_Sheet.html-48d1e461.js","assets/framework-39b9cf04.js"])),"v-336a38f6":p(()=>t(()=>import("./Importing_Datain_Python_Cheat_Sheet.html-a4fb907d.js"),["assets/Importing_Datain_Python_Cheat_Sheet.html-a4fb907d.js","assets/framework-39b9cf04.js"])),"v-def94006":p(()=>t(()=>import("./Jupyter_Notebook_Cheat_Sheet.html-7149a51a.js"),["assets/Jupyter_Notebook_Cheat_Sheet.html-7149a51a.js","assets/framework-39b9cf04.js"])),"v-58116dc6":p(()=>t(()=>import("./Keras_Cheat_Sheet Neural_Networks_in_Python.html-d4a75635.js"),["assets/Keras_Cheat_Sheet Neural_Networks_in_Python.html-d4a75635.js","assets/framework-39b9cf04.js"])),"v-8dab9cb2":p(()=>t(()=>import("./Matplotlib_Cheat_Sheet_Plotting_in_Python.html-c6ffbf21.js"),["assets/Matplotlib_Cheat_Sheet_Plotting_in_Python.html-c6ffbf21.js","assets/framework-39b9cf04.js"])),"v-46da7670":p(()=>t(()=>import("./NumPy_Cheat_Sheet_Data_Analysis_in_Python.html-1c5471ad.js"),["assets/NumPy_Cheat_Sheet_Data_Analysis_in_Python.html-1c5471ad.js","assets/framework-39b9cf04.js"])),"v-5e173d0c":p(()=>t(()=>import("./Pandas Cheat Sheet for Data Science in Python.html-0f1b78a5.js"),["assets/Pandas Cheat Sheet for Data Science in Python.html-0f1b78a5.js","assets/framework-39b9cf04.js"])),"v-3bd3ff2b":p(()=>t(()=>import("./Pandas_Cheat_Sheet_Data_Wrangling_in_Python.html-c6cd6f47.js"),["assets/Pandas_Cheat_Sheet_Data_Wrangling_in_Python.html-c6cd6f47.js","assets/framework-39b9cf04.js"])),"v-7f5facd4":p(()=>t(()=>import("./Power_BI_for_Business_Intelligence_Sheet.html-c44c74f1.js"),["assets/Power_BI_for_Business_Intelligence_Sheet.html-c44c74f1.js","assets/framework-39b9cf04.js"])),"v-f5428c04":p(()=>t(()=>import("./PySpark_Cheat_Sheet_Spark_DataFrames_in_Python.html-30716b61.js"),["assets/PySpark_Cheat_Sheet_Spark_DataFrames_in_Python.html-30716b61.js","assets/framework-39b9cf04.js"])),"v-dc7629d2":p(()=>t(()=>import("./PySpark_Cheat_Sheet_Spark_in_Python.html-dfb1464b.js"),["assets/PySpark_Cheat_Sheet_Spark_in_Python.html-dfb1464b.js","assets/framework-39b9cf04.js"])),"v-23bbef8c":p(()=>t(()=>import("./Python_Data_Visualization_Bokeh_Cheat_Sheet.html-250e32f7.js"),["assets/Python_Data_Visualization_Bokeh_Cheat_Sheet.html-250e32f7.js","assets/framework-39b9cf04.js"])),"v-4d72f195":p(()=>t(()=>import("./Python_Seaborn_Cheat_Sheet.html-d6ce70a6.js"),["assets/Python_Seaborn_Cheat_Sheet.html-d6ce70a6.js","assets/framework-39b9cf04.js"])),"v-1736b1a8":p(()=>t(()=>import("./SQL_for_Data_Science.html-8ea159a2.js"),["assets/SQL_for_Data_Science.html-8ea159a2.js","assets/framework-39b9cf04.js"])),"v-4ae7f9a0":p(()=>t(()=>import("./SciPy_Cheat_Sheet_Linear_Algebra_in_Python.html-40dbd530.js"),["assets/SciPy_Cheat_Sheet_Linear_Algebra_in_Python.html-40dbd530.js","assets/framework-39b9cf04.js"])),"v-e6e27064":p(()=>t(()=>import("./Scikit_Learn_Cheat_Sheet_Python_Machine_Learning.html-575f3ac4.js"),["assets/Scikit_Learn_Cheat_Sheet_Python_Machine_Learning.html-575f3ac4.js","assets/framework-39b9cf04.js"])),"v-5d588d29":p(()=>t(()=>import("./Tidyverse_Cheat_Sheet_For_Beginners.html-7894bf22.js"),["assets/Tidyverse_Cheat_Sheet_For_Beginners.html-7894bf22.js","assets/framework-39b9cf04.js"])),"v-41eb2fad":p(()=>t(()=>import("./Top_Machine_Learning_Algoritms.html-395db3f7.js"),["assets/Top_Machine_Learning_Algoritms.html-395db3f7.js","assets/framework-39b9cf04.js"])),"v-7aafd3e1":p(()=>t(()=>import("./spaCy_Cheat_Sheet_Advanced_NLP_in_Python.html-c755b4f9.js"),["assets/spaCy_Cheat_Sheet_Advanced_NLP_in_Python.html-c755b4f9.js","assets/framework-39b9cf04.js"])),"v-a36af388":p(()=>t(()=>import("./xts_Cheat_Sheet_Time_Series_in_R.html-bc2ff0fd.js"),["assets/xts_Cheat_Sheet_Time_Series_in_R.html-bc2ff0fd.js","assets/framework-39b9cf04.js"])),"v-8811a470":p(()=>t(()=>import("./感知算法概述.html-f0fbf958.js"),["assets/感知算法概述.html-f0fbf958.js","assets/framework-39b9cf04.js"])),"v-080b3415":p(()=>t(()=>import("./STL Algorithms.html-ed0cabf8.js"),["assets/STL Algorithms.html-ed0cabf8.js","assets/framework-39b9cf04.js"])),"v-fd0c12b2":p(()=>t(()=>import("./STL Containers.html-a8d0f4ad.js"),["assets/STL Containers.html-a8d0f4ad.js","assets/framework-39b9cf04.js"])),"v-683f08d8":p(()=>t(()=>import("./STL Iterators.html-4c38120d.js"),["assets/STL Iterators.html-4c38120d.js","assets/framework-39b9cf04.js"])),"v-68ce8cab":p(()=>t(()=>import("./string相关函数.html-029b4247.js"),["assets/string相关函数.html-029b4247.js","assets/framework-39b9cf04.js"])),"v-282370f6":p(()=>t(()=>import("./vs使用leetcode.html-fe948137.js"),["assets/vs使用leetcode.html-fe948137.js","assets/framework-39b9cf04.js"])),"v-35992c28":p(()=>t(()=>import("./手动构建二叉树.html-0c705f24.js"),["assets/手动构建二叉树.html-0c705f24.js","assets/framework-39b9cf04.js"])),"v-14eff5b4":p(()=>t(()=>import("./Ubuntu使用经验.html-5384ea9a.js"),["assets/Ubuntu使用经验.html-5384ea9a.js","assets/framework-39b9cf04.js"])),"v-2508f406":p(()=>t(()=>import("./leetcode算法学习.html-e4ebca74.js"),["assets/leetcode算法学习.html-e4ebca74.js","assets/framework-39b9cf04.js"])),"v-16d7eae4":p(()=>t(()=>import("./Conda安装.html-0f09b619.js"),["assets/Conda安装.html-0f09b619.js","assets/framework-39b9cf04.js"])),"v-06b354bd":p(()=>t(()=>import("./git安装及使用.html-e05b5736.js"),["assets/git安装及使用.html-e05b5736.js","assets/framework-39b9cf04.js"])),"v-fcd49ea4":p(()=>t(()=>import("./PS系列.html-27792475.js"),["assets/PS系列.html-27792475.js","assets/framework-39b9cf04.js"])),"v-090c59bd":p(()=>t(()=>import("./激活和安装.html-c27cad93.js"),["assets/激活和安装.html-c27cad93.js","assets/framework-39b9cf04.js"])),"v-60368e60":p(()=>t(()=>import("./Pytorch.html-7dd7a412.js"),["assets/Pytorch.html-7dd7a412.js","assets/framework-39b9cf04.js"])),"v-cc837190":p(()=>t(()=>import("./tensorflow.html-10eea283.js"),["assets/tensorflow.html-10eea283.js","assets/framework-39b9cf04.js"])),"v-49fdddb7":p(()=>t(()=>import("./Vscode常见问题.html-20eff67d.js"),["assets/Vscode常见问题.html-20eff67d.js","assets/framework-39b9cf04.js"])),"v-267bd09c":p(()=>t(()=>import("./配置vscode代理.html-98e4b3d8.js"),["assets/配置vscode代理.html-98e4b3d8.js","assets/framework-39b9cf04.js"])),"v-0f95e42c":p(()=>t(()=>import("./0_live_equipments.html-d8f8df35.js"),["assets/0_live_equipments.html-d8f8df35.js","assets/framework-39b9cf04.js"])),"v-2a6722dc":p(()=>t(()=>import("./1_obs_basic.html-9931375f.js"),["assets/1_obs_basic.html-9931375f.js","assets/framework-39b9cf04.js"])),"v-d42be1fe":p(()=>t(()=>import("./2_obs_streamfx.html-b9884654.js"),["assets/2_obs_streamfx.html-b9884654.js","assets/framework-39b9cf04.js"])),"v-3be238de":p(()=>t(()=>import("./3_obs_plugins.html-11651466.js"),["assets/3_obs_plugins.html-11651466.js","assets/framework-39b9cf04.js"])),"v-7577c576":p(()=>t(()=>import("./4_live_effects.html-defed459.js"),["assets/4_live_effects.html-defed459.js","assets/framework-39b9cf04.js"])),"v-13093ca8":p(()=>t(()=>import("./5_live_platforms.html-6d6ea1e3.js"),["assets/5_live_platforms.html-6d6ea1e3.js","assets/framework-39b9cf04.js"])),"v-3a5c1610":p(()=>t(()=>import("./6_live_positioning.html-de8e8405.js"),["assets/6_live_positioning.html-de8e8405.js","assets/framework-39b9cf04.js"])),"v-428ff05c":p(()=>t(()=>import("./前端开发与设计.html-843c5ee9.js"),["assets/前端开发与设计.html-843c5ee9.js","assets/framework-39b9cf04.js"])),"v-ccaa603c":p(()=>t(()=>import("./吃掉那只青蛙.html-2a19f9d9.js"),["assets/吃掉那只青蛙.html-2a19f9d9.js","assets/framework-39b9cf04.js"])),"v-5077b2a8":p(()=>t(()=>import("./提升思维.html-117481da.js"),["assets/提升思维.html-117481da.js","assets/framework-39b9cf04.js"])),"v-0fb6d2aa":p(()=>t(()=>import("./影响力.html-9cae2a9b.js"),["assets/影响力.html-9cae2a9b.js","assets/framework-39b9cf04.js"])),"v-5941f6a8":p(()=>t(()=>import("./社会认知.html-f97ea585.js"),["assets/社会认知.html-f97ea585.js","assets/framework-39b9cf04.js"])),"v-7652e8ab":p(()=>t(()=>import("./自我认知.html-e007f6f1.js"),["assets/自我认知.html-e007f6f1.js","assets/framework-39b9cf04.js"])),"v-193410a6":p(()=>t(()=>import("./写作.html-f98dc8e7.js"),["assets/写作.html-f98dc8e7.js","assets/framework-39b9cf04.js"])),"v-5bda9b9c":p(()=>t(()=>import("./商业传记.html-63e9fe4c.js"),["assets/商业传记.html-63e9fe4c.js","assets/framework-39b9cf04.js"])),"v-954c8e4e":p(()=>t(()=>import("./市场营销.html-fd248b5b.js"),["assets/市场营销.html-fd248b5b.js","assets/framework-39b9cf04.js"])),"v-2fa3514c":p(()=>t(()=>import("./社会经济.html-17f6dfdb.js"),["assets/社会经济.html-17f6dfdb.js","assets/framework-39b9cf04.js"])),"v-cfd7a768":p(()=>t(()=>import("./doker.html-10e3bee7.js"),["assets/doker.html-10e3bee7.js","assets/framework-39b9cf04.js"])),"v-09974639":p(()=>t(()=>import("./mlib.html-38ad128b.js"),["assets/mlib.html-38ad128b.js","assets/framework-39b9cf04.js"])),"v-5da217d9":p(()=>t(()=>import("./nntc.html-4a6097ce.js"),["assets/nntc.html-4a6097ce.js","assets/framework-39b9cf04.js"])),"v-063e92f9":p(()=>t(()=>import("./基于LeNet-5的手写数字识别.html-1f6f166d.js"),["assets/基于LeNet-5的手写数字识别.html-1f6f166d.js","assets/framework-39b9cf04.js"])),"v-54376779":p(()=>t(()=>import("./READEME.html-ee38da3d.js"),["assets/READEME.html-ee38da3d.js","assets/framework-39b9cf04.js"])),"v-0c2cc5c3":p(()=>t(()=>import("./std mmultimap.html-d7021fdc.js"),["assets/std mmultimap.html-d7021fdc.js","assets/framework-39b9cf04.js"])),"v-55e0227d":p(()=>t(()=>import("./std mmultiset.html-54e567b9.js"),["assets/std mmultiset.html-54e567b9.js","assets/framework-39b9cf04.js"])),"v-c391adde":p(()=>t(()=>import("./std set.html-a03ae40d.js"),["assets/std set.html-a03ae40d.js","assets/framework-39b9cf04.js"])),"v-decc39fe":p(()=>t(()=>import("./std unorder_map.html-aa8c54ba.js"),["assets/std unorder_map.html-aa8c54ba.js","assets/framework-39b9cf04.js"])),"v-4b65808a":p(()=>t(()=>import("./std unorder_set.html-1f12b6cf.js"),["assets/std unorder_set.html-1f12b6cf.js","assets/framework-39b9cf04.js"])),"v-30fe8b7c":p(()=>t(()=>import("./二叉树.html-7d9805e9.js"),["assets/二叉树.html-7d9805e9.js","assets/framework-39b9cf04.js"])),"v-29cabcf7":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——二叉树 .html-eede1105.js"),["assets/代码随想录算法总结(C__)版本——二叉树 .html-eede1105.js","assets/framework-39b9cf04.js"])),"v-0cef7c3e":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——动态规划（一）.html-1a24fcfc.js"),["assets/代码随想录算法总结(C__)版本——动态规划（一）.html-1a24fcfc.js","assets/framework-39b9cf04.js"])),"v-35a63887":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——动态规划（三）.html-1d3b4611.js"),["assets/代码随想录算法总结(C__)版本——动态规划（三）.html-1d3b4611.js","assets/framework-39b9cf04.js"])),"v-904008be":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——动态规划（二）背包问题.html-bd8f1886.js"),["assets/代码随想录算法总结(C__)版本——动态规划（二）背包问题.html-bd8f1886.js","assets/framework-39b9cf04.js"])),"v-3dffc5f0":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——单调栈.html-bd1e3b7f.js"),["assets/代码随想录算法总结(C__)版本——单调栈.html-bd1e3b7f.js","assets/framework-39b9cf04.js"])),"v-1141bba7":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——双指针.html-90251aee.js"),["assets/代码随想录算法总结(C__)版本——双指针.html-90251aee.js","assets/framework-39b9cf04.js"])),"v-0251d77a":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——哈希、字符串(一).html-19ec0b72.js"),["assets/代码随想录算法总结(C__)版本——哈希、字符串(一).html-19ec0b72.js","assets/framework-39b9cf04.js"])),"v-b416d81a":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——哈希、字符串（二）.html-e2b1d961.js"),["assets/代码随想录算法总结(C__)版本——哈希、字符串（二）.html-e2b1d961.js","assets/framework-39b9cf04.js"])),"v-769589df":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——回溯.html-203ee156.js"),["assets/代码随想录算法总结(C__)版本——回溯.html-203ee156.js","assets/framework-39b9cf04.js"])),"v-375de289":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——数组、链表.html-757545be.js"),["assets/代码随想录算法总结(C__)版本——数组、链表.html-757545be.js","assets/framework-39b9cf04.js"])),"v-9b426004":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——数组、链表（二）.html-60ceb83a.js"),["assets/代码随想录算法总结(C__)版本——数组、链表（二）.html-60ceb83a.js","assets/framework-39b9cf04.js"])),"v-3fc2abd2":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——栈和队列.html-566e0dbe.js"),["assets/代码随想录算法总结(C__)版本——栈和队列.html-566e0dbe.js","assets/framework-39b9cf04.js"])),"v-c4b5c206":p(()=>t(()=>import("./代码随想录算法总结(C__)版本——贪心.html-b183cef6.js"),["assets/代码随想录算法总结(C__)版本——贪心.html-b183cef6.js","assets/framework-39b9cf04.js"])),"v-4eb7a968":p(()=>t(()=>import("./代码随想录算法总结(python)版本.html-2ff617ea.js"),["assets/代码随想录算法总结(python)版本.html-2ff617ea.js","assets/framework-39b9cf04.js"])),"v-23ff6a91":p(()=>t(()=>import("./图知识.html-49b11769.js"),["assets/图知识.html-49b11769.js","assets/framework-39b9cf04.js"])),"v-f98b864a":p(()=>t(()=>import("./华为机试1-15.html-cab52222.js"),["assets/华为机试1-15.html-cab52222.js","assets/framework-39b9cf04.js"])),"v-11571ff2":p(()=>t(()=>import("./华为机试16-30.html-5fd14431.js"),["assets/华为机试16-30.html-5fd14431.js","assets/framework-39b9cf04.js"])),"v-52024d87":p(()=>t(()=>import("./华为机试31-45.html-4dfa8f55.js"),["assets/华为机试31-45.html-4dfa8f55.js","assets/framework-39b9cf04.js"])),"v-e633b5dc":p(()=>t(()=>import("./华为机试46-60.html-29c1674a.js"),["assets/华为机试46-60.html-29c1674a.js","assets/framework-39b9cf04.js"])),"v-64dd5ab2":p(()=>t(()=>import("./华为机试61-75.html-01f05971.js"),["assets/华为机试61-75.html-01f05971.js","assets/framework-39b9cf04.js"])),"v-08752a32":p(()=>t(()=>import("./华为机试76-90.html-11f96677.js"),["assets/华为机试76-90.html-11f96677.js","assets/framework-39b9cf04.js"])),"v-395aae57":p(()=>t(()=>import("./华为机试91-108.html-6f500a66.js"),["assets/华为机试91-108.html-6f500a66.js","assets/framework-39b9cf04.js"])),"v-740cffbe":p(()=>t(()=>import("./华为机试目录.html-f6af6cbe.js"),["assets/华为机试目录.html-f6af6cbe.js","assets/framework-39b9cf04.js"])),"v-82e57f90":p(()=>t(()=>import("./字符串.html-8af9423e.js"),["assets/字符串.html-8af9423e.js","assets/framework-39b9cf04.js"])),"v-2d1ff9b6":p(()=>t(()=>import("./VSCODE配置python环境的问题.html-fb6ccabc.js"),["assets/VSCODE配置python环境的问题.html-fb6ccabc.js","assets/framework-39b9cf04.js"])),"v-3706649a":p(()=>t(()=>import("./404.html-1d15e73c.js"),["assets/404.html-1d15e73c.js","assets/framework-39b9cf04.js"])),"v-c0fd436c":p(()=>t(()=>import("./index.html-178c9465.js"),["assets/index.html-178c9465.js","assets/framework-39b9cf04.js"])),"v-6c2440fd":p(()=>t(()=>import("./index.html-174c5db4.js"),["assets/index.html-174c5db4.js","assets/framework-39b9cf04.js"])),"v-7dedfedf":p(()=>t(()=>import("./index.html-ea6a1b6a.js"),["assets/index.html-ea6a1b6a.js","assets/framework-39b9cf04.js"])),"v-3e63b855":p(()=>t(()=>import("./index.html-38f1799f.js"),["assets/index.html-38f1799f.js","assets/framework-39b9cf04.js"])),"v-fcb5a2b6":p(()=>t(()=>import("./index.html-0fcd5849.js"),["assets/index.html-0fcd5849.js","assets/framework-39b9cf04.js"])),"v-93e92daa":p(()=>t(()=>import("./index.html-ca579cf9.js"),["assets/index.html-ca579cf9.js","assets/framework-39b9cf04.js"])),"v-f24c27d0":p(()=>t(()=>import("./index.html-3d0c3f05.js"),["assets/index.html-3d0c3f05.js","assets/framework-39b9cf04.js"])),"v-6d1a129e":p(()=>t(()=>import("./index.html-8941f037.js"),["assets/index.html-8941f037.js","assets/framework-39b9cf04.js"])),"v-d8980732":p(()=>t(()=>import("./index.html-e93f8ff4.js"),["assets/index.html-e93f8ff4.js","assets/framework-39b9cf04.js"])),"v-0ced9628":p(()=>t(()=>import("./index.html-87428034.js"),["assets/index.html-87428034.js","assets/framework-39b9cf04.js"])),"v-76e3d7b5":p(()=>t(()=>import("./index.html-bf2ce08b.js"),["assets/index.html-bf2ce08b.js","assets/framework-39b9cf04.js"])),"v-be857f74":p(()=>t(()=>import("./index.html-6c4c2267.js"),["assets/index.html-6c4c2267.js","assets/framework-39b9cf04.js"])),"v-6e6a0778":p(()=>t(()=>import("./index.html-b829c39d.js"),["assets/index.html-b829c39d.js","assets/framework-39b9cf04.js"])),"v-0ea5cf26":p(()=>t(()=>import("./index.html-55abc569.js"),["assets/index.html-55abc569.js","assets/framework-39b9cf04.js"])),"v-34187ef8":p(()=>t(()=>import("./index.html-7c9bc88a.js"),["assets/index.html-7c9bc88a.js","assets/framework-39b9cf04.js"])),"v-2059f917":p(()=>t(()=>import("./index.html-9389d6d4.js"),["assets/index.html-9389d6d4.js","assets/framework-39b9cf04.js"])),"v-5583c685":p(()=>t(()=>import("./index.html-eb69ca51.js"),["assets/index.html-eb69ca51.js","assets/framework-39b9cf04.js"])),"v-d43d9c1e":p(()=>t(()=>import("./index.html-dbc64933.js"),["assets/index.html-dbc64933.js","assets/framework-39b9cf04.js"])),"v-13beb188":p(()=>t(()=>import("./index.html-9156a950.js"),["assets/index.html-9156a950.js","assets/framework-39b9cf04.js"])),"v-c3a82396":p(()=>t(()=>import("./index.html-1836697b.js"),["assets/index.html-1836697b.js","assets/framework-39b9cf04.js"])),"v-5bdef966":p(()=>t(()=>import("./index.html-f139e960.js"),["assets/index.html-f139e960.js","assets/framework-39b9cf04.js"])),"v-6f99db1e":p(()=>t(()=>import("./index.html-6765c236.js"),["assets/index.html-6765c236.js","assets/framework-39b9cf04.js"])),"v-250fc524":p(()=>t(()=>import("./index.html-56e69da0.js"),["assets/index.html-56e69da0.js","assets/framework-39b9cf04.js"])),"v-65b40627":p(()=>t(()=>import("./index.html-2f67fa24.js"),["assets/index.html-2f67fa24.js","assets/framework-39b9cf04.js"])),"v-1ef96281":p(()=>t(()=>import("./index.html-3cdbb2fe.js"),["assets/index.html-3cdbb2fe.js","assets/framework-39b9cf04.js"])),"v-bc4f592c":p(()=>t(()=>import("./index.html-288f1b3b.js"),["assets/index.html-288f1b3b.js","assets/framework-39b9cf04.js"])),"v-5a538009":p(()=>t(()=>import("./index.html-8fe80493.js"),["assets/index.html-8fe80493.js","assets/framework-39b9cf04.js"])),"v-6bd118f4":p(()=>t(()=>import("./index.html-0fceb581.js"),["assets/index.html-0fceb581.js","assets/framework-39b9cf04.js"])),"v-23804371":p(()=>t(()=>import("./index.html-fdc2610e.js"),["assets/index.html-fdc2610e.js","assets/framework-39b9cf04.js"])),"v-145ac574":p(()=>t(()=>import("./index.html-3083c0fb.js"),["assets/index.html-3083c0fb.js","assets/framework-39b9cf04.js"])),"v-c1f8ec22":p(()=>t(()=>import("./index.html-9954beec.js"),["assets/index.html-9954beec.js","assets/framework-39b9cf04.js"])),"v-c25a1d84":p(()=>t(()=>import("./index.html-90be1d6c.js"),["assets/index.html-90be1d6c.js","assets/framework-39b9cf04.js"])),"v-10fcf391":p(()=>t(()=>import("./index.html-5b07bc80.js"),["assets/index.html-5b07bc80.js","assets/framework-39b9cf04.js"])),"v-51cde070":p(()=>t(()=>import("./index.html-6285ac89.js"),["assets/index.html-6285ac89.js","assets/framework-39b9cf04.js"])),"v-343c5b24":p(()=>t(()=>import("./index.html-ef26d102.js"),["assets/index.html-ef26d102.js","assets/framework-39b9cf04.js"])),"v-fe15c146":p(()=>t(()=>import("./index.html-f097f25a.js"),["assets/index.html-f097f25a.js","assets/framework-39b9cf04.js"])),"v-6d0c2fb3":p(()=>t(()=>import("./index.html-3eb3c580.js"),["assets/index.html-3eb3c580.js","assets/framework-39b9cf04.js"])),"v-0d75c62c":p(()=>t(()=>import("./index.html-00b8dac3.js"),["assets/index.html-00b8dac3.js","assets/framework-39b9cf04.js"])),"v-7cfaf478":p(()=>t(()=>import("./index.html-a0524761.js"),["assets/index.html-a0524761.js","assets/framework-39b9cf04.js"])),"v-0985594b":p(()=>t(()=>import("./index.html-d329da8c.js"),["assets/index.html-d329da8c.js","assets/framework-39b9cf04.js"])),"v-39b2b91d":p(()=>t(()=>import("./index.html-c545d340.js"),["assets/index.html-c545d340.js","assets/framework-39b9cf04.js"])),"v-820dd504":p(()=>t(()=>import("./index.html-726c2bec.js"),["assets/index.html-726c2bec.js","assets/framework-39b9cf04.js"])),"v-54e5d97d":p(()=>t(()=>import("./index.html-6446a648.js"),["assets/index.html-6446a648.js","assets/framework-39b9cf04.js"])),"v-8bff77f0":p(()=>t(()=>import("./index.html-7d6df69f.js"),["assets/index.html-7d6df69f.js","assets/framework-39b9cf04.js"])),"v-40423f97":p(()=>t(()=>import("./index.html-5da1bad5.js"),["assets/index.html-5da1bad5.js","assets/framework-39b9cf04.js"])),"v-1d2491d8":p(()=>t(()=>import("./index.html-a3b2a194.js"),["assets/index.html-a3b2a194.js","assets/framework-39b9cf04.js"])),"v-f71f574a":p(()=>t(()=>import("./index.html-718585d3.js"),["assets/index.html-718585d3.js","assets/framework-39b9cf04.js"])),"v-18edd1fa":p(()=>t(()=>import("./index.html-7953e940.js"),["assets/index.html-7953e940.js","assets/framework-39b9cf04.js"])),"v-16bde808":p(()=>t(()=>import("./index.html-203b6159.js"),["assets/index.html-203b6159.js","assets/framework-39b9cf04.js"])),"v-30a064d8":p(()=>t(()=>import("./index.html-2d853d19.js"),["assets/index.html-2d853d19.js","assets/framework-39b9cf04.js"])),"v-5b8c87a0":p(()=>t(()=>import("./index.html-5a92d036.js"),["assets/index.html-5a92d036.js","assets/framework-39b9cf04.js"])),"v-4b695752":p(()=>t(()=>import("./index.html-7cf80d5c.js"),["assets/index.html-7cf80d5c.js","assets/framework-39b9cf04.js"])),"v-aa9b67b6":p(()=>t(()=>import("./index.html-b69085d8.js"),["assets/index.html-b69085d8.js","assets/framework-39b9cf04.js"])),"v-96ca831c":p(()=>t(()=>import("./index.html-7c798a3b.js"),["assets/index.html-7c798a3b.js","assets/framework-39b9cf04.js"])),"v-18da1d4a":p(()=>t(()=>import("./index.html-d089f4bd.js"),["assets/index.html-d089f4bd.js","assets/framework-39b9cf04.js"])),"v-25ef39fc":p(()=>t(()=>import("./index.html-21c4e745.js"),["assets/index.html-21c4e745.js","assets/framework-39b9cf04.js"])),"v-a232faec":p(()=>t(()=>import("./index.html-e6901811.js"),["assets/index.html-e6901811.js","assets/framework-39b9cf04.js"])),"v-395841ba":p(()=>t(()=>import("./index.html-9afb999e.js"),["assets/index.html-9afb999e.js","assets/framework-39b9cf04.js"])),"v-7776e8ca":p(()=>t(()=>import("./index.html-c062a252.js"),["assets/index.html-c062a252.js","assets/framework-39b9cf04.js"])),"v-5db4daba":p(()=>t(()=>import("./index.html-c35c972b.js"),["assets/index.html-c35c972b.js","assets/framework-39b9cf04.js"])),"v-282e9bed":p(()=>t(()=>import("./index.html-6a14d514.js"),["assets/index.html-6a14d514.js","assets/framework-39b9cf04.js"])),"v-2c85be28":p(()=>t(()=>import("./index.html-70432af7.js"),["assets/index.html-70432af7.js","assets/framework-39b9cf04.js"])),"v-1eaa3342":p(()=>t(()=>import("./index.html-73f61985.js"),["assets/index.html-73f61985.js","assets/framework-39b9cf04.js"])),"v-8475bea4":p(()=>t(()=>import("./index.html-99d82dca.js"),["assets/index.html-99d82dca.js","assets/framework-39b9cf04.js"])),"v-3f02980e":p(()=>t(()=>import("./index.html-77b5af3e.js"),["assets/index.html-77b5af3e.js","assets/framework-39b9cf04.js"])),"v-1e50dd80":p(()=>t(()=>import("./index.html-c94a2e7e.js"),["assets/index.html-c94a2e7e.js","assets/framework-39b9cf04.js"])),"v-9e59f8b0":p(()=>t(()=>import("./index.html-8d458d1a.js"),["assets/index.html-8d458d1a.js","assets/framework-39b9cf04.js"])),"v-9e3ba55e":p(()=>t(()=>import("./index.html-91310bf0.js"),["assets/index.html-91310bf0.js","assets/framework-39b9cf04.js"])),"v-a4a38bbe":p(()=>t(()=>import("./index.html-c847dc3d.js"),["assets/index.html-c847dc3d.js","assets/framework-39b9cf04.js"])),"v-5e535007":p(()=>t(()=>import("./index.html-35dae0cb.js"),["assets/index.html-35dae0cb.js","assets/framework-39b9cf04.js"])),"v-286a28ba":p(()=>t(()=>import("./index.html-def26872.js"),["assets/index.html-def26872.js","assets/framework-39b9cf04.js"])),"v-68af4193":p(()=>t(()=>import("./index.html-67c27e4f.js"),["assets/index.html-67c27e4f.js","assets/framework-39b9cf04.js"])),"v-59e96ac9":p(()=>t(()=>import("./index.html-658cbbaf.js"),["assets/index.html-658cbbaf.js","assets/framework-39b9cf04.js"])),"v-5bc93818":p(()=>t(()=>import("./index.html-b1170672.js"),["assets/index.html-b1170672.js","assets/framework-39b9cf04.js"])),"v-744d024e":p(()=>t(()=>import("./index.html-b225bc2b.js"),["assets/index.html-b225bc2b.js","assets/framework-39b9cf04.js"])),"v-e52c881c":p(()=>t(()=>import("./index.html-55449ac7.js"),["assets/index.html-55449ac7.js","assets/framework-39b9cf04.js"])),"v-154dc4c4":p(()=>t(()=>import("./index.html-354f66b6.js"),["assets/index.html-354f66b6.js","assets/framework-39b9cf04.js"])),"v-01560935":p(()=>t(()=>import("./index.html-5864f7ba.js"),["assets/index.html-5864f7ba.js","assets/framework-39b9cf04.js"])),"v-150ab774":p(()=>t(()=>import("./index.html-763e4bda.js"),["assets/index.html-763e4bda.js","assets/framework-39b9cf04.js"])),"v-b7d62b20":p(()=>t(()=>import("./index.html-c11c9c5a.js"),["assets/index.html-c11c9c5a.js","assets/framework-39b9cf04.js"])),"v-6232e040":p(()=>t(()=>import("./index.html-115a2095.js"),["assets/index.html-115a2095.js","assets/framework-39b9cf04.js"])),"v-36ced019":p(()=>t(()=>import("./index.html-8bc17fdb.js"),["assets/index.html-8bc17fdb.js","assets/framework-39b9cf04.js"])),"v-5bf89d1e":p(()=>t(()=>import("./index.html-02e87969.js"),["assets/index.html-02e87969.js","assets/framework-39b9cf04.js"])),"v-7dbcb65a":p(()=>t(()=>import("./index.html-e411b15d.js"),["assets/index.html-e411b15d.js","assets/framework-39b9cf04.js"])),"v-98ba1434":p(()=>t(()=>import("./index.html-d11e75f1.js"),["assets/index.html-d11e75f1.js","assets/framework-39b9cf04.js"])),"v-2aea4e7c":p(()=>t(()=>import("./index.html-c381a4cf.js"),["assets/index.html-c381a4cf.js","assets/framework-39b9cf04.js"])),"v-58b53772":p(()=>t(()=>import("./index.html-e5ce8683.js"),["assets/index.html-e5ce8683.js","assets/framework-39b9cf04.js"])),"v-20581ca8":p(()=>t(()=>import("./index.html-f238e6c4.js"),["assets/index.html-f238e6c4.js","assets/framework-39b9cf04.js"])),"v-72c4ce0d":p(()=>t(()=>import("./index.html-16744287.js"),["assets/index.html-16744287.js","assets/framework-39b9cf04.js"])),"v-2687e471":p(()=>t(()=>import("./index.html-76026cf5.js"),["assets/index.html-76026cf5.js","assets/framework-39b9cf04.js"])),"v-21ee427c":p(()=>t(()=>import("./index.html-68e25a1a.js"),["assets/index.html-68e25a1a.js","assets/framework-39b9cf04.js"])),"v-58d23f98":p(()=>t(()=>import("./index.html-73e84bb0.js"),["assets/index.html-73e84bb0.js","assets/framework-39b9cf04.js"])),"v-473420d3":p(()=>t(()=>import("./index.html-32adfa21.js"),["assets/index.html-32adfa21.js","assets/framework-39b9cf04.js"])),"v-315ef24a":p(()=>t(()=>import("./index.html-f630a730.js"),["assets/index.html-f630a730.js","assets/framework-39b9cf04.js"])),"v-65eddd24":p(()=>t(()=>import("./index.html-a708ef42.js"),["assets/index.html-a708ef42.js","assets/framework-39b9cf04.js"])),"v-29255efc":p(()=>t(()=>import("./index.html-d47905e9.js"),["assets/index.html-d47905e9.js","assets/framework-39b9cf04.js"])),"v-78cbe7bb":p(()=>t(()=>import("./index.html-dcd36330.js"),["assets/index.html-dcd36330.js","assets/framework-39b9cf04.js"])),"v-229aed01":p(()=>t(()=>import("./index.html-bd33f2c1.js"),["assets/index.html-bd33f2c1.js","assets/framework-39b9cf04.js"])),"v-9db2faec":p(()=>t(()=>import("./index.html-a81f60ec.js"),["assets/index.html-a81f60ec.js","assets/framework-39b9cf04.js"])),"v-7f36686c":p(()=>t(()=>import("./index.html-cb00f0e6.js"),["assets/index.html-cb00f0e6.js","assets/framework-39b9cf04.js"])),"v-2565fbec":p(()=>t(()=>import("./index.html-141aa895.js"),["assets/index.html-141aa895.js","assets/framework-39b9cf04.js"])),"v-878ee446":p(()=>t(()=>import("./index.html-df18c567.js"),["assets/index.html-df18c567.js","assets/framework-39b9cf04.js"])),"v-1b3d947c":p(()=>t(()=>import("./index.html-0603b6e9.js"),["assets/index.html-0603b6e9.js","assets/framework-39b9cf04.js"])),"v-b314c74c":p(()=>t(()=>import("./index.html-605b8ca5.js"),["assets/index.html-605b8ca5.js","assets/framework-39b9cf04.js"])),"v-9c48d85a":p(()=>t(()=>import("./index.html-48877901.js"),["assets/index.html-48877901.js","assets/framework-39b9cf04.js"])),"v-245f5676":p(()=>t(()=>import("./index.html-d04908ec.js"),["assets/index.html-d04908ec.js","assets/framework-39b9cf04.js"])),"v-895a84ee":p(()=>t(()=>import("./index.html-c23430a3.js"),["assets/index.html-c23430a3.js","assets/framework-39b9cf04.js"])),"v-262aef94":p(()=>t(()=>import("./index.html-566388f8.js"),["assets/index.html-566388f8.js","assets/framework-39b9cf04.js"])),"v-ba3c9d2c":p(()=>t(()=>import("./index.html-c702e450.js"),["assets/index.html-c702e450.js","assets/framework-39b9cf04.js"])),"v-211f44ee":p(()=>t(()=>import("./index.html-b2a99e02.js"),["assets/index.html-b2a99e02.js","assets/framework-39b9cf04.js"])),"v-14145d44":p(()=>t(()=>import("./index.html-37b604fd.js"),["assets/index.html-37b604fd.js","assets/framework-39b9cf04.js"])),"v-200c1937":p(()=>t(()=>import("./index.html-d0741f3c.js"),["assets/index.html-d0741f3c.js","assets/framework-39b9cf04.js"])),"v-006f9769":p(()=>t(()=>import("./index.html-fa6be4fc.js"),["assets/index.html-fa6be4fc.js","assets/framework-39b9cf04.js"])),"v-7f234e30":p(()=>t(()=>import("./index.html-a4fab57d.js"),["assets/index.html-a4fab57d.js","assets/framework-39b9cf04.js"])),"v-6106c001":p(()=>t(()=>import("./index.html-8d54fe7d.js"),["assets/index.html-8d54fe7d.js","assets/framework-39b9cf04.js"])),"v-3f71e568":p(()=>t(()=>import("./index.html-d8bbd0e7.js"),["assets/index.html-d8bbd0e7.js","assets/framework-39b9cf04.js"])),"v-28cbf673":p(()=>t(()=>import("./index.html-b5843e41.js"),["assets/index.html-b5843e41.js","assets/framework-39b9cf04.js"])),"v-60d861aa":p(()=>t(()=>import("./index.html-3c793229.js"),["assets/index.html-3c793229.js","assets/framework-39b9cf04.js"])),"v-7cc75969":p(()=>t(()=>import("./index.html-4a4975a0.js"),["assets/index.html-4a4975a0.js","assets/framework-39b9cf04.js"])),"v-0da0cada":p(()=>t(()=>import("./index.html-b2f8a3ed.js"),["assets/index.html-b2f8a3ed.js","assets/framework-39b9cf04.js"])),"v-c27e0a54":p(()=>t(()=>import("./index.html-f759a1a9.js"),["assets/index.html-f759a1a9.js","assets/framework-39b9cf04.js"])),"v-295ddd76":p(()=>t(()=>import("./index.html-dbe9b1a8.js"),["assets/index.html-dbe9b1a8.js","assets/framework-39b9cf04.js"])),"v-1a507bec":p(()=>t(()=>import("./index.html-04e85011.js"),["assets/index.html-04e85011.js","assets/framework-39b9cf04.js"])),"v-f8ee5dc4":p(()=>t(()=>import("./index.html-6368938f.js"),["assets/index.html-6368938f.js","assets/framework-39b9cf04.js"])),"v-e93a9404":p(()=>t(()=>import("./index.html-eb2adb01.js"),["assets/index.html-eb2adb01.js","assets/framework-39b9cf04.js"])),"v-ae84acf8":p(()=>t(()=>import("./index.html-efb174cd.js"),["assets/index.html-efb174cd.js","assets/framework-39b9cf04.js"])),"v-211e8c1d":p(()=>t(()=>import("./index.html-ce3c37a6.js"),["assets/index.html-ce3c37a6.js","assets/framework-39b9cf04.js"])),"v-3f1309c0":p(()=>t(()=>import("./index.html-6f180945.js"),["assets/index.html-6f180945.js","assets/framework-39b9cf04.js"])),"v-293a5861":p(()=>t(()=>import("./index.html-7dc5cd35.js"),["assets/index.html-7dc5cd35.js","assets/framework-39b9cf04.js"])),"v-b309c306":p(()=>t(()=>import("./index.html-15757f26.js"),["assets/index.html-15757f26.js","assets/framework-39b9cf04.js"])),"v-b3026aae":p(()=>t(()=>import("./index.html-2ab4b2ee.js"),["assets/index.html-2ab4b2ee.js","assets/framework-39b9cf04.js"]))};var To=Symbol(""),Oo=V(Io),ha=Ae({key:"",path:"",title:"",lang:"",frontmatter:{},headers:[]}),Pn=V(ha),q=()=>Pn,Aa=Symbol(""),K=()=>{const n=en(Aa);if(!n)throw new Error("usePageFrontmatter() is called without provider.");return n},ga=Symbol(""),Fo=()=>{const n=en(ga);if(!n)throw new Error("usePageHead() is called without provider.");return n},Ba=Symbol(""),Vo=()=>{const n=en(Ba);if(!n)throw new Error("usePageHeadTitle() is called without provider.");return n},ka=Symbol(""),Xn=()=>{const n=en(ka);if(!n)throw new Error("usePageLang() is called without provider.");return n},fa=Symbol(""),Mo=()=>{const n=en(fa);if(!n)throw new Error("usePageLayout() is called without provider.");return n},et=Symbol(""),hn=()=>{const n=en(et);if(!n)throw new Error("useRouteLocale() is called without provider.");return n},$n=V(So),ba=()=>$n,Da=Symbol(""),Zn=()=>{const n=en(Da);if(!n)throw new Error("useSiteLocaleData() is called without provider.");return n},xo=Symbol(""),Ro="Layout",$o="NotFound",yn=po({resolveLayouts:n=>n.reduce((e,a)=>({...e,...a.layouts}),{}),resolvePageData:async n=>{const e=Oo.value[n];return await(e==null?void 0:e())??ha},resolvePageFrontmatter:n=>n.frontmatter,resolvePageHead:(n,e,a)=>{const o=pn(e.description)?e.description:a.description,i=[...ge(e.head)?e.head:[],...a.head,["title",{},n],["meta",{name:"description",content:o}]];return lo(i)},resolvePageHeadTitle:(n,e)=>[n.title,e.title].filter(a=>!!a).join(" | "),resolvePageLang:n=>n.lang||"en",resolvePageLayout:(n,e)=>{let a;if(n.path){const o=n.frontmatter.layout;pn(o)?a=o:a=Ro}else a=$o;return e[a]},resolveRouteLocale:(n,e)=>co(n,e),resolveSiteLocaleData:(n,e)=>({...n,...n.locales[e]})}),ke=T({name:"ClientOnly",setup(n,e){const a=V(!1);return J(()=>{a.value=!0}),()=>{var o,i;return a.value?(i=(o=e.slots).default)==null?void 0:i.call(o):null}}}),ya=T({name:"Content",props:{pageKey:{type:String,required:!1,default:""}},setup(n){const e=q(),a=g(()=>va[n.pageKey||e.value.key]);return()=>a.value?s(a.value):s("div","404 Not Found")}}),dn=(n={})=>n,rn=n=>Fn(n)?n:`/${Ea(n)}`;const zo={},U=({name:n="",color:e="currentColor"},{slots:a})=>{var o;return s("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${n}-icon`],viewBox:"0 0 1024 1024",fill:e,"aria-label":`${n} icon`},(o=a.default)==null?void 0:o.call(a))};U.displayName="IconBase";const La=({size:n=48,stroke:e=4,wrapper:a=!0,height:o=2*n})=>{const i=s("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[s("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),s("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":e,"stroke-linecap":"round"},[s("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),s("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return a?s("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${o}px`},i):i};La.displayName="LoadingIcon";const Ca=(n,{slots:e})=>{var a;return((a=e.default)==null?void 0:a.call(e))||null},Pa=()=>s(U,{name:"github"},()=>s("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));Pa.displayName="GitHubIcon";const wa=()=>s(U,{name:"gitlab"},()=>s("path",{d:"M229.333 78.688C223.52 62 199.895 62 193.895 78.688L87.958 406.438h247.5c-.188 0-106.125-327.75-106.125-327.75zM33.77 571.438c-4.875 15 .563 31.687 13.313 41.25l464.812 345L87.77 406.438zm301.5-165 176.813 551.25 176.812-551.25zm655.125 165-54-165-424.312 551.25 464.812-345c12.938-9.563 18.188-26.25 13.5-41.25zM830.27 78.688c-5.812-16.688-29.437-16.688-35.437 0l-106.125 327.75h247.5z"}));wa.displayName="GitlabIcon";const Ia=()=>s(U,{name:"gitee"},()=>s("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Ia.displayName="GiteeIcon";const Sa=()=>s(U,{name:"bitbucket"},()=>s("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));Sa.displayName="BitbucketIcon";const Ta=()=>s(U,{name:"source"},()=>s("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));Ta.displayName="SourceIcon";const Oa=Array.isArray,No=n=>typeof n=="function",Ln=n=>typeof n=="string";var Fa=n=>/^(https?:)?\/\//.test(n),Va=n=>Object.prototype.toString.call(n)==="[object Object]";const mn=(n,e)=>{const a=e?e._instance:Be();return Va(a==null?void 0:a.appContext.components)&&(n in a.appContext.components||yt(n)in a.appContext.components||uo(yt(n))in a.appContext.components)};function Ho(n){return n}function Uo(n,e=!0){Be()?J(n):e?n():wn(n)}function Zo(n,e=!1){const a=V(),o=()=>a.value=!!n();return o(),Uo(o,e),a}const Pt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},wt="__vueuse_ssr_handlers__";Pt[wt]=Pt[wt]||{};var It;(function(n){n.UP="UP",n.RIGHT="RIGHT",n.DOWN="DOWN",n.LEFT="LEFT",n.NONE="NONE"})(It||(It={}));var jo=Object.defineProperty,St=Object.getOwnPropertySymbols,Wo=Object.prototype.hasOwnProperty,Go=Object.prototype.propertyIsEnumerable,Tt=(n,e,a)=>e in n?jo(n,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[e]=a,qo=(n,e)=>{for(var a in e||(e={}))Wo.call(e,a)&&Tt(n,a,e[a]);if(St)for(var a of St(e))Go.call(e,a)&&Tt(n,a,e[a]);return n};const Qo={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};qo({linear:Ho},Qo);const Yo=()=>Zo(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),Ko=()=>{const n=Yo();return g(()=>n.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},Vn=n=>{const e=hn();return g(()=>n[e.value])},Jo=n=>/\b(?:Android|iPhone)/i.test(n),fe=(n,e)=>{let a=1;for(let o=0;o<n.length;o++)a+=n.charCodeAt(o),a+=a<<10,a^=a>>6;return a+=a<<3,a^=a>>11,a%e};var be=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Me={},Xo={get exports(){return Me},set exports(n){Me=n}};(function(n,e){(function(a,o){n.exports=o()})(be,function(){var a=1e3,o=6e4,i=36e5,r="millisecond",l="second",c="minute",u="hour",d="day",_="week",h="month",m="quarter",v="year",k="date",E="Invalid Date",A=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,L={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(P){var b=["th","st","nd","rd"],B=P%100;return"["+P+(b[(B-20)%10]||b[B]||b[0])+"]"}},F=function(P,b,B){var w=String(P);return!w||w.length>=b?P:""+Array(b+1-w.length).join(B)+P},$={s:F,z:function(P){var b=-P.utcOffset(),B=Math.abs(b),w=Math.floor(B/60),f=B%60;return(b<=0?"+":"-")+F(w,2,"0")+":"+F(f,2,"0")},m:function P(b,B){if(b.date()<B.date())return-P(B,b);var w=12*(B.year()-b.year())+(B.month()-b.month()),f=b.clone().add(w,h),O=B-f<0,I=b.clone().add(w+(O?-1:1),h);return+(-(w+(B-f)/(O?f-I:I-f))||0)},a:function(P){return P<0?Math.ceil(P)||0:Math.floor(P)},p:function(P){return{M:h,y:v,w:_,d,D:k,h:u,m:c,s:l,ms:r,Q:m}[P]||String(P||"").toLowerCase().replace(/s$/,"")},u:function(P){return P===void 0}},M="en",z={};z[M]=L;var R=function(P){return P instanceof X},S=function P(b,B,w){var f;if(!b)return M;if(typeof b=="string"){var O=b.toLowerCase();z[O]&&(f=O),B&&(z[O]=B,f=O);var I=b.split("-");if(!f&&I.length>1)return P(I[0])}else{var x=b.name;z[x]=b,f=x}return!w&&f&&(M=f),f||!w&&M},D=function(P,b){if(R(P))return P.clone();var B=typeof b=="object"?b:{};return B.date=P,B.args=arguments,new X(B)},C=$;C.l=S,C.i=R,C.w=function(P,b){return D(P,{locale:b.$L,utc:b.$u,x:b.$x,$offset:b.$offset})};var X=function(){function P(B){this.$L=S(B.locale,null,!0),this.parse(B)}var b=P.prototype;return b.parse=function(B){this.$d=function(w){var f=w.date,O=w.utc;if(f===null)return new Date(NaN);if(C.u(f))return new Date;if(f instanceof Date)return new Date(f);if(typeof f=="string"&&!/Z$/i.test(f)){var I=f.match(A);if(I){var x=I[2]-1||0,H=(I[7]||"0").substring(0,3);return O?new Date(Date.UTC(I[1],x,I[3]||1,I[4]||0,I[5]||0,I[6]||0,H)):new Date(I[1],x,I[3]||1,I[4]||0,I[5]||0,I[6]||0,H)}}return new Date(f)}(B),this.$x=B.x||{},this.init()},b.init=function(){var B=this.$d;this.$y=B.getFullYear(),this.$M=B.getMonth(),this.$D=B.getDate(),this.$W=B.getDay(),this.$H=B.getHours(),this.$m=B.getMinutes(),this.$s=B.getSeconds(),this.$ms=B.getMilliseconds()},b.$utils=function(){return C},b.isValid=function(){return this.$d.toString()!==E},b.isSame=function(B,w){var f=D(B);return this.startOf(w)<=f&&f<=this.endOf(w)},b.isAfter=function(B,w){return D(B)<this.startOf(w)},b.isBefore=function(B,w){return this.endOf(w)<D(B)},b.$g=function(B,w,f){return C.u(B)?this[w]:this.set(f,B)},b.unix=function(){return Math.floor(this.valueOf()/1e3)},b.valueOf=function(){return this.$d.getTime()},b.startOf=function(B,w){var f=this,O=!!C.u(w)||w,I=C.p(B),x=function(En,Q){var sn=C.w(f.$u?Date.UTC(f.$y,Q,En):new Date(f.$y,Q,En),f);return O?sn:sn.endOf(d)},H=function(En,Q){return C.w(f.toDate()[En].apply(f.toDate("s"),(O?[0,0,0,0]:[23,59,59,999]).slice(Q)),f)},N=this.$W,j=this.$M,an=this.$D,nn="set"+(this.$u?"UTC":"");switch(I){case v:return O?x(1,0):x(31,11);case h:return O?x(1,j):x(0,j+1);case _:var An=this.$locale().weekStart||0,gn=(N<An?N+7:N)-An;return x(O?an-gn:an+(6-gn),j);case d:case k:return H(nn+"Hours",0);case u:return H(nn+"Minutes",1);case c:return H(nn+"Seconds",2);case l:return H(nn+"Milliseconds",3);default:return this.clone()}},b.endOf=function(B){return this.startOf(B,!1)},b.$set=function(B,w){var f,O=C.p(B),I="set"+(this.$u?"UTC":""),x=(f={},f[d]=I+"Date",f[k]=I+"Date",f[h]=I+"Month",f[v]=I+"FullYear",f[u]=I+"Hours",f[c]=I+"Minutes",f[l]=I+"Seconds",f[r]=I+"Milliseconds",f)[O],H=O===d?this.$D+(w-this.$W):w;if(O===h||O===v){var N=this.clone().set(k,1);N.$d[x](H),N.init(),this.$d=N.set(k,Math.min(this.$D,N.daysInMonth())).$d}else x&&this.$d[x](H);return this.init(),this},b.set=function(B,w){return this.clone().$set(B,w)},b.get=function(B){return this[C.p(B)]()},b.add=function(B,w){var f,O=this;B=Number(B);var I=C.p(w),x=function(j){var an=D(O);return C.w(an.date(an.date()+Math.round(j*B)),O)};if(I===h)return this.set(h,this.$M+B);if(I===v)return this.set(v,this.$y+B);if(I===d)return x(1);if(I===_)return x(7);var H=(f={},f[c]=o,f[u]=i,f[l]=a,f)[I]||1,N=this.$d.getTime()+B*H;return C.w(N,this)},b.subtract=function(B,w){return this.add(-1*B,w)},b.format=function(B){var w=this,f=this.$locale();if(!this.isValid())return f.invalidDate||E;var O=B||"YYYY-MM-DDTHH:mm:ssZ",I=C.z(this),x=this.$H,H=this.$m,N=this.$M,j=f.weekdays,an=f.months,nn=function(Q,sn,Sn,bn){return Q&&(Q[sn]||Q(w,O))||Sn[sn].slice(0,bn)},An=function(Q){return C.s(x%12||12,Q,"0")},gn=f.meridiem||function(Q,sn,Sn){var bn=Q<12?"AM":"PM";return Sn?bn.toLowerCase():bn},En={YY:String(this.$y).slice(-2),YYYY:this.$y,M:N+1,MM:C.s(N+1,2,"0"),MMM:nn(f.monthsShort,N,an,3),MMMM:nn(an,N),D:this.$D,DD:C.s(this.$D,2,"0"),d:String(this.$W),dd:nn(f.weekdaysMin,this.$W,j,2),ddd:nn(f.weekdaysShort,this.$W,j,3),dddd:j[this.$W],H:String(x),HH:C.s(x,2,"0"),h:An(1),hh:An(2),a:gn(x,H,!0),A:gn(x,H,!1),m:String(H),mm:C.s(H,2,"0"),s:String(this.$s),ss:C.s(this.$s,2,"0"),SSS:C.s(this.$ms,3,"0"),Z:I};return O.replace(y,function(Q,sn){return sn||En[Q]||I.replace(":","")})},b.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},b.diff=function(B,w,f){var O,I=C.p(w),x=D(B),H=(x.utcOffset()-this.utcOffset())*o,N=this-x,j=C.m(this,x);return j=(O={},O[v]=j/12,O[h]=j,O[m]=j/3,O[_]=(N-H)/6048e5,O[d]=(N-H)/864e5,O[u]=N/i,O[c]=N/o,O[l]=N/a,O)[I]||N,f?j:C.a(j)},b.daysInMonth=function(){return this.endOf(h).$D},b.$locale=function(){return z[this.$L]},b.locale=function(B,w){if(!B)return this.$L;var f=this.clone(),O=S(B,w,!0);return O&&(f.$L=O),f},b.clone=function(){return C.w(this.$d,this)},b.toDate=function(){return new Date(this.valueOf())},b.toJSON=function(){return this.isValid()?this.toISOString():null},b.toISOString=function(){return this.$d.toISOString()},b.toString=function(){return this.$d.toUTCString()},P}(),Wn=X.prototype;return D.prototype=Wn,[["$ms",r],["$s",l],["$m",c],["$H",u],["$W",d],["$M",h],["$y",v],["$D",k]].forEach(function(P){Wn[P[1]]=function(b){return this.$g(b,P[0],P[1])}}),D.extend=function(P,b){return P.$i||(P(b,X,D),P.$i=!0),D},D.locale=S,D.isDayjs=R,D.unix=function(P){return D(1e3*P)},D.en=z[M],D.Ls=z,D.p={},D})})(Xo);var Tn=Me,xe={},ni={get exports(){return xe},set exports(n){xe=n}};(function(n,e){(function(a,o){n.exports=o()})(be,function(){return function(a,o,i){var r=o.prototype,l=function(m){var v,k=m.date,E=m.utc,A={};if(!((v=k)instanceof Date||v instanceof Array||r.$utils().u(v)||v.constructor.name!=="Object")){if(!Object.keys(k).length)return new Date;var y=E?i.utc():i();Object.keys(k).forEach(function(D){var C,X;A[C=D,X=r.$utils().p(C),X==="date"?"day":X]=k[D]});var L=A.day||(A.year||A.month>=0?1:y.date()),F=A.year||y.year(),$=A.month>=0?A.month:A.year||A.day?0:y.month(),M=A.hour||0,z=A.minute||0,R=A.second||0,S=A.millisecond||0;return E?new Date(Date.UTC(F,$,L,M,z,R,S)):new Date(F,$,L,M,z,R,S)}return k},c=r.parse;r.parse=function(m){m.date=l.bind(this)(m),c.bind(this)(m)};var u=r.set,d=r.add,_=r.subtract,h=function(m,v,k,E){E===void 0&&(E=1);var A=Object.keys(v),y=this;return A.forEach(function(L){y=m.bind(y)(v[L]*E,L)}),y};r.set=function(m,v){return v=v===void 0?m:v,m.constructor.name==="Object"?h.bind(this)(function(k,E){return u.bind(this)(E,k)},v,m):u.bind(this)(m,v)},r.add=function(m,v){return m.constructor.name==="Object"?h.bind(this)(d,m,v):d.bind(this)(m,v)},r.subtract=function(m,v){return m.constructor.name==="Object"?h.bind(this)(d,m,v,-1):_.bind(this)(m,v)}}})})(ni);var ei=xe,Re={},ti={get exports(){return Re},set exports(n){Re=n}};(function(n,e){(function(a,o){n.exports=o()})(be,function(){var a={year:0,month:1,day:2,hour:3,minute:4,second:5},o={};return function(i,r,l){var c,u=function(m,v,k){k===void 0&&(k={});var E=new Date(m),A=function(y,L){L===void 0&&(L={});var F=L.timeZoneName||"short",$=y+"|"+F,M=o[$];return M||(M=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:y,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",timeZoneName:F}),o[$]=M),M}(v,k);return A.formatToParts(E)},d=function(m,v){for(var k=u(m,v),E=[],A=0;A<k.length;A+=1){var y=k[A],L=y.type,F=y.value,$=a[L];$>=0&&(E[$]=parseInt(F,10))}var M=E[3],z=M===24?0:M,R=E[0]+"-"+E[1]+"-"+E[2]+" "+z+":"+E[4]+":"+E[5]+":000",S=+m;return(l.utc(R).valueOf()-(S-=S%1e3))/6e4},_=r.prototype;_.tz=function(m,v){m===void 0&&(m=c);var k=this.utcOffset(),E=this.toDate(),A=E.toLocaleString("en-US",{timeZone:m}),y=Math.round((E-new Date(A))/1e3/60),L=l(A).$set("millisecond",this.$ms).utcOffset(15*-Math.round(E.getTimezoneOffset()/15)-y,!0);if(v){var F=L.utcOffset();L=L.add(k-F,"minute")}return L.$x.$timezone=m,L},_.offsetName=function(m){var v=this.$x.$timezone||l.tz.guess(),k=u(this.valueOf(),v,{timeZoneName:m}).find(function(E){return E.type.toLowerCase()==="timezonename"});return k&&k.value};var h=_.startOf;_.startOf=function(m,v){if(!this.$x||!this.$x.$timezone)return h.call(this,m,v);var k=l(this.format("YYYY-MM-DD HH:mm:ss:SSS"));return h.call(k,m,v).tz(this.$x.$timezone,!0)},l.tz=function(m,v,k){var E=k&&v,A=k||v||c,y=d(+l(),A);if(typeof m!="string")return l(m).tz(A);var L=function(z,R,S){var D=z-60*R*1e3,C=d(D,S);if(R===C)return[D,R];var X=d(D-=60*(C-R)*1e3,S);return C===X?[D,C]:[z-60*Math.min(C,X)*1e3,Math.max(C,X)]}(l.utc(m,E).valueOf(),y,A),F=L[0],$=L[1],M=l(F).utcOffset($);return M.$x.$timezone=A,M},l.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},l.tz.setDefault=function(m){c=m}}})})(ti);var ai=Re,$e={},si={get exports(){return $e},set exports(n){$e=n}};(function(n,e){(function(a,o){n.exports=o()})(be,function(){var a="minute",o=/[+-]\d\d(?::?\d\d)?/g,i=/([+-]|\d\d)/g;return function(r,l,c){var u=l.prototype;c.utc=function(E){var A={date:E,utc:!0,args:arguments};return new l(A)},u.utc=function(E){var A=c(this.toDate(),{locale:this.$L,utc:!0});return E?A.add(this.utcOffset(),a):A},u.local=function(){return c(this.toDate(),{locale:this.$L,utc:!1})};var d=u.parse;u.parse=function(E){E.utc&&(this.$u=!0),this.$utils().u(E.$offset)||(this.$offset=E.$offset),d.call(this,E)};var _=u.init;u.init=function(){if(this.$u){var E=this.$d;this.$y=E.getUTCFullYear(),this.$M=E.getUTCMonth(),this.$D=E.getUTCDate(),this.$W=E.getUTCDay(),this.$H=E.getUTCHours(),this.$m=E.getUTCMinutes(),this.$s=E.getUTCSeconds(),this.$ms=E.getUTCMilliseconds()}else _.call(this)};var h=u.utcOffset;u.utcOffset=function(E,A){var y=this.$utils().u;if(y(E))return this.$u?0:y(this.$offset)?h.call(this):this.$offset;if(typeof E=="string"&&(E=function(M){M===void 0&&(M="");var z=M.match(o);if(!z)return null;var R=(""+z[0]).match(i)||["-",0,0],S=R[0],D=60*+R[1]+ +R[2];return D===0?0:S==="+"?D:-D}(E),E===null))return this;var L=Math.abs(E)<=16?60*E:E,F=this;if(A)return F.$offset=L,F.$u=E===0,F;if(E!==0){var $=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(F=this.local().add(L+$,a)).$offset=L,F.$x.$localOffset=$}else F=this.utc();return F};var m=u.format;u.format=function(E){var A=E||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return m.call(this,A)},u.valueOf=function(){var E=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*E},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var v=u.toDate;u.toDate=function(E){return E==="s"&&this.$offset?c(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():v.call(this)};var k=u.diff;u.diff=function(E,A,y){if(E&&this.$u===E.$u)return k.call(this,E,A,y);var L=this.local(),F=c(E).local();return k.call(L,F,A,y)}}})})(si);var oi=$e;Tn.extend(ei),Tn.extend(oi),Tn.extend(ai);const me=(n,e)=>{if(n){if(Tn(n instanceof Date?n:Ln(n)?n.trim():n).isValid()){const o=e?Tn(n).tz(e):Tn(n),i=o.year(),r=o.month()+1,l=o.date(),c=o.hour(),u=o.minute(),d=o.second(),_=o.millisecond(),h=c===0&&u===0&&d===0&&_===0;return{value:o.toDate(),info:{year:i,month:r,day:l,...h?{}:{hour:c,minute:u,second:d}},type:h?"date":"full"}}const a=/(?:(\d{2,4})[/-](\d{1,2})[/-](\d{1,2}))?\s*(?:(\d{1,2}):(\d{1,2})(?::(\d{1,2}))?)?/u.exec(n.trim());if(a){const[,o,i,r,l,c,u]=a,d=A=>typeof A>"u"?void 0:Number(A),_=A=>A&&A<100?A+2e3:A,h=A=>l&&c&&!u?0:A,m={year:_(d(o)),month:d(i),day:d(r),hour:d(l),minute:d(c),second:h(d(u))},v=o===void 0&&i===void 0&&r===void 0,k=l===void 0&&c===void 0&&u===void 0,E=Tn({...m,month:m.month-1}).toDate();return{value:v?void 0:E,info:k?{year:m.year,month:m.month,day:m.day}:v?{hour:m.hour,minute:m.minute,second:m.second}:m,type:v?"time":k?"date":"full"}}}return null},Hn=(n,e)=>Ln(n)&&n.startsWith(e),Rn=(n,e)=>Ln(n)&&n.endsWith(e),De=Object.entries,Bn=Object.keys,Ot=n=>Va(n)&&Ln(n.name),Yn=(n,e=!1)=>n?Oa(n)?n.map(a=>Ln(a)?{name:a}:Ot(a)?a:null).filter(a=>a!==null):Ln(n)?[{name:n}]:Ot(n)?[n]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${e?"":"| false"} | undefined\`, but got`,n),[]):[],Ma=(n,e)=>{if(n){if(Oa(n)&&n.every(Ln))return n;if(Ln(n))return[n];console.error(`Expect ${e||"value"} to be \`string[] | string | undefined\`, but got`,n)}return[]},xa=n=>Ma(n,"category"),Ra=n=>Ma(n,"tag"),ye=n=>Hn(n,"/");class ii{constructor(){this.messageElements={};const e="message-container",a=document.getElementById(e);a?this.containerElement=a:(this.containerElement=document.createElement("div"),this.containerElement.id=e,document.body.appendChild(this.containerElement))}pop(e,a=2e3){const o=document.createElement("div"),i=Date.now();return o.className="message move-in",o.innerHTML=e,this.containerElement.appendChild(o),this.messageElements[i]=o,a>0&&setTimeout(()=>{this.close(i)},a),i}close(e){if(e){const a=this.messageElements[e];a.classList.remove("move-in"),a.classList.add("move-out"),a.addEventListener("animationend",()=>{a.remove(),delete this.messageElements[e]})}else Bn(this.messageElements).forEach(a=>this.close(Number(a)))}destroy(){document.body.removeChild(this.containerElement)}}const $a=/#.*$/u,ri=n=>{const e=$a.exec(n);return e?e[0]:""},Ft=n=>decodeURI(n).replace($a,"").replace(/(index)?\.(md|html)$/,""),tt=(n,e)=>{if(e===void 0)return!1;const a=Ft(n.path),o=Ft(e),i=ri(e);return i?i===n.hash&&(!o||a===o):a===o},pi=n=>Fa(n)?n:`https://github.com/${n}`,za=n=>!Fa(n)||/github\.com/.test(n)?"GitHub":/bitbucket\.org/.test(n)?"Bitbucket":/gitlab\.com/.test(n)?"GitLab":/gitee\.com/.test(n)?"Gitee":null,ne=(n,...e)=>{const a=n.resolve(...e),o=a.matched[a.matched.length-1];if(!(o!=null&&o.redirect))return a;const{redirect:i}=o,r=No(i)?i(a):i,l=Ln(r)?{path:r}:r;return ne(n,{hash:a.hash,query:a.query,params:a.params,...l})};var Vt;const ee=typeof window<"u",li=n=>typeof n=="function",ci=n=>typeof n=="string",Kn=()=>{},Mt=ee&&((Vt=window==null?void 0:window.navigator)==null?void 0:Vt.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function vn(n){return typeof n=="function"?n():Qn(n)}function at(n,e){function a(...o){return new Promise((i,r)=>{Promise.resolve(n(()=>e.apply(this,o),{fn:e,thisArg:this,args:o})).then(i).catch(r)})}return a}const Na=n=>n();function ui(n,e={}){let a,o,i=Kn;const r=c=>{clearTimeout(c),i(),i=Kn};return c=>{const u=vn(n),d=vn(e.maxWait);return a&&r(a),u<=0||d!==void 0&&d<=0?(o&&(r(o),o=null),Promise.resolve(c())):new Promise((_,h)=>{i=e.rejectOnCancel?h:_,d&&!o&&(o=setTimeout(()=>{a&&r(a),o=null,_(c())},d)),a=setTimeout(()=>{o&&r(o),o=null,_(c())},u)})}}function di(n,e=!0,a=!0,o=!1){let i=0,r,l=!0,c=Kn,u;const d=()=>{r&&(clearTimeout(r),r=void 0,c(),c=Kn)};return h=>{const m=vn(n),v=Date.now()-i,k=()=>u=h();return d(),m<=0?(i=Date.now(),k()):(v>m&&(a||!l)?(i=Date.now(),k()):e&&(u=new Promise((E,A)=>{c=o?A:E,r=setTimeout(()=>{i=Date.now(),l=!0,E(k()),d()},Math.max(0,m-v))})),!a&&!r&&(r=setTimeout(()=>l=!0,m)),l=!1,u)}}function Ei(n=Na){const e=V(!0);function a(){e.value=!1}function o(){e.value=!0}const i=(...r)=>{e.value&&n(...r)};return{isActive:Ae(e),pause:a,resume:o,eventFilter:i}}function _i(n){return n}function Mn(n){return Eo()?(_o(n),!0):!1}function Mc(n,e=200,a={}){return at(ui(e,a),n)}function mi(n,e=200,a=!1,o=!0,i=!1){return at(di(e,a,o,i),n)}function Ha(n){return typeof n=="function"?g(n):V(n)}function Ua(n,e=!0){Be()?J(n):e?n():wn(n)}function vi(n,e,a={}){const{immediate:o=!0}=a,i=V(!1);let r=null;function l(){r&&(clearTimeout(r),r=null)}function c(){i.value=!1,l()}function u(...d){l(),i.value=!0,r=setTimeout(()=>{i.value=!1,r=null,n(...d)},vn(e))}return o&&(i.value=!0,ee&&u()),Mn(c),{isPending:Ae(i),start:u,stop:c}}function xt(n=!1,e={}){const{truthyValue:a=!0,falsyValue:o=!1}=e,i=_a(n),r=V(n);function l(c){if(arguments.length)return r.value=c,r.value;{const u=vn(a);return r.value=r.value===u?vn(o):u,r.value}}return i?l:[r,l]}var Rt=Object.getOwnPropertySymbols,hi=Object.prototype.hasOwnProperty,Ai=Object.prototype.propertyIsEnumerable,gi=(n,e)=>{var a={};for(var o in n)hi.call(n,o)&&e.indexOf(o)<0&&(a[o]=n[o]);if(n!=null&&Rt)for(var o of Rt(n))e.indexOf(o)<0&&Ai.call(n,o)&&(a[o]=n[o]);return a};function Bi(n,e,a={}){const o=a,{eventFilter:i=Na}=o,r=gi(o,["eventFilter"]);return Y(n,at(i,e),r)}var ki=Object.defineProperty,fi=Object.defineProperties,bi=Object.getOwnPropertyDescriptors,ve=Object.getOwnPropertySymbols,Za=Object.prototype.hasOwnProperty,ja=Object.prototype.propertyIsEnumerable,$t=(n,e,a)=>e in n?ki(n,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[e]=a,Di=(n,e)=>{for(var a in e||(e={}))Za.call(e,a)&&$t(n,a,e[a]);if(ve)for(var a of ve(e))ja.call(e,a)&&$t(n,a,e[a]);return n},yi=(n,e)=>fi(n,bi(e)),Li=(n,e)=>{var a={};for(var o in n)Za.call(n,o)&&e.indexOf(o)<0&&(a[o]=n[o]);if(n!=null&&ve)for(var o of ve(n))e.indexOf(o)<0&&ja.call(n,o)&&(a[o]=n[o]);return a};function Ci(n,e,a={}){const o=a,{eventFilter:i}=o,r=Li(o,["eventFilter"]),{eventFilter:l,pause:c,resume:u,isActive:d}=Ei(i);return{stop:Bi(n,e,yi(Di({},r),{eventFilter:l})),pause:c,resume:u,isActive:d}}function st(n){var e;const a=vn(n);return(e=a==null?void 0:a.$el)!=null?e:a}const On=ee?window:void 0,Wa=ee?window.document:void 0,Pi=ee?window.navigator:void 0;function tn(...n){let e,a,o,i;if(ci(n[0])||Array.isArray(n[0])?([a,o,i]=n,e=On):[e,a,o,i]=n,!e)return Kn;Array.isArray(a)||(a=[a]),Array.isArray(o)||(o=[o]);const r=[],l=()=>{r.forEach(_=>_()),r.length=0},c=(_,h,m,v)=>(_.addEventListener(h,m,v),()=>_.removeEventListener(h,m,v)),u=Y(()=>[st(e),vn(i)],([_,h])=>{l(),_&&r.push(...a.flatMap(m=>o.map(v=>c(_,m,v,h))))},{immediate:!0,flush:"post"}),d=()=>{u(),l()};return Mn(d),d}function Le(n,e=!1){const a=V(),o=()=>a.value=Boolean(n());return o(),Ua(o,e),a}function wi(n,e={}){const{window:a=On}=e,o=Le(()=>a&&"matchMedia"in a&&typeof a.matchMedia=="function");let i;const r=V(!1),l=()=>{i&&("removeEventListener"in i?i.removeEventListener("change",c):i.removeListener(c))},c=()=>{o.value&&(l(),i=a.matchMedia(Ha(n).value),r.value=i.matches,"addEventListener"in i?i.addEventListener("change",c):i.addListener(c))};return vo(c),Mn(()=>l()),r}function Ii(n={}){const{navigator:e=Pi,read:a=!1,source:o,copiedDuring:i=1500,legacy:r=!1}=n,l=["copy","cut"],c=Le(()=>e&&"clipboard"in e),u=g(()=>c.value||r),d=V(""),_=V(!1),h=vi(()=>_.value=!1,i);function m(){c.value?e.clipboard.readText().then(A=>{d.value=A}):d.value=E()}if(u.value&&a)for(const A of l)tn(A,m);async function v(A=vn(o)){u.value&&A!=null&&(c.value?await e.clipboard.writeText(A):k(A),d.value=A,_.value=!0,h.start())}function k(A){const y=document.createElement("textarea");y.value=A??"",y.style.position="absolute",y.style.opacity="0",document.body.appendChild(y),y.select(),document.execCommand("copy"),y.remove()}function E(){var A,y,L;return(L=(y=(A=document==null?void 0:document.getSelection)==null?void 0:A.call(document))==null?void 0:y.toString())!=null?L:""}return{isSupported:u,text:d,copied:_,copy:v}}const ze=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Ne="__vueuse_ssr_handlers__";ze[Ne]=ze[Ne]||{};const Si=ze[Ne];function Ti(n,e){return Si[n]||e}function Oi(n){return n==null?"any":n instanceof Set?"set":n instanceof Map?"map":n instanceof Date?"date":typeof n=="boolean"?"boolean":typeof n=="string"?"string":typeof n=="object"?"object":Number.isNaN(n)?"any":"number"}var Fi=Object.defineProperty,zt=Object.getOwnPropertySymbols,Vi=Object.prototype.hasOwnProperty,Mi=Object.prototype.propertyIsEnumerable,Nt=(n,e,a)=>e in n?Fi(n,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[e]=a,Ht=(n,e)=>{for(var a in e||(e={}))Vi.call(e,a)&&Nt(n,a,e[a]);if(zt)for(var a of zt(e))Mi.call(e,a)&&Nt(n,a,e[a]);return n};const xi={boolean:{read:n=>n==="true",write:n=>String(n)},object:{read:n=>JSON.parse(n),write:n=>JSON.stringify(n)},number:{read:n=>Number.parseFloat(n),write:n=>String(n)},any:{read:n=>n,write:n=>String(n)},string:{read:n=>n,write:n=>String(n)},map:{read:n=>new Map(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n.entries()))},set:{read:n=>new Set(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n))},date:{read:n=>new Date(n),write:n=>n.toISOString()}},Ut="vueuse-storage";function Ga(n,e,a,o={}){var i;const{flush:r="pre",deep:l=!0,listenToStorageChanges:c=!0,writeDefaults:u=!0,mergeDefaults:d=!1,shallow:_,window:h=On,eventFilter:m,onError:v=S=>{console.error(S)}}=o,k=(_?mo:V)(e);if(!a)try{a=Ti("getDefaultStorage",()=>{var S;return(S=On)==null?void 0:S.localStorage})()}catch(S){v(S)}if(!a)return k;const E=vn(e),A=Oi(E),y=(i=o.serializer)!=null?i:xi[A],{pause:L,resume:F}=Ci(k,()=>$(k.value),{flush:r,deep:l,eventFilter:m});return h&&c&&(tn(h,"storage",R),tn(h,Ut,z)),R(),k;function $(S){try{if(S==null)a.removeItem(n);else{const D=y.write(S),C=a.getItem(n);C!==D&&(a.setItem(n,D),h&&h.dispatchEvent(new CustomEvent(Ut,{detail:{key:n,oldValue:C,newValue:D,storageArea:a}})))}}catch(D){v(D)}}function M(S){const D=S?S.newValue:a.getItem(n);if(D==null)return u&&E!==null&&a.setItem(n,y.write(E)),E;if(!S&&d){const C=y.read(D);return li(d)?d(C,E):A==="object"&&!Array.isArray(C)?Ht(Ht({},E),C):C}else return typeof D!="string"?D:y.read(D)}function z(S){R(S.detail)}function R(S){if(!(S&&S.storageArea!==a)){if(S&&S.key==null){k.value=E;return}if(!(S&&S.key!==n)){L();try{k.value=M(S)}catch(D){v(D)}finally{S?wn(F):F()}}}}}function Ri(n){return wi("(prefers-color-scheme: dark)",n)}const Zt=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]];function ot(n,e={}){const{document:a=Wa,autoExit:o=!1}=e,i=n||(a==null?void 0:a.querySelector("html")),r=V(!1);let l=Zt[0];const c=Le(()=>{if(a){for(const E of Zt)if(E[1]in a)return l=E,!0}else return!1;return!1}),[u,d,_,,h]=l;async function m(){c.value&&(a!=null&&a[_]&&await a[d](),r.value=!1)}async function v(){if(!c.value)return;await m();const E=st(i);E&&(await E[u](),r.value=!0)}async function k(){r.value?await m():await v()}return a&&tn(a,h,()=>{r.value=!!(a!=null&&a[_])},!1),o&&Mn(m),{isSupported:c,isFullscreen:r,enter:v,exit:m,toggle:k}}function $i(n,e,a={}){const{window:o=On}=a;return Ga(n,e,o==null?void 0:o.localStorage,a)}var jt=Object.getOwnPropertySymbols,zi=Object.prototype.hasOwnProperty,Ni=Object.prototype.propertyIsEnumerable,Hi=(n,e)=>{var a={};for(var o in n)zi.call(n,o)&&e.indexOf(o)<0&&(a[o]=n[o]);if(n!=null&&jt)for(var o of jt(n))e.indexOf(o)<0&&Ni.call(n,o)&&(a[o]=n[o]);return a};function Ui(n,e,a={}){const o=a,{window:i=On}=o,r=Hi(o,["window"]);let l;const c=Le(()=>i&&"MutationObserver"in i),u=()=>{l&&(l.disconnect(),l=void 0)},d=Y(()=>st(n),h=>{u(),c.value&&i&&h&&(l=new MutationObserver(e),l.observe(h,r))},{immediate:!0}),_=()=>{u(),d()};return Mn(_),{isSupported:c,stop:_}}var Wt;(function(n){n.UP="UP",n.RIGHT="RIGHT",n.DOWN="DOWN",n.LEFT="LEFT",n.NONE="NONE"})(Wt||(Wt={}));function qa(n){const e=window.getComputedStyle(n);if(e.overflowX==="scroll"||e.overflowY==="scroll"||e.overflowX==="auto"&&n.clientHeight<n.scrollHeight||e.overflowY==="auto"&&n.clientWidth<n.scrollWidth)return!0;{const a=n.parentNode;return!a||a.tagName==="BODY"?!1:qa(a)}}function Zi(n){const e=n||window.event,a=e.target;return qa(a)?!1:e.touches.length>1?!0:(e.preventDefault&&e.preventDefault(),!1)}function it(n,e=!1){const a=V(e);let o=null,i;Y(Ha(n),c=>{if(c){const u=c;i=u.style.overflow,a.value&&(u.style.overflow="hidden")}},{immediate:!0});const r=()=>{const c=vn(n);!c||a.value||(Mt&&(o=tn(c,"touchmove",u=>{Zi(u)},{passive:!1})),c.style.overflow="hidden",a.value=!0)},l=()=>{const c=vn(n);!c||!a.value||(Mt&&(o==null||o()),c.style.overflow=i,a.value=!1)};return Mn(l),g({get(){return a.value},set(c){c?r():l()}})}let ji=0;function Wi(n,e={}){const a=V(!1),{document:o=Wa,immediate:i=!0,manual:r=!1,id:l=`vueuse_styletag_${++ji}`}=e,c=V(n);let u=()=>{};const d=()=>{if(!o)return;const h=o.getElementById(l)||o.createElement("style");h.isConnected||(h.type="text/css",h.id=l,e.media&&(h.media=e.media),o.head.appendChild(h)),!a.value&&(u=Y(c,m=>{h.textContent=m},{immediate:!0}),a.value=!0)},_=()=>{!o||!a.value||(u(),o.head.removeChild(o.getElementById(l)),a.value=!1)};return i&&!r&&Ua(d),r||Mn(_),{id:l,css:c,unload:_,load:d,isLoaded:Ae(a)}}var Gi=Object.defineProperty,Gt=Object.getOwnPropertySymbols,qi=Object.prototype.hasOwnProperty,Qi=Object.prototype.propertyIsEnumerable,qt=(n,e,a)=>e in n?Gi(n,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[e]=a,Yi=(n,e)=>{for(var a in e||(e={}))qi.call(e,a)&&qt(n,a,e[a]);if(Gt)for(var a of Gt(e))Qi.call(e,a)&&qt(n,a,e[a]);return n};const Ki={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};Yi({linear:_i},Ki);function Ji({window:n=On}={}){if(!n)return{x:V(0),y:V(0)};const e=V(n.scrollX),a=V(n.scrollY);return tn(n,"scroll",()=>{e.value=n.scrollX,a.value=n.scrollY},{capture:!1,passive:!0}),{x:e,y:a}}var Xi=T({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(n){const e=g(()=>{const o=["font-icon icon"],i=`iconfont icon-${n.icon}`;return o.push(i),o}),a=g(()=>{const o={};return n.color&&(o.color=n.color),n.size&&(o["font-size"]=Number.isNaN(Number(n.size))?n.size:`${n.size}px`),Bn(o).length?o:null});return()=>n.icon?s("span",{key:n.icon,class:e.value,style:a.value}):null}});const Qa=({type:n="info",text:e="",vertical:a="top",color:o},{slots:i})=>{var r;return s("span",{class:["badge",n,{diy:o}],style:{verticalAlign:a,...o?{backgroundColor:o}:{}}},e||((r=i.default)==null?void 0:r.call(i)))};Qa.displayName="Badge";const Ya="accelerometer; autoplay; clipboard-write; encrypted-media; fullscreen; gyroscope; picture-in-picture",Qt=n=>pn(n)?n:`${n}px`,Ka=(n,e=0)=>{const a=V(),o=g(()=>Qt(Qn(n.width)||"100%")),i=V("auto"),r=u=>{if(pn(u)){const[d,_]=u.split(":"),h=Number(d)/Number(_);if(!Number.isNaN(h))return h}return typeof u=="number"?u:16/9},l=u=>{const d=Qn(n.height),_=r(Qn(n.ratio));return d?Qt(d):`${Number(u)/_+Qn(e)}px`},c=()=>{a.value&&(i.value=l(a.value.clientWidth))};return J(()=>{c(),_a(e)&&Y(e,()=>c()),tn("orientationchange",()=>c()),tn("resize",()=>c())}),{el:a,width:o,height:i}};var nr=T({name:"BiliBili",props:{bvid:{type:String,required:!0},title:{type:String,default:"A BiliBili video"},page:{type:[String,Number],default:1},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},time:{type:[String,Number],default:0},lowQuality:Boolean,noDanmaku:Boolean},setup(n){const e=V(!1),a=g(()=>e.value?0:68),o=()=>{e.value=Jo(navigator.userAgent)||i.value.clientWidth<640},{el:i,width:r,height:l}=Ka(n,a),c=g(()=>`https://player.bilibili.com/player.html?bvid=${n.bvid}&t=${n.time}&high_quality=${n.lowQuality?0:1}&page=${n.page}&danmaku=${n.noDanmaku?0:1}`);return J(()=>{o(),tn("orientationchange",()=>o()),tn("resize",()=>o())}),()=>[s("div",{class:"bili-desc"},s("a",{class:"sr-only",href:c.value},n.title)),s("iframe",{ref:i,src:c.value,title:n.title,class:"bili-iframe",allow:Ya,style:{width:r.value,height:l.value}})]}});const ue=n=>Fn(n)?n:rn(n);var er=T({name:"VideoPlayer",props:{options:{type:Object,default:()=>({})},src:{type:String,required:!0},title:{type:String,default:"A video"},type:{type:String,default:""},tracks:{type:Array,default:()=>[]},poster:{type:String,default:""},width:{type:[String,Number],default:"100%"},loop:Boolean},setup(n){let e=null;const a=V(),o=g(()=>({hideYouTubeDOMError:!0,...n.options}));return J(async()=>{const{default:i}=await t(()=>import("./plyr.min-65d8b78a.js"),[]);e=new i(a.value,o.value)}),ho(()=>{try{e==null||e.destroy()}catch{}}),()=>s("div",{class:"video-player-wrapper",style:{width:n.width}},[s("a",{class:"sr-only",href:ue(n.src)},n.title),s("video",{ref:a,title:n.title,crossorigin:"anonymous",poster:ue(n.poster),preload:"metadata",controls:"",...n.loop?{loop:""}:{}},[...n.tracks.map(i=>s("track",{...i,src:ue(i.src)})),s("source",{src:ue(n.src),type:n.type})])])}});var tr=T({name:"YouTube",props:{id:{type:String,default:""},title:{type:String,default:"A YouTube video"},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},autoplay:Boolean,loop:Boolean,showCc:Boolean,showAnnotations:Boolean,start:{type:[String,Number],default:void 0},end:{type:[String,Number],default:void 0},defaultCcLang:{type:String,default:""},uiLang:{type:String,default:""},listType:{type:String,default:""},list:{type:String,default:""},playlist:{type:String,default:""},disableControls:Boolean,disableFullscreen:Boolean,disableKeyboard:Boolean},setup(n){const e=Xn(),{el:a,width:o,height:i}=Ka(n),r=g(()=>n.id?`${n.id}?`:n.listType==="playlist"&&n.list?`?listType=playlist&list=${Hn(n.list,"PL")?n.list:`PL${n.list}`}&`:null),l=g(()=>{const u=new URLSearchParams;return n.autoplay&&u.set("autoplay","1"),n.loop&&u.set("loop","1"),n.showCc&&u.set("cc_load_policy","1"),n.showAnnotations&&u.set("iv_load_policy","3"),n.start&&u.set("start",n.start.toString()),n.end&&u.set("end",n.end.toString()),u.set("hl",n.uiLang||e.value),u.set("cc_lang_pref",n.defaultCcLang||e.value),u.set("color","white"),n.disableControls&&u.set("controls","0"),n.disableFullscreen&&u.set("fs","0"),n.disableKeyboard&&u.set("disablekb","1"),n.playlist&&u.set("playlist",n.playlist),u.toString()}),c=g(()=>r.value?`https://www.youtube.com/embed/${r.value}${l.value}`:null);return()=>c.value?[s("div",{class:"youtube-desc"},s("a",{class:"sr-only",href:c.value},n.title)),s("iframe",{ref:a,src:c.value,title:n.title,class:"youtube-iframe",allow:Ya,style:{width:o.value,height:i.value}})]:null}});const Ja=()=>s(U,{name:"back-to-top"},()=>[s("path",{d:"M512 843.2c-36.2 0-66.4-13.6-85.8-21.8-10.8-4.6-22.6 3.6-21.8 15.2l7 102c.4 6.2 7.6 9.4 12.6 5.6l29-22c3.6-2.8 9-1.8 11.4 2l41 64.2c3 4.8 10.2 4.8 13.2 0l41-64.2c2.4-3.8 7.8-4.8 11.4-2l29 22c5 3.8 12.2.6 12.6-5.6l7-102c.8-11.6-11-20-21.8-15.2-19.6 8.2-49.6 21.8-85.8 21.8z"}),s("path",{d:"m795.4 586.2-96-98.2C699.4 172 513 32 513 32S324.8 172 324.8 488l-96 98.2c-3.6 3.6-5.2 9-4.4 14.2L261.2 824c1.8 11.4 14.2 17 23.6 10.8L419 744s41.4 40 94.2 40c52.8 0 92.2-40 92.2-40l134.2 90.8c9.2 6.2 21.6.6 23.6-10.8l37-223.8c.4-5.2-1.2-10.4-4.8-14zM513 384c-34 0-61.4-28.6-61.4-64s27.6-64 61.4-64c34 0 61.4 28.6 61.4 64S547 384 513 384z"})]);Ja.displayName="BackToTopIcon";var ar=T({name:"BackToTop",props:{threshold:{type:Number,default:300}},setup(n){const e=K(),a=Vn({"/":{backToTop:"返回顶部"}}),{y:o}=Ji(),i=g(()=>e.value.backToTop!==!1&&o.value>n.threshold);return()=>s(Nn,{name:"fade"},()=>i.value?s("button",{class:"back-to-top","aria-label":a.value.backToTop,"data-balloon-pos":"left",onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},s(Ja)):null)}});const sr=dn({enhance:({app:n})=>{mn("FontIcon")||n.component("FontIcon",Xi),mn("Badge")||n.component("Badge",Qa),mn("BiliBili")||n.component("BiliBili",nr),mn("VideoPlayer")||n.component("VideoPlayer",er),mn("YouTube")||n.component("YouTube",tr)},setup:()=>{Wi(`  @import url("//at.alicdn.com/t/c/font_2410206_5vb9zlyghj.css");
  `)},rootComponents:[()=>s(ar,{threshold:300})]});function Xa(n,e,a){var o,i,r;e===void 0&&(e=50),a===void 0&&(a={});var l=(o=a.isImmediate)!=null&&o,c=(i=a.callback)!=null&&i,u=a.maxWait,d=Date.now(),_=[];function h(){if(u!==void 0){var v=Date.now()-d;if(v+e>=u)return u-v}return e}var m=function(){var v=[].slice.call(arguments),k=this;return new Promise(function(E,A){var y=l&&r===void 0;if(r!==void 0&&clearTimeout(r),r=setTimeout(function(){if(r=void 0,d=Date.now(),!l){var F=n.apply(k,v);c&&c(F),_.forEach(function($){return(0,$.resolve)(F)}),_=[]}},h()),y){var L=n.apply(k,v);return c&&c(L),E(L)}_.push({resolve:E,reject:A})})};return m.cancel=function(v){r!==void 0&&clearTimeout(r),_.forEach(function(k){return(0,k.reject)(v)}),_=[]},m}const or=({headerLinkSelector:n,headerAnchorSelector:e,delay:a,offset:o=5})=>{const i=un(),l=Xa(()=>{var E,A;const c=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(c-0)<o){Yt(i,"");return}const d=window.innerHeight+c,_=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),h=Math.abs(_-d)<o,m=Array.from(document.querySelectorAll(n)),k=Array.from(document.querySelectorAll(e)).filter(y=>m.some(L=>L.hash===y.hash));for(let y=0;y<k.length;y++){const L=k[y],F=k[y+1],$=c>=(((E=L.parentElement)==null?void 0:E.offsetTop)??0)-o,M=!F||c<(((A=F.parentElement)==null?void 0:A.offsetTop)??0)-o;if(!($&&M))continue;const R=decodeURIComponent(i.currentRoute.value.hash),S=decodeURIComponent(L.hash);if(R===S)return;if(h){for(let D=y+1;D<k.length;D++)if(R===decodeURIComponent(k[D].hash))return}Yt(i,S);return}},a);J(()=>{window.addEventListener("scroll",l)}),Ao(()=>{window.removeEventListener("scroll",l)})},Yt=async(n,e)=>{const{scrollBehavior:a}=n.options;n.options.scrollBehavior=void 0,await n.replace({query:n.currentRoute.value.query,hash:e,force:!0}).finally(()=>n.options.scrollBehavior=a)},ir=".sidebar-link, .toc-link",rr=".header-anchor",pr=200,lr=5,cr=dn({setup(){or({headerLinkSelector:ir,headerAnchorSelector:rr,delay:pr,offset:lr})}});var ur=T({name:"AutoCatalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,titleGetter:{type:Function,default:n=>n.t||""},iconGetter:{type:Function,default:n=>n.i},orderGetter:{type:Function,default:n=>n.O||0},shouldIndex:{type:Function,default:n=>{const e=n.I;return e===void 0||e}}},setup(n,{slots:e}){const a=Vn({"/":{title:"目录"}}),o=q(),i=un(),r=ba(),l=()=>{const u=n.base||o.value.path.replace(/\/[^/]+$/,"/"),d=i.getRoutes(),_=[];return d.filter(({meta:h,path:m})=>{if(!Hn(m,u)||m===u)return!1;if(u==="/"){const v=Bn(r.value.locales).filter(k=>k!=="/");if(m==="/404.html"||v.some(k=>Hn(m,k)))return!1}return(Rn(m,".html")&&!Rn(m,"/index.html")||Rn(m,"/"))&&n.shouldIndex(h)}).map(({path:h,meta:m})=>{const v=h.substring(u.length).split("/").length;return{title:n.titleGetter(m),icon:n.iconGetter(m),base:h.replace(/\/[^/]+\/?$/,"/"),order:n.orderGetter(m)||null,level:Rn(h,"/")?v-1:v,path:h}}).filter(({title:h,level:m})=>typeof h=="string"&&h&&m<=n.level).sort(({title:h,level:m,path:v,order:k},{title:E,level:A,path:y,order:L})=>m-A||(Rn(v,"/index.html")?-1:Rn(y,"/index.html")?1:k===null?L===null?h.localeCompare(E):L:L===null?k:k>0?L>0?k-L:-1:L<0?k-L:1)).forEach(h=>{var m;const{base:v,level:k}=h;switch(k){case 1:_.push(h);break;case 2:{const E=_.find(A=>A.path===v);E&&(E.children??(E.children=[])).push(h);break}default:{const E=_.find(A=>A.path===v.replace(/\/[^/]+\/$/,"/"));if(E){const A=(m=E.children)==null?void 0:m.find(y=>y.path===v);A&&(A.children??(A.children=[])).push(h)}}}}),_},c=g(()=>l());return()=>s("div",{class:"auto-catalog-wrapper"},[s("h2",{class:"main-title"},a.value.title),...c.value.map(({children:u=[],icon:d,path:_,title:h},m)=>[s("h3",{id:h,class:["child-title",{"has-children":u.length}]},[s("a",{href:`#${h}`,class:"header-anchor"},"#"),s(on,{class:"catalog-title",to:_},()=>[n.index?`${m+1}.`:null,d&&e.icon?e.icon({icon:d}):null,h||"Unknown"])]),u.length?s("ul",{class:"child-catalog-wrapper"},u.map(({children:v=[],icon:k,path:E,title:A},y)=>s("li",{class:"child-catalog-item"},[s("div",{class:["sub-title",{"has-children":v.length}]},[s("a",{href:`#${A}`,class:"header-anchor"},"#"),s(on,{class:"catalog-title",to:E},()=>[n.index?`${m+1}.${y+1}`:null,k&&e.icon?e.icon({icon:k}):null,A||"Unknown"])]),v.length?s("div",{class:"sub-catalog-wrapper"},v.map(({icon:L,path:F,title:$},M)=>s(on,{class:"sub-catalog-item",to:F},()=>[n.index?`${m+1}.${y+1}.${M+1}`:null,L&&e.icon?e.icon({icon:L}):null,$||"Unknown"]))):null]))):null])])}}),dr=dn({enhance:({app:n})=>{mn("AutoCatalog",n)||n.component("AutoCatalog",e=>s(ur,e,{icon:({icon:a})=>s(ln("HopeIcon"),{icon:a})}))}});const Er=s("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[s("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),s("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),ns=T({name:"ExternalLinkIcon",props:{locales:{type:Object,required:!1,default:()=>({})}},setup(n){const e=hn(),a=g(()=>n.locales[e.value]??{openInNewWindow:"open in new window"});return()=>s("span",[Er,s("span",{class:"external-link-icon-sr-only"},a.value.openInNewWindow)])}}),_r={},mr=dn({enhance({app:n}){n.component("ExternalLinkIcon",s(ns,{locales:_r}))}});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const W={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:n=>{const e=W.isStarted();n=Ie(n,W.settings.minimum,1),W.status=n===1?null:n;const a=W.render(!e),o=a.querySelector(W.settings.barSelector),i=W.settings.speed,r=W.settings.easing;return a.offsetWidth,vr(l=>{de(o,{transform:"translate3d("+Kt(n)+"%,0,0)",transition:"all "+i+"ms "+r}),n===1?(de(a,{transition:"none",opacity:"1"}),a.offsetWidth,setTimeout(function(){de(a,{transition:"all "+i+"ms linear",opacity:"0"}),setTimeout(function(){W.remove(),l()},i)},i)):setTimeout(()=>l(),i)}),W},isStarted:()=>typeof W.status=="number",start:()=>{W.status||W.set(0);const n=()=>{setTimeout(()=>{W.status&&(W.trickle(),n())},W.settings.trickleSpeed)};return W.settings.trickle&&n(),W},done:n=>!n&&!W.status?W:W.inc(.3+.5*Math.random()).set(1),inc:n=>{let e=W.status;return e?(typeof n!="number"&&(n=(1-e)*Ie(Math.random()*e,.1,.95)),e=Ie(e+n,0,.994),W.set(e)):W.start()},trickle:()=>W.inc(Math.random()*W.settings.trickleRate),render:n=>{if(W.isRendered())return document.getElementById("nprogress");Jt(document.documentElement,"nprogress-busy");const e=document.createElement("div");e.id="nprogress",e.innerHTML=W.settings.template;const a=e.querySelector(W.settings.barSelector),o=n?"-100":Kt(W.status||0),i=document.querySelector(W.settings.parent);return de(a,{transition:"all 0 linear",transform:"translate3d("+o+"%,0,0)"}),i!==document.body&&Jt(i,"nprogress-custom-parent"),i==null||i.appendChild(e),e},remove:()=>{Xt(document.documentElement,"nprogress-busy"),Xt(document.querySelector(W.settings.parent),"nprogress-custom-parent");const n=document.getElementById("nprogress");n&&hr(n)},isRendered:()=>!!document.getElementById("nprogress")},Ie=(n,e,a)=>n<e?e:n>a?a:n,Kt=n=>(-1+n)*100,vr=function(){const n=[];function e(){const a=n.shift();a&&a(e)}return function(a){n.push(a),n.length===1&&e()}}(),de=function(){const n=["Webkit","O","Moz","ms"],e={};function a(l){return l.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(c,u){return u.toUpperCase()})}function o(l){const c=document.body.style;if(l in c)return l;let u=n.length;const d=l.charAt(0).toUpperCase()+l.slice(1);let _;for(;u--;)if(_=n[u]+d,_ in c)return _;return l}function i(l){return l=a(l),e[l]||(e[l]=o(l))}function r(l,c,u){c=i(c),l.style[c]=u}return function(l,c){for(const u in c){const d=c[u];d!==void 0&&Object.prototype.hasOwnProperty.call(c,u)&&r(l,u,d)}}}(),es=(n,e)=>(typeof n=="string"?n:rt(n)).indexOf(" "+e+" ")>=0,Jt=(n,e)=>{const a=rt(n),o=a+e;es(a,e)||(n.className=o.substring(1))},Xt=(n,e)=>{const a=rt(n);if(!es(n,e))return;const o=a.replace(" "+e+" "," ");n.className=o.substring(1,o.length-1)},rt=n=>(" "+(n.className||"")+" ").replace(/\s+/gi," "),hr=n=>{n&&n.parentNode&&n.parentNode.removeChild(n)};const Ar=()=>{J(()=>{const n=un(),e=new Set;e.add(n.currentRoute.value.path),n.beforeEach(a=>{e.has(a.path)||W.start()}),n.afterEach(a=>{e.add(a.path),W.done()})})},gr=dn({setup(){Ar()}}),Br=JSON.parse('{"encrypt":{},"darkmode":"switch","themeColor":{"blue":"#2196f3","red":"#f26d6d","green":"#3eaf7c","orange":"#fb9b5f"},"fullscreen":true,"blog":{"articleInfo":["Date","PageView","Category","Tag","ReadingTime"],"name":"南叔先生","avatar":"/avatar_self.webp","description":"理想主义，工科世界具有无限可能，探索技术融合，热衷于学习软件、技术和算法，定期分享探索成果","intro":"/intro.html","roundAvatar":true,"medias":{"GitHub":"https://github.com/tobeprozy","Zhihu":"https://www.zhihu.com/people/tobeprozy","Email":"mailto:tobeprozy@163.com"}},"print":false,"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"收藏"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"author":{"name":"南叔先生","url":"tobeprozy.github.io"},"logo":"logo.svg","breadcrumb":false,"contributors":false,"lastUpdated":true,"editLink":true,"repo":"tobeprozy/tobeprozy.github.io ","repoLabel":"GitHub","repoDisplay":true,"docsDir":"docs","navbar":[{"text":"博客","icon":"blog","link":"/blog"},{"text":"代码","icon":"code","prefix":"/","children":["26code/Markdown","26code/AutoHotkey","26code/Electron",{"text":"页面开发","icon":"vue","prefix":"","children":["20web/VuePress","20web/docsify","27deploy/VPS"]}]},{"text":"应用","icon":"app","prefix":"/","children":["25apps/Applist",{"text":"ChatGPT SC","icon":"creative","link":"https://ai.newzone.top/"},{"text":"直播手册","icon":"quote","link":"25apps/livestreaming/1_obs_basic"},{"text":"服务/系统","icon":"any","prefix":"","children":["15Linux/NAS","24Windows/faq"]}]},{"text":"生活","icon":"emmet","prefix":"/28LifeNotes/","children":["Diet","Shoppinglist","Coupon"]},{"text":"工具收藏","icon":"tool","link":"https://nav.newzone.top/"}],"navbarLayout":{"start":["Brand"],"center":["Links"],"end":["Repo","Outlook","Search"]},"sidebar":[{"text":"📅工作笔记","icon":"daily","prefix":"/soph开发/","link":"","collapsible":true,"children":["详情目录.md"]},{"text":"📅每日一问","icon":"daily","prefix":"/00Daily_Question/","link":"","collapsible":true,"children":["每日一问.md","详情目录.md"]},{"text":"🎥传感器","icon":"sensor","prefix":"/01Sensor/","link":"","collapsible":true,"children":["*.md"]},{"text":"🌅图像处理","icon":"","prefix":"/02Image_Processing/","link":"","collapsible":true,"children":"structure"},{"text":"👓计算机视觉","icon":"","prefix":"/03Computer_Vision/","link":"","collapsible":true,"children":"structure"},{"text":"☁️点云处理","icon":"","prefix":"/04Point_Cloud_Processing/","link":"","collapsible":true,"children":"structure"},{"text":"🔍优化算法","icon":"","prefix":"/05Optimization_Algorithm/","link":"","collapsible":true,"children":"structure"},{"text":"🚀SLAM","icon":"","prefix":"/06SLAM/","link":"","collapsible":true,"children":"structure"},{"text":"🚗数学基础","icon":"","prefix":"/07Math_Basic/","link":"","collapsible":true,"children":"structure"},{"text":"🧠AI-机器学习-深度学习","icon":"","prefix":"/08AI_Machine_Learning_Deep_Learning/","link":"","collapsible":true,"children":"structure"},{"text":"📟嵌入式开发","icon":"","prefix":"/09Embedded_Development/","link":"","collapsible":true,"children":"structure"},{"text":"🤖机器人","icon":"","prefix":"/10Robotics/","link":"","collapsible":true,"children":"structure"},{"text":"🚘自动驾驶篇","icon":"","prefix":"/11Automatic_Driving/","link":"","collapsible":true,"children":"structure"},{"text":"💻C++","icon":"","prefix":"/12C_plus_plus/","link":"","collapsible":true,"children":"structure"},{"text":"🐍Python","icon":"","prefix":"/13Python/","link":"","collapsible":true,"children":"structure"},{"text":"🐧Matlab","icon":"","prefix":"/14Matlab/","link":"","collapsible":true,"children":"structure"},{"text":"🐋 Linux 服务","icon":"","prefix":"/15Linux/","link":"","collapsible":true,"children":"structure"},{"text":"🤖ROS","icon":"","prefix":"/16ROS/","link":"","collapsible":true,"children":"structure"},{"text":"💻计算机基础","icon":"","prefix":"/17Computer_Basics/","link":"","collapsible":true,"children":"structure"},{"text":"📊数据结构","icon":"","prefix":"/18Data_Structure/","link":"","collapsible":true,"children":"structure"},{"text":"🌐网络编程","icon":"","prefix":"/19Network_Programming/","link":"","collapsible":true,"children":"structure"},{"text":"🔧机械工程","icon":"","prefix":"/20Mechanical_Engineering/","link":"","collapsible":true,"children":"structure"},{"text":"⚡电路电子","icon":"","prefix":"/21Circuit_Electronics/","link":"","collapsible":true,"children":"structure"},{"text":"🔊信号处理","icon":"","prefix":"/22Signal_Processing/","link":"","collapsible":true,"children":"structure"},{"text":"🧰 应用手册","icon":"","prefix":"/25apps/","link":"","collapsible":true,"children":["Applist.md","ChatGPT.md","design.md","AppNotes.md","Chrome.md",{"text":"直播手册","icon":"load","prefix":"livestreaming/","link":"","collapsible":true,"children":"structure"}]},{"text":"🌐 页面开发","icon":"","prefix":"/30web/","link":"","collapsible":true,"children":"structure"},{"text":"🏗️ 网站部署","icon":"","prefix":"/27deploy/","link":"","collapsible":true,"children":"structure"},{"text":"🚀 代码学习","icon":"","prefix":"/26code/","link":"","collapsible":true,"children":["README.md",{"text":"Basic","icon":"emmet","collapsible":true,"children":["Markdown.md","Electron.md","AutoHotkey.md","Regex.md"]},{"text":"FrondEnd","icon":"app","collapsible":true,"children":["Vue.md","HTML.md","JavaScript.md","Python.md"]}]},{"text":"系统问题","icon":"windows","prefix":"/24Windows/","link":"","collapsible":true,"children":"structure"},{"text":"🛖 生活记录","icon":"","prefix":"/28LifeNotes/","link":"","collapsible":true,"children":"structure"},"/DailyRoutine","/Fitness",{"text":"博客文章","icon":"blog","prefix":"/_blog/","link":"/blog.md","collapsible":true,"children":"structure"},{"text":"读书笔记","icon":"read","link":"https://newzone.top/reading/"}],"pageInfo":["Category","Tag","Word","ReadingTime","PageView"]}}}'),kr=V(Br),ts=()=>kr,as=Symbol(""),fr=()=>{const n=en(as);if(!n)throw new Error("useThemeLocaleData() is called without provider.");return n},br=(n,e)=>{var a;return{...n,...(a=n.locales)==null?void 0:a[e]}},Dr=dn({enhance({app:n}){const e=ts(),a=n._context.provides[et],o=g(()=>br(e.value,a.value));n.provide(as,o),Object.defineProperties(n.config.globalProperties,{$theme:{get(){return e.value}},$themeLocale:{get(){return o.value}}})}}),yr={"Content-Type":"application/json"},Lr=({serverURL:n,lang:e,paths:a,signal:o})=>(({serverURL:i,lang:r,paths:l,type:c,signal:u})=>fetch(`${i}/article?path=${encodeURIComponent(l.join(","))}&type=${encodeURIComponent(c.join(","))}&lang=${r}`,{signal:u}).then(d=>d.json()))({serverURL:n,lang:e,paths:a,type:["time"],signal:o}).then(i=>Array.isArray(i)?i:[i]),Cr=n=>(({serverURL:e,lang:a,path:o,type:i,action:r})=>fetch(`${e}/article?lang=${a}`,{method:"POST",headers:yr,body:JSON.stringify({path:o,type:i,action:r})}).then(l=>l.json()))({...n,type:"time",action:"inc"}),na=n=>{const e=((a="")=>a.replace(/\/$/u,""))(n);return/^(https?:)?\/\//.test(e)?e:`https://${e}`},Pr=n=>{n.name!=="AbortError"&&console.error(n.message)},ea=n=>n.dataset.path||n.getAttribute("id"),ta=(n,e)=>{e.forEach((a,o)=>{a.innerText=n[o].toString()})},wr=({serverURL:n,path:e=window.location.pathname,selector:a=".waline-pageview-count",update:o=!0,lang:i=navigator.language})=>{const r=new AbortController,l=Array.from(document.querySelectorAll(a)),c=d=>{const _=ea(d);return _!==null&&e!==_},u=d=>Lr({serverURL:na(n),paths:d.map(_=>ea(_)||e),lang:i,signal:r.signal}).then(_=>ta(_,d)).catch(Pr);if(o){const d=l.filter(h=>!c(h)),_=l.filter(c);Cr({serverURL:na(n),path:e,lang:i}).then(h=>ta(new Array(d.length).fill(h),d)),_.length&&u(_)}else u(l);return r.abort.bind(r)};const Gn={provider:"Waline",dark:'html[data-theme="dark"]',serverURL:"https://waline-tobe-ldkifatw2-tobeprozy.vercel.app/",reaction:["https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f44d.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f44f.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f60e.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f602.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f635-200d-1f4ab.png"]},Ir={"/":{placeholder:"请留言。(填写邮箱可在被回复时收到邮件提醒)",reactionTitle:"已到达文章底部，欢迎留言、表情互动~",reaction0:"赞一个",reaction1:"支持下",reaction2:"有点酷",reaction3:"啥玩意",reaction4:"看不懂",admin:"盛年不重来，一日难再晨",level0:"斗者",level1:"斗师",level2:"斗灵",level3:"斗王",level4:"斗皇",level5:"斗宗",level6:"斗尊",level7:"斗圣",level8:"斗帝",level9:"斗神"}};t(()=>import("./waline-meta-a31b78ed.js"),[]);var Sr=T({name:"WalineComment",setup(){const n=q(),e=K(),a=Xn(),o=Vn(Ir);let i;const r=g(()=>{const d=Gn.comment!==!1,_=e.value.comment;return!!_||d!==!1&&_!==!1}),l=g(()=>{const d=Gn.pageview!==!1,_=e.value.pageview;return!!_||d!==!1&&_!==!1}),c=g(()=>rn(n.value.path)),u=g(()=>({lang:a.value==="zh-CN"?"zh-CN":"en",locale:o.value,dark:"html.dark",...Gn,path:c.value}));return J(()=>{Y(c,()=>{i==null||i(),l.value&&wn().then(()=>{setTimeout(()=>{i=wr({serverURL:Gn.serverURL,path:c.value})},Gn.delay||800)})},{immediate:!0})}),()=>r.value?s("div",{class:"waline-wrapper",id:"comment"},s(p({loader:async()=>(await t(()=>import("./component-3e13d03e.js"),["assets/component-3e13d03e.js","assets/framework-39b9cf04.js"])).Waline,loadingComponent:La}),u.value)):null}});const Tr={provider:"Waline",dark:'html[data-theme="dark"]',serverURL:"https://waline-tobe-ldkifatw2-tobeprozy.vercel.app/",reaction:["https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f44d.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f44f.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f60e.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f602.png","https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f635-200d-1f4ab.png"]}.comment!==!1,Or=T({name:"CommentService",props:{darkmode:Boolean},setup(n){const e=K(),a=g(()=>e.value.comment||Tr&&e.value.comment!==!1);return()=>s(Sr,{darkmode:n.darkmode,style:{display:a.value?"block":"none"}})}});var Fr=dn({enhance:({app:n})=>{n.component("CommentService",Or)}});const Vr=800,Mr=2e3,xr={"/":{copy:"复制代码",copied:"已复制",hint:"复制成功"}},Rr=!1,$r=['.theme-hope-content div[class*="language-"] pre'],aa=!1,Se=new Map,zr=()=>{const{copy:n}=Ii({legacy:!0}),e=Vn(xr),a=q(),o=Ko(),i=c=>{if(!c.hasAttribute("copy-code-registered")){const u=document.createElement("button");u.classList.add("copy-code-button"),u.innerHTML='<div class="copy-icon" />',u.setAttribute("aria-label",e.value.copy),u.setAttribute("data-copied",e.value.copied),c.parentElement&&c.parentElement.insertBefore(u,c),c.setAttribute("copy-code-registered","")}},r=()=>wn().then(()=>new Promise(c=>{setTimeout(()=>{$r.forEach(u=>{document.querySelectorAll(u).forEach(i)}),c()},Vr)})),l=(c,u,d)=>{let{innerText:_=""}=u;/language-(shellscript|shell|bash|sh|zsh)/.test(c.classList.toString())&&(_=_.replace(/^ *(\$|>) /gm,"")),n(_).then(()=>{d.classList.add("copied"),clearTimeout(Se.get(d));const h=setTimeout(()=>{d.classList.remove("copied"),d.blur(),Se.delete(d)},Mr);Se.set(d,h)})};J(()=>{(!o.value||aa)&&r(),tn("click",c=>{const u=c.target;if(u.matches('div[class*="language-"] > button.copy')){const d=u.parentElement,_=u.nextElementSibling;_&&l(d,_,u)}else if(u.matches('div[class*="language-"] div.copy-icon')){const d=u.parentElement,_=d.parentElement,h=d.nextElementSibling;h&&l(_,h,d)}}),Y(()=>a.value.path,()=>{(!o.value||aa)&&r()})})};var Nr=dn({setup:()=>{zr()}});const Hr=dn({enhance:({app:n})=>{}});const Ur=".theme-hope-content :not(a) > img:not([no-view])",Zr={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}},jr=800,Wr={},Gr=n=>pn(n)?Array.from(document.querySelectorAll(n)):n.map(e=>Array.from(document.querySelectorAll(e))).flat(),ss=n=>new Promise((e,a)=>{n.complete?e({src:n.src,width:n.naturalWidth,height:n.naturalHeight,alt:n.alt}):(n.onload=()=>e(ss(n)),n.onerror=o=>a(o))}),qr=()=>{const{isSupported:n,toggle:e}=ot(),a=Vn(Zr),o=q(),i=()=>Promise.all([t(()=>import("./photoswipe.esm-36cd6c3c.js"),[]),wn().then(()=>new Promise(r=>setTimeout(r,jr)).then(()=>Gr(Ur)))]).then(([{default:r},l])=>{const c='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>';l.forEach((u,d)=>{const _=()=>{const h=Array(l.length).fill({html:c}),m=new r({dataSource:h,preloaderDelay:0,...a.value,...Wr,index:d});m.on("uiRegister",()=>{n&&m.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{e()}}),m.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(v,k)=>{v.setAttribute("download",""),v.setAttribute("target","_blank"),v.setAttribute("rel","noopener"),k.on("change",()=>{v.href=k.currSlide.data.src})}})}),m.init(),l.forEach((v,k)=>{ss(v).then(E=>{h.splice(k,1,E),m.refreshSlideContent(k)})})};u.style.cursor="zoom-in",u.addEventListener("click",()=>{_()}),u.addEventListener("keypress",({key:h})=>{h==="Enter"&&_()})})});J(()=>{i(),Y(()=>o.value.path,()=>i())})};var Qr=dn({setup:()=>{qr()}});const cn=n=>{const{icon:e=""}=n;return Fn(e)?s("img",{class:"icon",src:e,"no-view":""}):ye(e)?s("img",{class:"icon",src:rn(e),"no-view":""}):s(ln("FontIcon"),n)};cn.displayName="HopeIcon";const zn=(n,e=!1)=>{const a=un(),{fullPath:o,meta:i,name:r}=ne(a,encodeURI(n));return{text:!e&&i.s?i.s:i.t||n,link:r==="404"?n:o,...i.i?{icon:i.i}:{}}},fn=()=>ts(),Z=()=>fr(),jn=()=>g(()=>Boolean(fn().value.pure)),te=()=>{const n=fn(),e=V(!1),a=V(!1),o=()=>{e.value=window.innerWidth<=(n.value.mobileBreakPoint||719),a.value=window.innerWidth>=(n.value.wideBreakPoint||1440)};return J(()=>{o(),tn("resize",o,!1),tn("orientationchange",o,!1)}),{isMobile:e,isWide:a}},ae=()=>{const n=un(),e=kn();return a=>{if(a)if(ye(a))e.path!==a&&n.push(a);else if(Fn(a)||ma(a))window&&window.open(a);else{const o=e.path.slice(0,e.path.lastIndexOf("/"));n.push(`${o}/${encodeURI(a)}`)}}},os=()=>{const n=Z(),e=K();return g(()=>{const{author:a}=e.value;return a?Yn(a):a===!1?[]:Yn(n.value.author,!1)})},Yr=()=>{const n=K();return g(()=>xa(n.value.category).map(e=>{var a,o;return{name:e,path:((o=(a=en(Symbol.for("categoryMap")))==null?void 0:a.value.map[e])==null?void 0:o.path)||""}}))},Kr=()=>{const n=K();return g(()=>Ra(n.value.tag).map(e=>{var a,o;return{name:e,path:((o=(a=en(Symbol.for("tagMap")))==null?void 0:a.value.map[e])==null?void 0:o.path)||""}}))},Jr=()=>{const n=K(),e=q();return g(()=>{const{date:a}=n.value;if(a)return me(a);const{createdTime:o}=e.value.git||{};return o?me(new Date(o)):null})},Xr=()=>{const n=Z(),e=q(),a=K(),o=os(),i=Yr(),r=Kr(),l=Jr(),c=g(()=>({author:o.value,category:i.value,date:l.value,localizedDate:e.value.localizedDate,tag:r.value,isOriginal:a.value.isOriginal||!1,readingTime:e.value.readingTime||null,pageview:"pageview"in a.value?a.value.pageview:!0})),u=g(()=>"pageInfo"in a.value?a.value.pageInfo:"pageInfo"in n.value?n.value.pageInfo:null);return{info:c,items:u}};let Te=null,qn=null;const np={wait:()=>Te,pending:()=>{Te=new Promise(n=>qn=n)},resolve:()=>{qn==null||qn(),Te=null,qn=null}},is=()=>np;const ep=T({name:"PageFooter",setup(){const n=K(),e=Z(),a=os(),o=g(()=>{const{copyright:l,footer:c}=n.value;return c!==!1&&Boolean(l||c||e.value.displayFooter)}),i=g(()=>{const{footer:l}=n.value;return l===!1?!1:pn(l)?l:e.value.footer||""}),r=g(()=>"copyright"in n.value?n.value.copyright:"copyright"in e.value?e.value.copyright:a.value.length?`Copyright © ${new Date().getFullYear()} ${a.value[0].name}`:!1);return()=>o.value?s("footer",{class:"footer-wrapper"},[i.value?s("div",{class:"footer",innerHTML:i.value}):null,r.value?s("div",{class:"copyright",innerHTML:r.value}):null]):null}}),_n=T({name:"AutoLink",inheritAttrs:!1,props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],setup(n,{attrs:e,emit:a,slots:o}){const i=kn(),r=ba(),l=Jn(n,"config"),c=g(()=>Fn(l.value.link)),u=g(()=>ma(l.value.link)||go(l.value.link)),d=g(()=>u.value?void 0:l.value.target||(c.value?"_blank":void 0)),_=g(()=>d.value==="_blank"),h=g(()=>!c.value&&!u.value&&!_.value),m=g(()=>u.value?void 0:l.value.rel||(_.value?"noopener noreferrer":void 0)),v=g(()=>l.value.ariaLabel||l.value.text),k=g(()=>{if(n.exact)return!1;const A=Bn(r.value.locales);return A.length?A.every(y=>y!==l.value.link):l.value.link!=="/"}),E=g(()=>h.value?l.value.activeMatch?new RegExp(l.value.activeMatch).test(i.path):k.value?Hn(i.path,l.value.link):i.path===l.value.link:!1);return()=>{var F,$,M;const{text:A,icon:y,link:L}=l.value;return h.value?s(on,{to:L,"aria-label":v.value,...e,class:["nav-link",{active:E.value},e.class],onFocusout:()=>a("focusout")},()=>{var z,R,S;return((z=o.default)==null?void 0:z.call(o))||[((R=o.before)==null?void 0:R.call(o))||s(cn,{icon:y}),A,(S=o.after)==null?void 0:S.call(o)]}):s("a",{href:L,rel:m.value,target:d.value,"aria-label":v.value,...e,class:["nav-link",e.class],onFocusout:()=>a("focusout")},((F=o.default)==null?void 0:F.call(o))||[(($=o.before)==null?void 0:$.call(o))||s(cn,{icon:y}),A,n.noExternalLinkIcon?null:s(ns),(M=o.after)==null?void 0:M.call(o)])}}});const rs=T({name:"NavbarDropdownLink",props:{config:{type:Object,required:!0}},setup(n,{slots:e}){const a=q(),o=Jn(n,"config"),i=g(()=>o.value.ariaLabel||o.value.text),r=V(!1);Y(()=>a.value.path,()=>{r.value=!1});const l=c=>{c.detail===0&&(r.value=!r.value)};return()=>{var c;return s("div",{class:["dropdown-wrapper",{open:r.value}]},[s("button",{class:"dropdown-title",type:"button","aria-label":i.value,onClick:l},[((c=e.title)==null?void 0:c.call(e))||s("span",{class:"title"},[s(cn,{icon:o.value.icon}),n.config.text]),s("span",{class:"arrow"}),s("ul",{class:"nav-dropdown"},o.value.children.map((u,d)=>{const _=d===o.value.children.length-1;return s("li",{class:"dropdown-item"},"children"in u?[s("h4",{class:"dropdown-subtitle"},u.link?s(_n,{config:u,onFocusout:()=>{u.children.length===0&&_&&(r.value=!1)}}):s("span",u.text)),s("ul",{class:"dropdown-subitem-wrapper"},u.children.map((h,m)=>s("li",{class:"dropdown-subitem"},s(_n,{config:h,onFocusout:()=>{m===u.children.length-1&&_&&(r.value=!1)}}))))]:s(_n,{config:u,onFocusout:()=>{_&&(r.value=!1)}}))}))])])}}}),ps=()=>s(U,{name:"i18n"},()=>[s("path",{d:"M379.392 460.8 494.08 575.488l-42.496 102.4L307.2 532.48 138.24 701.44l-71.68-72.704L234.496 460.8l-45.056-45.056c-27.136-27.136-51.2-66.56-66.56-108.544h112.64c7.68 14.336 16.896 27.136 26.112 35.84l45.568 46.08 45.056-45.056C382.976 312.32 409.6 247.808 409.6 204.8H0V102.4h256V0h102.4v102.4h256v102.4H512c0 70.144-37.888 161.28-87.04 210.944L378.88 460.8zM576 870.4 512 1024H409.6l256-614.4H768l256 614.4H921.6l-64-153.6H576zM618.496 768h196.608L716.8 532.48 618.496 768z"})]);ps.displayName="I18nIcon";const ls=(n,e="")=>pn(n)?zn(`${e}${n}`):"children"in n?{...n,...n.link&&!_e(n.link)?zn(`${e}${n.link}`):{},children:n.children.map(a=>ls(a,`${e}${n.prefix||""}`))}:{...n,link:_e(n.link)?n.link:zn(`${e}${n.link}`).link},cs=()=>g(()=>(Z().value.navbar||[]).map(n=>ls(n))),tp=()=>{const n=un(),e=hn(),a=Zn(),o=fn(),i=Z();return g(()=>{const r=Bn(a.value.locales);if(r.length<2)return null;const{path:l,fullPath:c}=n.currentRoute.value,{navbarLocales:u}=i.value;return{text:"",ariaLabel:u==null?void 0:u.selectLangAriaLabel,children:r.map(_=>{var A,y,L;const h=((A=a.value.locales)==null?void 0:A[_])??{},m=((y=o.value.locales)==null?void 0:y[_])??{},v=h.lang||"",k=((L=m.navbarLocales)==null?void 0:L.langName)??v;let E;if(v===a.value.lang)E=l;else{const F=l.replace(e.value,_);E=n.getRoutes().some($=>$.path===F)?c.replace(l,F):m.home??_}return{text:k,link:E}})}})},ap=()=>{const n=Z(),e=g(()=>n.value.repo||null),a=g(()=>e.value?pi(e.value):null),o=g(()=>e.value?za(e.value):null),i=g(()=>a.value?n.value.repoLabel??(o.value===null?"Source":o.value):null);return g(()=>!a.value||!i.value||n.value.repoDisplay===!1?null:{type:o.value||"Source",label:i.value,link:a.value})};T({name:"LanguageDropdown",setup(){const n=tp();return()=>n.value?s("div",{class:"nav-item"},s(rs,{class:"i18n-dropdown",config:n.value},{title:()=>{var e;return s(ps,{"aria-label":(e=n.value)==null?void 0:e.ariaLabel,style:{width:"1rem",height:"1rem",verticalAlign:"middle"}})}})):null}});const sp=T({name:"NavScreenDropdown",props:{config:{type:Object,required:!0}},setup(n){const e=q(),a=Jn(n,"config"),o=g(()=>a.value.ariaLabel||a.value.text),i=V(!1);Y(()=>e.value.path,()=>{i.value=!1});const r=(l,c)=>c[c.length-1]===l;return()=>[s("button",{class:["nav-screen-dropdown-title",{active:i.value}],type:"button","aria-label":o.value,onClick:()=>{i.value=!i.value}},[s("span",{class:"title"},[s(cn,{icon:a.value.icon}),n.config.text]),s("span",{class:["arrow",i.value?"down":"end"]})]),s("ul",{class:["nav-screen-dropdown",{hide:!i.value}]},a.value.children.map(l=>s("li",{class:"dropdown-item"},"children"in l?[s("h4",{class:"dropdown-subtitle"},l.link?s(_n,{config:l,onFocusout:()=>{r(l,a.value.children)&&l.children.length===0&&(i.value=!1)}}):s("span",l.text)),s("ul",{class:"dropdown-subitem-wrapper"},l.children.map(c=>s("li",{class:"dropdown-subitem"},s(_n,{config:c,onFocusout:()=>{r(c,l.children)&&r(l,a.value.children)&&(i.value=!1)}}))))]:s(_n,{config:l,onFocusout:()=>{r(l,a.value.children)&&(i.value=!1)}}))))]}});const op=T({name:"NavScreenLinks",setup(){const n=cs();return()=>n.value.length?s("nav",{class:"nav-screen-links"},n.value.map(e=>s("div",{class:"navbar-links-item"},"children"in e?s(sp,{config:e}):s(_n,{config:e})))):null}}),us=()=>s(U,{name:"dark"},()=>s("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));us.displayName="DarkIcon";const ds=()=>s(U,{name:"light"},()=>s("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));ds.displayName="LightIcon";const Es=()=>s(U,{name:"auto"},()=>s("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Es.displayName="AutoIcon";const _s=()=>s(U,{name:"enter-fullscreen"},()=>s("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));_s.displayName="EnterFullScreenIcon";const ms=()=>s(U,{name:"cancel-fullscreen"},()=>s("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));ms.displayName="CancelFullScreenIcon";const vs=()=>s(U,{name:"outlook"},()=>[s("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);vs.displayName="OutlookIcon";const hs=Symbol.for("darkMode"),se=()=>{const n=en(hs);if(!n)throw new Error("useDarkmode() is called without provider.");return n},ip=n=>{const e=fn(),a=Ri(),o=Ga("vuepress-theme-hope-scheme","auto"),i=g(()=>e.value.darkmode||"switch"),r=g(()=>{const c=i.value;return c==="disable"?!1:c==="enable"?!0:c==="auto"?a.value:c==="toggle"?o.value==="dark":o.value==="dark"||o.value==="auto"&&a.value}),l=g(()=>{const c=i.value;return c==="switch"||c==="toggle"});n.provide(hs,{canToggle:l,config:i,isDarkmode:r,status:o}),Object.defineProperties(n.config.globalProperties,{$isDarkmode:{get:()=>r.value}})},rp=()=>{const{isDarkmode:n}=se(),e=(a=n.value)=>document.documentElement.setAttribute("data-theme",a?"dark":"light");J(()=>{Y(n,e,{immediate:!0})})};const As=T({name:"AppearanceSwitch",setup(){const{config:n,status:e}=se(),a=()=>{n.value==="switch"?e.value={light:"dark",dark:"auto",auto:"light"}[e.value]:e.value=e.value==="light"?"dark":"light"};return()=>s("button",{id:"appearance-switch",onClick:()=>a()},[s(Es,{style:{display:e.value==="auto"?"block":"none"}}),s(us,{style:{display:e.value==="dark"?"block":"none"}}),s(ds,{style:{display:e.value==="light"?"block":"none"}})])}}),pp=T({name:"AppearanceMode",setup(){const n=Z(),{canToggle:e}=se(),a=g(()=>n.value.outlookLocales.darkmode);return()=>e.value?s("div",{class:"appearance-wrapper"},[s("label",{class:"appearance-title",for:"appearance-switch"},a.value),s(As)]):null}});const lp=T({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(n){const e=(a="")=>{const o=document.documentElement.classList,i=Bn(n.themeColor).map(r=>`theme-${r}`);if(!a){localStorage.removeItem("theme"),o.remove(...i);return}o.remove(...i.filter(r=>r!==`theme-${a}`)),o.add(`theme-${a}`),localStorage.setItem("theme",a)};return J(()=>{const a=localStorage.getItem("theme");a&&e(a)}),()=>s("ul",{id:"theme-color-picker"},[s("li",s("span",{class:"theme-color",onClick:()=>e()})),...De(n.themeColor).map(([a,o])=>s("li",s("span",{style:{background:o},onClick:()=>e(a)})))])}}),cp=T({name:"ThemeColor",setup(){const n=fn(),e=Z(),a=g(()=>e.value.outlookLocales.themeColor),o=g(()=>{const{themeColor:i}=n.value;return i===!1?null:i});return()=>o.value?s("div",{class:"theme-color-wrapper"},[s("label",{class:"theme-color-title",for:"theme-color-picker"},a.value),s(lp,{themeColor:o.value})]):null}});const gs=T({name:"ToggleFullScreenButton",setup(){const n=Z(),{isSupported:e,isFullscreen:a,toggle:o}=ot(),i=g(()=>n.value.outlookLocales.fullscreen);return()=>e?s("div",{class:"full-screen-wrapper"},[s("label",{class:"full-screen-title",for:"full-screen-switch"},i.value),s("button",{class:"full-screen",id:"full-screen-switch",ariaPressed:a.value,onClick:()=>o()},a.value?s(ms):s(_s))]):null}}),Bs=T({name:"OutlookSettings",setup(){const n=fn(),e=jn(),a=g(()=>!e.value&&Boolean(n.value.themeColor)),o=g(()=>!e.value&&n.value.fullscreen);return()=>s(ke,()=>[a.value?s(cp):null,s(pp),o.value?s(gs):null])}});const up=T({name:"NavScreen",props:{show:Boolean},emits:["close"],setup(n,{emit:e,slots:a}){const o=q(),{isMobile:i}=te(),r=V(),l=it(r);return J(()=>{r.value=document.body,Y(i,c=>{!c&&n.show&&(l.value=!1,e("close"))}),Y(()=>o.value.path,()=>{l.value=!1,e("close")})}),Je(()=>{l.value=!1}),()=>s(Nn,{name:"fade",onEnter:()=>{l.value=!0},onAfterLeave:()=>{l.value=!1}},()=>{var c,u;return n.show?s("div",{id:"nav-screen"},s("div",{class:"container"},[(c=a.before)==null?void 0:c.call(a),s(op),s("div",{class:"outlook-wrapper"},s(Bs)),(u=a.after)==null?void 0:u.call(a)])):null})}});const dp=T({name:"NavbarBrand",setup(){const n=hn(),e=Zn(),a=Z(),o=g(()=>a.value.home||n.value),i=g(()=>e.value.title),r=g(()=>a.value.logo?rn(a.value.logo):null),l=g(()=>a.value.logoDark?rn(a.value.logoDark):null);return()=>s(on,{to:o.value,class:"brand"},()=>[r.value?s("img",{class:["logo",{light:Boolean(l.value)}],src:r.value,alt:i.value}):null,l.value?s("img",{class:["logo dark"],src:l.value,alt:i.value}):null,i.value?s("span",{class:["site-name",{"hide-in-pad":r.value&&a.value.hideSiteNameOnMobile!==!1}]},i.value):null])}});const Ep=T({name:"NavbarLinks",setup(){const n=cs();return()=>n.value.length?s("nav",{class:"nav-links"},[...n.value.map(e=>s("div",{class:"nav-item hide-in-mobile"},"children"in e?s(rs,{config:e}):s(_n,{config:e})))]):null}});const _p=T({name:"RepoLink",components:{BitbucketIcon:Sa,GiteeIcon:Ia,GitHubIcon:Pa,GitlabIcon:wa,SourceIcon:Ta},setup(){const n=ap();return()=>n.value?s("div",{class:"nav-item"},s("a",{class:"repo-link",href:n.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":n.value.label},s(ln(`${n.value.type}Icon`),{style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const ks=({active:n=!1},{emit:e})=>s("button",{class:["toggle-navbar-button",{"is-active":n}],"aria-label":"Toggle Navbar","aria-expanded":n,"aria-controls":"nav-screen",onClick:()=>e("toggle")},s("span",{class:"button-container"},[s("span",{class:"button-top"}),s("span",{class:"button-middle"}),s("span",{class:"button-bottom"})]));ks.displayName="ToggleNavbarButton";const pt=(n,{emit:e})=>s("button",{class:"toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>e("toggle")},s("span",{class:"icon"}));pt.displayName="ToggleSidebarButton";pt.emits=["toggle"];const mp=T({name:"OutlookButton",setup(){const{isSupported:n}=ot(),e=fn(),a=jn(),o=q(),{canToggle:i}=se(),r=V(!1),l=g(()=>!a.value&&Boolean(e.value.themeColor)),c=g(()=>!a.value&&e.value.fullscreen&&n);return Y(()=>o.value.path,()=>{r.value=!1}),()=>i.value||c.value||l.value?s("div",{class:"nav-item hide-in-mobile"},i.value&&!c.value&&!l.value?s(As):c.value&&!i.value&&!l.value?s(gs):s("button",{class:["outlook-button",{open:r.value}],tabindex:"-1",ariaHidden:!0},[s(vs),s("div",{class:"outlook-dropdown"},s(Bs))])):null}});const vp=T({name:"NavBar",emits:["toggleSidebar"],setup(n,{emit:e,slots:a}){const o=Z(),{isMobile:i}=te(),r=V(!1),l=g(()=>{const{navbarAutoHide:u="mobile"}=o.value;return u!=="none"&&(u==="always"||i.value)}),c=g(()=>o.value.navbarLayout||{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]});return()=>{var d,_,h,m,v,k;const u={Brand:s(dp),Language:null,Links:s(Ep),Repo:s(_p),Outlook:s(mp),Search:mn("Docsearch")?s(ln("Docsearch")):mn("SearchBox")?s(ln("SearchBox")):mn("SearchBox")?s(ln("SearchBox")):null};return[s("header",{class:["navbar",{"auto-hide":l.value,"hide-icon":o.value.navbarIcon===!1}],id:"navbar"},[s("div",{class:"navbar-start"},[s(pt,{onToggle:()=>{r.value&&(r.value=!1),e("toggleSidebar")}}),(d=a.startBefore)==null?void 0:d.call(a),...(c.value.start||[]).map(E=>u[E]),(_=a.startAfter)==null?void 0:_.call(a)]),s("div",{class:"navbar-center"},[(h=a.centerBefore)==null?void 0:h.call(a),...(c.value.center||[]).map(E=>u[E]),(m=a.centerAfter)==null?void 0:m.call(a)]),s("div",{class:"navbar-end"},[(v=a.endBefore)==null?void 0:v.call(a),...(c.value.end||[]).map(E=>u[E]),(k=a.endAfter)==null?void 0:k.call(a),s(ks,{active:r.value,onToggle:()=>{r.value=!r.value}})])]),s(up,{show:r.value,onClose:()=>{r.value=!1}},{before:()=>{var E;return(E=a.screenTop)==null?void 0:E.call(a)},after:()=>{var E;return(E=a.screenBottom)==null?void 0:E.call(a)}})]}}}),Un=(n,e,a=!1)=>"activeMatch"in e?new RegExp(e.activeMatch).test(n.path):tt(n,e.link)?!0:e.children&&!a?e.children.some(o=>Un(n,o)):!1,fs=(n,e)=>e.type==="group"?e.children.some(a=>a.type==="group"?fs(n,a):a.type==="page"&&Un(n,a,!0))||"prefix"in e&&tt(n,e.prefix):!1,bs=(n,e)=>n.link?s(_n,{...e,config:n}):s("p",e,[s(cn,{icon:n.icon}),n.text]),Ds=n=>{const e=kn();return n?s("ul",{class:"sidebar-sub-headers"},n.map(a=>{const o=Un(e,a,!0);return s("li",{class:"sidebar-sub-header"},[bs(a,{class:["sidebar-link","heading",{active:o}]}),Ds(a.children)])})):null},lt={"/02Image_Processing/":["详情目录",{text:"图像分类",prefix:"图像分类/",collapsible:!0,children:["图像分类",{text:"项目实战",prefix:"项目实战/",collapsible:!0,children:["基于LeNet-5的手写数字识别"]}]},"图像处理概述","几块重点知识"],"/03Computer_Vision/":["详情目录",{text:"3 D 视觉",prefix:"3D_视觉/",collapsible:!0,children:["VIO里程计","立体视觉"]},{text:"Opencv",prefix:"Opencv/",collapsible:!0,children:["opencv概述"]},{text:"机器视觉",prefix:"机器视觉/",collapsible:!0,children:["机器视觉概述"]},{text:"模式识别",prefix:"模式识别/",collapsible:!0,children:["模式识别概述"]},{text:"目标检测",prefix:"目标检测/",collapsible:!0,children:["目标检测概述"]},{text:"视觉算法",prefix:"视觉算法/",collapsible:!0,children:["企业要求"]},"岗位要求",{text:"项目",prefix:"项目/",collapsible:!0,children:["车道线检测"]}],"/04Point_Cloud_Processing/":[],"/05Optimization_Algorithm/":[],"/06SLAM/":["详情目录","SLAM概述"],"/07Math_Basic/":["详情目录"],"/08AI_Machine_Learning_Deep_Learning/":["详情目录",{text:"C N N",prefix:"CNN/",collapsible:!0,children:["CNN"]},{text:"Machine Learning",prefix:"Machine_Learning/",collapsible:!0,children:[{text:"Machine Vision",prefix:"Machine_Vision/",collapsible:!0,children:["READEME"]},"学习资源"]},{text:"人工智能知识图谱",prefix:"人工智能知识图谱/",collapsible:!0,children:["Download Machine Learning Algorithm Cheat Sheet","Keras","Matplotlib","Microsoft Azure机器学习备忘单","Numpy","PySpark","Python 3 Cheat Sheet","Scikit-Learn","Scikit-Learn算法","Scipy","TensorFlow","使用dplyr和tidyr进行数据整理","备忘单","数据可视化","数据整理","数据科学_Bokeh速查表","数据科学Python编程","机器学习算法概述","神经网络"]},{text:"机器学习",prefix:"机器学习/",collapsible:!0,children:["基本算法","数学知识","机器学习100个问题","机器学习重点知识"]},{text:"机器学习知识图谱",prefix:"机器学习知识图谱/",collapsible:!0,children:["Data_Science_Cheat_Sheet_for_BusinessLeaders","Data_Visualization_Cheat_Sheet","Importing_Datain_Python_Cheat_Sheet","Jupyter_Notebook_Cheat_Sheet","Keras_Cheat_Sheet Neural_Networks_in_Python","Matplotlib_Cheat_Sheet_Plotting_in_Python","NumPy_Cheat_Sheet_Data_Analysis_in_Python","Pandas_Cheat_Sheet_Data_Wrangling_in_Python","Pandas Cheat Sheet for Data Science in Python","Power_BI_for_Business_Intelligence_Sheet","PySpark_Cheat_Sheet_Spark_DataFrames_in_Python","PySpark_Cheat_Sheet_Spark_in_Python","Python_Data_Visualization_Bokeh_Cheat_Sheet","Python_Seaborn_Cheat_Sheet","Scikit_Learn_Cheat_Sheet_Python_Machine_Learning","SciPy_Cheat_Sheet_Linear_Algebra_in_Python","spaCy_Cheat_Sheet_Advanced_NLP_in_Python","SQL_for_Data_Science","Tidyverse_Cheat_Sheet_For_Beginners","Top_Machine_Learning_Algoritms","xts_Cheat_Sheet_Time_Series_in_R"]},"深度学习常用框架"],"/09Embedded_Development/":["详情目录"],"/10Robotics/":["详情目录"],"/11Automatic_Driving/":["详情目录",{text:"感知",prefix:"感知/",collapsible:!0,children:["感知算法概述"]},"自动驾驶框架","自动驾驶概述"],"/12C_plus_plus/":["详情目录","/12C_plus_plus/C__%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html",{text:"Cplus函数",prefix:"Cplus函数/",collapsible:!0,children:["STL Algorithms","STL Containers","STL Iterators","string相关函数"]},"/12C_plus_plus/C__%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.html","容器应用知识","查找算法",{text:"算法学习",prefix:"算法学习/",collapsible:!0,children:["vs使用leetcode","手动构建二叉树"]},"计算机基础知识","进制转换、字符串操、大数运算"],"/13Python/":["详情目录","Python个人经验"],"/14Matlab/":["详情目录","Matlab_Personal_Experience"],"/15Linux/":["NAS","Huginn","TTRSS","Docker","Linux命令大全","linux基础","详情目录",{text:"Ubuntu",prefix:"ubuntu/",collapsible:!0,children:["Ubuntu使用经验"]}],"/16ROS/":["详情目录","ROS学习笔记"],"/17Computer_Basics/":["详情目录"],"/18Data_Structure/":["详情目录",{text:"数据结构编程练习",prefix:"数据结构编程练习/",collapsible:!0,children:[{text:"代码随想录",prefix:"代码随想录/",collapsible:!0,children:["/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8.html","代码随想录算法总结(python)版本","std mmultimap","std mmultiset","std set","std unorder_map","std unorder_set","二叉树","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91%20.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%80%EF%BC%89.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%89%EF%BC%89.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%BA%8C%EF%BC%89%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8D%95%E8%B0%83%E6%A0%88.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8F%8C%E6%8C%87%E9%92%88.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%80).html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%9B%9E%E6%BA%AF.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8%EF%BC%88%E4%BA%8C%EF%BC%89.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E8%B4%AA%E5%BF%83.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E4%BA%8C%EF%BC%89.html","图知识"]},{text:"华为机试108",prefix:"华为机试108/",collapsible:!0,children:["华为机试目录","华为机试1-15","字符串","华为机试16-30","华为机试31-45","华为机试46-60","华为机试61-75","华为机试76-90","华为机试91-108"]},"leetcode算法学习"]}],"/19Network_Programming/":["详情目录"],"/20Mechanical_Engineering/":["机械个人经验","详情目录"],"/21Circuit_Electronics/":["详情目录"],"/22Signal_Processing/":["详情目录"],"/25apps/livestreaming/":["0_live_equipments","1_obs_basic","2_obs_streamfx","3_obs_plugins","4_live_effects","5_live_platforms","6_live_positioning"],"/30web/":["Site Navigation","VuePress","docsify","Comments","WebGuide","详情目录",{text:"前端设计与开发知识图谱",prefix:"前端设计与开发知识图谱/",collapsible:!0,children:["前端开发与设计"]}],"/27deploy/":["Static","VPS","GitHub","Cloudflare","DNS","详情目录"],"/24Windows/":["faq","NewSystem","QTTabBar","详情目录"],"/28LifeNotes/":["Diet","Shoppinglist","Coupon","HomeAutomation","Medical","Maintenance","Life","详情目录"],"/_blog/":["/blog/docker%E4%BD%BF%E7%94%A8.html","/blog/make%E3%80%81makefile%E3%80%81CMake%E5%92%8CCMakeLists.html","/blog/ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9apt_pip%E6%BA%90%E5%88%B0%E5%9B%BD%E5%86%85%E6%BA%90.html","/blog/%E5%AE%89%E8%A3%85anaconda%E3%80%81tensorflow%E3%80%81Pytoch.html","/blog/ubuntu%E5%88%86%E5%8C%BA%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html","/blog/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91.html","/blog/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8Bip.html"]},Oe=(n="",e="")=>ye(e)?e:`${Bo(n)}${e}`,hp=(n,e)=>{const a=q();return{type:"heading",text:n.title,link:`${a.value.path}#${n.slug}`,children:ct(n.children,e)}},ct=(n,e)=>e>0?n.map(a=>hp(a,e-1)):[],ys=n=>{const e=q();return ct(e.value.headers,n)},He=(n,e,a="")=>{const o=q(),i=(r,l=a)=>{var u;const c=pn(r)?zn(Oe(l,r)):r.link?{...r,..._e(r.link)?{}:{link:zn(Oe(l,r.link)).link}}:r;if("children"in c){const d=Oe(l,c.prefix),_=c.children==="structure"?lt[d]:c.children;return{type:"group",...c,prefix:d,children:_.map(h=>i(h,d))}}return{type:"page",...c,children:c.link===o.value.path?ct(((u=o.value.headers[0])==null?void 0:u.level)===1?o.value.headers[0].children:o.value.headers,e):[]}};return n.map(r=>i(r))},Ap=(n,e)=>{const a=q(),o=Bn(n).sort((i,r)=>r.length-i.length);for(const i of o)if(Hn(decodeURI(a.value.path),i)){const r=n[i];return r?He(r==="structure"?lt[i]:r==="heading"?ys(e):r,e,i):[]}return console.warn(`${a.value.path} is missing sidebar config.`),[]},gp=()=>{const n=hn(),e=K(),a=Z(),o=e.value.home?!1:e.value.sidebar??a.value.sidebar??"structure",i=e.value.headerDepth??a.value.headerDepth??2;return o===!1?[]:o==="heading"?ys(i):o==="structure"?He(lt[n.value],i,n.value):ge(o)?He(o,i):Xe(o)?Ap(o,i):[]},Ls=Symbol.for("sidebarItems"),Bp=()=>{const n=g(()=>gp());In(Ls,n)},ut=()=>{const n=en(Ls);if(!n)throw new Error("useSidebarItems() is called without provider.");return n};const kp=T({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(n){const e=kn();return()=>[bs(n.config,{class:["sidebar-link",`sidebar-${n.config.type}`,{active:Un(e,n.config,!0)}],exact:!0}),Ds(n.config.children)]}});const fp=T({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(n,{emit:e}){const a=kn(),o=g(()=>Un(a,n.config)),i=g(()=>Un(a,n.config,!0));return()=>{const{collapsible:r,children:l=[],icon:c,prefix:u,link:d,text:_}=n.config;return s("section",{class:"sidebar-group"},[s(r?"button":"p",{class:["sidebar-heading",{clickable:r||d,exact:i.value,active:o.value}],...r?{onClick:()=>e("toggle"),onKeydown:h=>{h.key==="Enter"&&e("toggle")}}:{}},[s(cn,{icon:c}),d?s(on,{to:d,class:"title"},()=>_):s("span",{class:"title"},_),r?s("span",{class:["arrow",n.open?"down":"end"]}):null]),n.open||!r?s(Cs,{key:u,config:l}):null])}}});const Cs=T({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(n){const e=kn(),a=V(-1),o=i=>{a.value=i===a.value?-1:i};return Y(()=>e.path,()=>{const i=n.config.findIndex(r=>fs(e,r));a.value=i},{immediate:!0,flush:"post"}),()=>s("ul",{class:"sidebar-links"},n.config.map((i,r)=>s("li",i.type==="group"?s(fp,{config:i,open:r===a.value,onToggle:()=>o(r)}):s(kp,{config:i}))))}});const bp=T({name:"SideBar",setup(n,{slots:e}){const a=kn(),o=Z(),i=ut(),r=V();return J(()=>{Y(()=>a.hash,l=>{const c=document.querySelector(`.sidebar a.sidebar-link[href="${a.path}${l}"]`);if(!c)return;const{top:u,height:d}=r.value.getBoundingClientRect(),{top:_,height:h}=c.getBoundingClientRect();_<u?c.scrollIntoView(!0):_+h>u+d&&c.scrollIntoView(!1)})}),()=>{var l,c,u;return s("aside",{class:["sidebar",{"hide-icon":o.value.sidebarIcon===!1}],id:"sidebar",ref:r},[(l=e.top)==null?void 0:l.call(e),((c=e.default)==null?void 0:c.call(e))||s(Cs,{config:i.value}),(u=e.bottom)==null?void 0:u.call(e)])}}});const dt=T({name:"CommonWrapper",props:{noNavbar:Boolean,noSidebar:Boolean},setup(n,{slots:e}){const a=un(),o=q(),i=K(),r=Z(),{isMobile:l,isWide:c}=te(),[u,d]=xt(!1),[_,h]=xt(!1),m=ut(),v=V(),k=it(v),E=V(!1),A=g(()=>n.noNavbar||i.value.navbar===!1||r.value.navbar===!1?!1:Boolean(o.value.title||r.value.logo||r.value.repo||r.value.navbar)),y=g(()=>n.noSidebar?!1:i.value.sidebar!==!1&&m.value.length!==0&&!i.value.home),L={x:0,y:0},F=S=>{L.x=S.changedTouches[0].clientX,L.y=S.changedTouches[0].clientY},$=S=>{const D=S.changedTouches[0].clientX-L.x,C=S.changedTouches[0].clientY-L.y;Math.abs(D)>Math.abs(C)*1.5&&Math.abs(D)>40&&(D>0&&L.x<=80?d(!0):d(!1))},M=g(()=>i.value.home?!1:i.value.toc||r.value.toc!==!1&&i.value.toc!==!1),z=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;let R=0;return tn("scroll",mi(()=>{const S=z();S<=58||R-40<S?E.value=!1:R+40<S&&!u.value&&(E.value=!0),R=S},300,!0)),Y(u,S=>{k.value=S}),Y(l,S=>{S||d(!1)}),J(()=>{v.value=document.body;const S=a.afterEach(()=>{d(!1)});Je(()=>{S()})}),()=>s(mn("GlobalEncrypt")?ln("GlobalEncrypt"):Ca,()=>{var S;return s("div",{class:["theme-container",{"no-navbar":!A.value,"no-sidebar":!y.value&&!(e.sidebar||e.sidebarTop||e.sidebarBottom),"has-toc":M.value,"hide-navbar":E.value,"sidebar-collapsed":!l.value&&!c.value&&_.value,"sidebar-open":l.value&&u.value},i.value.containerClass||""],onTouchStart:F,onTouchEnd:$},[A.value?s(vp,{onToggleSidebar:()=>d()},{startBefore:()=>{var D;return(D=e.navbarStartBefore)==null?void 0:D.call(e)},startAfter:()=>{var D;return(D=e.navbarStartAfter)==null?void 0:D.call(e)},centerBefore:()=>{var D;return(D=e.navbarCenterBefore)==null?void 0:D.call(e)},centerAfter:()=>{var D;return(D=e.navbarCenterAfter)==null?void 0:D.call(e)},endBefore:()=>{var D;return(D=e.navbarEndBefore)==null?void 0:D.call(e)},endAfter:()=>{var D;return(D=e.navbarEndAfter)==null?void 0:D.call(e)},screenTop:()=>{var D;return(D=e.navScreenTop)==null?void 0:D.call(e)},screenBottom:()=>{var D;return(D=e.navScreenBottom)==null?void 0:D.call(e)}}):null,s(Nn,{name:"fade"},()=>u.value?s("div",{class:"sidebar-mask",onClick:()=>d(!1)}):null),s(Nn,{name:"fade"},()=>l.value?null:s("div",{class:"toggle-sidebar-wrapper",onClick:()=>h()},s("span",{class:["arrow",_.value?"end":"start"]}))),s(bp,{},{...e.sidebar?{default:()=>{var D;return(D=e.sidebar)==null?void 0:D.call(e)}}:{},top:()=>{var D;return(D=e.sidebarTop)==null?void 0:D.call(e)},bottom:()=>{var D;return(D=e.sidebarBottom)==null?void 0:D.call(e)}}),(S=e.default)==null?void 0:S.call(e),s(ep)])})}});const Dp=T({name:"FeaturePanel",props:{items:{type:Object,default:()=>[]},header:{type:String,default:""}},setup(n){return()=>s("div",{class:"feature-panel"},[n.header?s("h2",{class:"feature-header"},n.header):null,n.items.length?s("div",{class:"feature-wrapper"},n.items.map(e=>{const a=[s("h3",[s(cn,{icon:e.icon}),s("span",{innerHTML:e.title})]),s("p",{innerHTML:e.details})];return e.link?_e(e.link)?s("a",{class:"feature-item link",href:e.link,role:"navigation","aria-label":e.title,target:"_blank"},a):s(on,{class:"feature-item link",to:e.link,role:"navigation","aria-label":e.title},()=>a):s("div",{class:"feature-item"},a)})):null])}}),G=T({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},setup(n,{slots:e}){const a=i=>{i.style.transition=`transform ${n.duration}s ease-in-out ${n.delay}s, opacity ${n.duration}s ease-in-out ${n.delay}s`,i.style.transform="translateY(-20px)",i.style.opacity="0"},o=i=>{i.style.transform="translateY(0)",i.style.opacity="1"};return()=>s(n.type==="single"?Nn:ko,{name:"drop",appear:n.appear,onAppear:a,onAfterAppear:o,onEnter:a,onAfterEnter:o,onBeforeLeave:a},()=>{var i;return(i=e.default)==null?void 0:i.call(e)})}});const yp=T({name:"HeroInfo",setup(n,{slots:e}){const a=K(),o=Zn(),i=g(()=>a.value.heroText===!1?!1:a.value.heroText||o.value.title||"Hello"),r=g(()=>a.value.tagline===!1?!1:a.value.tagline||o.value.description||"Welcome to your VuePress site"),l=g(()=>a.value.heroImage?rn(a.value.heroImage):null),c=g(()=>a.value.heroImageDark?rn(a.value.heroImageDark):null),u=g(()=>a.value.heroAlt||i.value||"hero"),d=g(()=>a.value.actions??[]);return()=>{var _,h;return s("header",{class:"hero-info-wrapper"},[((_=e.heroImage)==null?void 0:_.call(e))||s(G,{appear:!0,type:"group"},()=>[l.value?s("img",{key:"light",class:{light:c.value},src:l.value,alt:u.value}):null,c.value?s("img",{key:"dark",class:"dark",src:c.value,alt:u.value}):null]),((h=e.heroInfo)==null?void 0:h.call(e))||s("div",{class:"hero-info"},[i.value?s(G,{appear:!0,delay:.04},()=>s("h1",{id:"main-title"},i.value)):null,r.value?s(G,{appear:!0,delay:.08},()=>s("p",{class:"description"},r.value)):null,d.value.length?s(G,{appear:!0,delay:.12},()=>s("p",{class:"actions"},d.value.map(m=>s(_n,{class:["action-button",m.type||"default"],config:m,noExternalLinkIcon:!0})))):null])])}}}),oe=({custom:n})=>s(ya,{class:["theme-hope-content",{custom:n}]});oe.displayName="MarkdownContent";oe.props={custom:Boolean};const Lp=T({name:"HopePage",setup(n,{slots:e}){const a=jn(),o=K(),i=g(()=>{const{features:r}=o.value;return ge(r)?r.some(l=>!("items"in l))?[{items:r}]:r:[]});return()=>{var r,l,c;return s("main",{class:["home project",{pure:a.value}],id:"main-content","aria-labelledby":o.value.heroText===null?void 0:"main-title"},[(r=e.top)==null?void 0:r.call(e),s(yp),i.value.map(({header:u="",items:d},_)=>s(G,{appear:!0,delay:.16+_*.08},()=>s(Dp,{header:u,items:d}))),(l=e.center)==null?void 0:l.call(e),s(G,{appear:!0,delay:.16+i.value.length*.08},()=>s(oe)),(c=e.bottom)==null?void 0:c.call(e)])}}}),Cp=(n,e)=>{const a=n.replace(e,"/").split("/"),o=[];let i=nt(e);return a.forEach((r,l)=>{l!==a.length-1?(i+=`${r}/`,o.push(i)):r!==""&&(i+=r,o.push(i))}),o};const Pp=T({name:"BreadCrumb",setup(){const n=un(),e=q(),a=hn(),o=K(),i=Z(),r=V([]),l=g(()=>(o.value.breadcrumb||o.value.breadcrumb!==!1&&i.value.breadcrumb!==!1)&&r.value.length>1),c=g(()=>o.value.breadcrumbIcon||o.value.breadcrumbIcon!==!1&&i.value.breadcrumbIcon!==!1),u=()=>{const d=n.getRoutes(),_=Cp(e.value.path,a.value).map(h=>{const m=d.find(v=>v.path===h);if(m){const{meta:v,path:k}=ne(n,m.path),E=v.s||v.t;if(E)return{title:E,icon:v.i,path:k}}return null}).filter(h=>h!==null);_.length>1&&(r.value=_)};return J(()=>{u(),Y(()=>e.value.path,u)}),()=>s("nav",{class:["breadcrumb",{disable:!l.value}]},l.value?s("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},r.value.map((d,_)=>s("li",{class:{"is-active":r.value.length-1===_},property:"itemListElement",typeof:"ListItem"},[s(on,{to:d.path,property:"item",typeof:"WebPage"},()=>[c.value?s(cn,{icon:d.icon}):null,s("span",{property:"name"},d.title||"Unknown")]),s("meta",{property:"position",content:_+1})]))):[])}});const sa=n=>n===!1?!1:pn(n)?zn(n,!0):Xe(n)?n:null,Ue=(n,e,a)=>{const o=n.findIndex(i=>i.link===e);if(o!==-1){const i=n[o+a];return i!=null&&i.link?i:null}for(const i of n)if(i.children){const r=Ue(i.children,e,a);if(r)return r}return null},wp=T({name:"PageNav",setup(){const n=Z(),e=K(),a=ut(),o=q(),i=ae(),r=g(()=>{const c=sa(e.value.prev);return c===!1?null:c||(n.value.prevLink===!1?null:Ue(a.value,o.value.path,-1))}),l=g(()=>{const c=sa(e.value.next);return c===!1?null:c||(n.value.nextLink===!1?null:Ue(a.value,o.value.path,1))});return tn("keydown",c=>{c.altKey&&(c.key==="ArrowRight"?l.value&&(i(l.value.link),c.preventDefault()):c.key==="ArrowLeft"&&r.value&&(i(r.value.link),c.preventDefault()))}),()=>r.value||l.value?s("nav",{class:"page-nav"},[r.value?s(_n,{class:"prev",config:r.value},()=>{var c,u;return[s("div",{class:"hint"},[s("span",{class:"arrow start"}),n.value.metaLocales.prev]),s("div",{class:"link"},[s(cn,{icon:(c=r.value)==null?void 0:c.icon}),(u=r.value)==null?void 0:u.text])]}):null,l.value?s(_n,{class:"next",config:l.value},()=>{var c,u;return[s("div",{class:"hint"},[n.value.metaLocales.next,s("span",{class:"arrow end"})]),s("div",{class:"link"},[(c=l.value)==null?void 0:c.text,s(cn,{icon:(u=l.value)==null?void 0:u.icon})])]}):null]):null}}),Ps=()=>s(U,{name:"author"},()=>s("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Ps.displayName="AuthorIcon";const ws=()=>s(U,{name:"calendar"},()=>s("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));ws.displayName="CalendarIcon";const Is=()=>s(U,{name:"category"},()=>s("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Is.displayName="CategoryIcon";const Ss=()=>s(U,{name:"eye"},()=>s("path",{d:"M992 512.096c0-5.76-.992-10.592-1.28-11.136-.192-2.88-1.152-8.064-2.08-10.816-.256-.672-.544-1.376-.832-2.08-.48-1.568-1.024-3.104-1.6-4.32C897.664 290.112 707.104 160 512 160c-195.072 0-385.632 130.016-473.76 322.592-1.056 2.112-1.792 4.096-2.272 5.856a55.512 55.512 0 00-.64 1.6c-1.76 5.088-1.792 8.64-1.632 7.744-.832 3.744-1.568 11.168-1.568 11.168-.224 2.272-.224 4.032.032 6.304 0 0 .736 6.464 1.088 7.808.128 1.824.576 4.512 1.12 6.976h-.032c.448 2.08 1.12 4.096 1.984 6.08.48 1.536.992 2.976 1.472 4.032C126.432 733.856 316.992 864 512 864c195.136 0 385.696-130.048 473.216-321.696 1.376-2.496 2.24-4.832 2.848-6.912.256-.608.48-1.184.672-1.728 1.536-4.48 1.856-8.32 1.728-8.32l-.032.032c.608-3.104 1.568-7.744 1.568-13.28zM512 672c-88.224 0-160-71.776-160-160s71.776-160 160-160 160 71.776 160 160-71.776 160-160 160z"}));Ss.displayName="EyeIcon";const Ts=()=>s(U,{name:"fire"},()=>s("path",{d:"M726.4 201.6c-12.8-9.6-28.8-6.4-38.4 0-9.6 9.6-16 25.6-9.6 38.4 6.4 12.8 9.6 28.8 12.8 44.8C604.8 83.2 460.8 38.4 454.4 35.2c-9.6-3.2-22.4 0-28.8 6.4-9.6 6.4-12.8 19.2-9.6 28.8 12.8 86.4-25.6 188.8-115.2 310.4-6.4-25.6-16-51.2-32-80-9.6-9.6-22.4-16-35.2-12.8-16 3.2-25.6 12.8-25.6 28.8-3.2 48-25.6 92.8-51.2 140.8C134.4 499.2 112 544 102.4 592c-32 150.4 99.2 329.6 233.6 380.8 9.6 3.2 19.2 6.4 32 9.6-25.6-19.2-41.6-51.2-48-96C294.4 691.2 505.6 640 515.2 460.8c153.6 105.6 224 336 137.6 505.6 3.2 0 6.4-3.2 9.6-3.2 0 0 3.2 0 3.2-3.2 163.2-89.6 252.8-208 259.2-345.6 16-211.2-163.2-390.4-198.4-412.8z"}));Ts.displayName="FireIcon";const Os=()=>s(U,{name:"print"},()=>s("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Os.displayName="PrintIcon";const Fs=()=>s(U,{name:"tag"},()=>s("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Fs.displayName="TagIcon";const Vs=()=>s(U,{name:"timer"},()=>s("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Vs.displayName="TimerIcon";const Ms=()=>s(U,{name:"word"},()=>[s("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),s("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Ms.displayName="WordIcon";const Cn=()=>{const n=Z();return g(()=>n.value.metaLocales)},xs={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}},Ip={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},Sp=({docsRepo:n,docsBranch:e,docsDir:a,filePathRelative:o,editLinkPattern:i})=>{if(!o)return null;const r=za(n);let l;return i?l=i:r!==null&&(l=Ip[r]),l?l.replace(/:repo/,Fn(n)?n:`https://github.com/${n}`).replace(/:branch/,e).replace(/:path/,Ea(`${nt(a)}/${o}`)):null},Tp=()=>{const n=Z(),e=q(),a=K();return g(()=>{const{repo:o,docsRepo:i=o,docsBranch:r="main",docsDir:l="",editLink:c,editLinkPattern:u=""}=n.value;if(!(a.value.editLink??c??!0)||!i)return null;const _=Sp({docsRepo:i,docsBranch:r,docsDir:l,editLinkPattern:u,filePathRelative:e.value.filePathRelative});return _?{text:n.value.metaLocales.editLink,link:_}:null})},Op=()=>{const n=Zn(),e=Z(),a=q(),o=K();return g(()=>{var l,c;return!(o.value.lastUpdated??e.value.lastUpdated??!0)||!((l=a.value.git)!=null&&l.updatedTime)?null:new Date((c=a.value.git)==null?void 0:c.updatedTime).toLocaleString(n.value.lang)})},Fp=()=>{const n=Z(),e=q(),a=K();return g(()=>{var i;return a.value.contributors??n.value.contributors??!0?((i=e.value.git)==null?void 0:i.contributors)??null:null})};const Vp=T({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0},pure:Boolean},setup(n){const e=Cn();return()=>n.author.length?s("span",{class:"page-author-info","aria-label":`${e.value.author}${n.pure?"":"🖊"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[s(Ps),s("span",n.author.map(a=>a.url?s("a",{class:"page-author-item",href:a.url,target:"_blank",rel:"noopener noreferrer"},a.name):s("span",{class:"page-author-item"},a.name))),s("span",{property:"author",content:n.author.map(a=>a.name).join(", ")})]):null}});const Mp=T({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0},pure:Boolean},setup(n){const e=un(),a=q(),o=Cn(),i=(r,l="")=>{l&&a.value.path!==l&&(r.preventDefault(),e.push(l))};return()=>n.category.length?s("span",{class:"page-category-info","aria-label":`${o.value.category}${n.pure?"":"🌈"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[s(Is),...n.category.map(({name:r,path:l})=>s("span",{class:["page-category-item",{[`category${fe(r,9)}`]:!n.pure,clickable:l}],role:l?"navigation":"",onClick:c=>i(c,l)},r)),s("meta",{property:"articleSection",content:n.category.map(({name:r})=>r).join(",")})]):null}}),xp=T({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""},pure:Boolean},setup(n){const e=Xn(),a=Cn();return()=>{var o,i;return n.date?s("span",{class:"page-date-info","aria-label":`${a.value.date}${n.pure?"":"📅"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[s(ws),s("span",s(ke,()=>{var r;return n.localizedDate||((r=n.date.value)==null?void 0:r.toLocaleDateString(e.value))})),s("meta",{property:"datePublished",content:((i=(o=n.date)==null?void 0:o.value)==null?void 0:i.toISOString())||""})]):null}}});const Rp=T({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(n){const e=Cn();return()=>n.isOriginal?s("span",{class:"page-original-info"},e.value.origin):null}}),$p=T({name:"PageViewInfo",inheritAttrs:!1,props:{pageview:{type:[Boolean,String],default:!1},pure:Boolean},setup(n){const e=kn(),a=Cn(),o=V(),i=V(0);return Ui(o,()=>{const r=o.value.textContent;r&&!isNaN(Number(r))&&(i.value=Number(r))},{childList:!0}),()=>n.pageview?s("span",{class:"page-pageview-info","aria-label":`${a.value.views}${n.pure?"":"🔢"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[s(i.value<1e3?Ss:Ts),s("span",{ref:o,class:"waline-pageview-count",id:"ArtalkPV","data-path":pn(n.pageview)?n.pageview:rn(e.path)},"...")]):null}}),zp=T({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},pure:Boolean},setup(n){const e=Cn(),a=Vn(xs),o=g(()=>{if(!n.readingTime)return null;const{minutes:i}=n.readingTime;return i<1?{text:a.value.less1Minute,time:"PT1M"}:{text:a.value.time.replace("$time",Math.round(i).toString()),time:`PT${Math.round(i)}M`}});return()=>o.value?s("span",{class:"page-reading-time-info","aria-label":`${e.value.readingTime}${n.pure?"":"⌛"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[s(Vs),s("span",o.value.text),s("meta",{property:"timeRequired",content:o.value.time})]):null}});const Np=T({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]},pure:Boolean},setup(n){const e=un(),a=q(),o=Cn(),i=(r,l="")=>{l&&a.value.path!==l&&(r.preventDefault(),e.push(l))};return()=>n.tag.length?s("span",{class:"page-tag-info","aria-label":`${o.value.tag}${n.pure?"":"🏷"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[s(Fs),...n.tag.map(({name:r,path:l})=>s("span",{class:["page-tag-item",{[`tag${fe(r,9)}`]:!n.pure,clickable:l}],role:l?"navigation":"",onClick:c=>i(c,l)},r)),s("meta",{property:"keywords",content:n.tag.map(({name:r})=>r).join(",")})]):null}}),Hp=T({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},pure:Boolean},setup(n){const e=Cn(),a=Vn(xs),o=g(()=>{var r;return(r=n.readingTime)==null?void 0:r.words.toString()}),i=g(()=>a.value.word.replace("$word",o.value||""));return()=>o.value?s("span",{class:"page-word-info","aria-label":`${e.value.words}${n.pure?"":"🔠"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[s(Ms),s("span",i.value),s("meta",{property:"wordCount",content:o.value})]):null}});const Rs=T({name:"PageInfo",components:{AuthorInfo:Vp,CategoryInfo:Mp,DateInfo:xp,OriginalInfo:Rp,PageViewInfo:$p,ReadingTimeInfo:zp,TagInfo:Np,WordInfo:Hp},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(n){const e=jn();return()=>n.items?s("div",{class:"page-info"},n.items.map(a=>s(ln(`${a}Info`),{...n.info,pure:e.value}))):null}});const Up=T({name:"PageTitle",setup(){const n=q(),e=K(),a=Z(),{info:o,items:i}=Xr();return()=>s("div",{class:"page-title"},[s("h1",[a.value.titleIcon===!1?null:s(cn,{icon:e.value.icon}),n.value.title]),s(Rs,{info:o.value,...i.value===null?{}:{items:i.value}}),s("hr")])}}),$s=()=>s(U,{name:"edit"},()=>[s("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),s("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);$s.displayName="EditIcon";const Zp=T({name:"PageMeta",setup(){const n=Z(),e=Tp(),a=Op(),o=Fp();return()=>{const{metaLocales:i}=n.value;return s("footer",{class:"page-meta"},[e.value?s("div",{class:"meta-item edit-link"},s(_n,{class:"label",config:e.value},{before:()=>s($s)})):null,s("div",{class:"meta-item git-info"},[a.value?s("div",{class:"update-time"},[s("span",{class:"label"},`${i.lastUpdated}: `),s(ke,()=>s("span",{class:"info"},a.value))]):null,o.value&&o.value.length?s("div",{class:"contributors"},[s("span",{class:"label"},`${i.contributors}: `),o.value.map(({email:r,name:l},c)=>[s("span",{class:"contributor",title:`email: ${r}`},l),c!==o.value.length-1?",":""])]):null])])}}});const jp=T({name:"PrintButton",setup(){const n=fn(),e=Z();return()=>n.value.print===!1?null:s("button",{class:"print-button",title:e.value.metaLocales.print,onClick:()=>{window.print()}},s(Os))}});const Wp=({title:n,level:e,slug:a})=>s(on,{to:`#${a}`,class:["toc-link",`level${e}`]},()=>n),Ze=(n,e)=>{const a=kn();return n.length&&e>0?s("ul",{class:"toc-list"},n.map(o=>[s("li",{class:["toc-item",{active:tt(a,`#${o.slug}`)}]},Wp(o)),Ze(o.children,e-1)])):null},zs=T({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},setup(n,{slots:e}){const a=kn(),o=q(),i=Cn(),r=V(),l=c=>{var u;(u=r.value)==null||u.scrollTo({top:c,behavior:"smooth"})};return J(()=>{Y(()=>a.hash,c=>{if(r.value){const u=document.querySelector(`#toc a.toc-link[href$="${c}"]`);if(!u)return;const{top:d,height:_}=r.value.getBoundingClientRect(),{top:h,height:m}=u.getBoundingClientRect();h<d?l(r.value.scrollTop+h-d):h+m>d+_&&l(r.value.scrollTop+h+m-d-_)}})}),()=>{var u,d;const c=n.items.length?Ze(n.items,n.headerDepth):o.value.headers?Ze(o.value.headers,n.headerDepth):null;return c?s("div",{class:"toc-place-holder"},[s("aside",{id:"toc"},[(u=e.before)==null?void 0:u.call(e),s("div",{class:"toc-header"},[i.value.toc,s(jp)]),s("div",{class:"toc-wrapper",ref:r},c),(d=e.after)==null?void 0:d.call(e)])]):null}}});const Gp=T({name:"NormalPage",setup(n,{slots:e}){const a=K(),{isDarkmode:o}=se(),i=Z(),r=g(()=>a.value.toc||a.value.toc!==!1&&i.value.toc!==!1);return()=>s("main",{class:"page",id:"main-content"},s(mn("LocalEncrypt")?ln("LocalEncrypt"):Ca,()=>{var l,c,u,d;return[(l=e.top)==null?void 0:l.call(e),s(Pp),s(Up),r.value?s(zs,{headerDepth:a.value.headerDepth??i.value.headerDepth??2},{before:()=>{var _;return(_=e.tocBefore)==null?void 0:_.call(e)},after:()=>{var _;return(_=e.tocAfter)==null?void 0:_.call(e)}}):null,(c=e.contentBefore)==null?void 0:c.call(e),s(oe),(u=e.contentAfter)==null?void 0:u.call(e),s(Zp),s(wp),mn("CommentService")?s(ln("CommentService"),{darkmode:o.value}):null,(d=e.bottom)==null?void 0:d.call(e)]}))}});const Et=T({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(n){const e=q(),a=Z(),o=V(),i=({target:r})=>{const l=document.querySelector(r.hash);if(l){const c=()=>{l.removeAttribute("tabindex"),l.removeEventListener("blur",c)};l.setAttribute("tabindex","-1"),l.addEventListener("blur",c),l.focus(),window.scrollTo(0,0)}};return J(()=>{Y(()=>e.value.path,()=>o.value.focus())}),()=>[s("span",{ref:o,tabindex:"-1"}),s("a",{href:`#${n.content}`,class:"skip-link sr-only",onClick:i},a.value.routeLocales.skipToContent)]}});const qp=T({name:"FadeSlideY",setup(n,{slots:e}){const{resolve:a,pending:o}=is();return()=>s(Nn,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:a,onBeforeLeave:o},()=>{var i;return(i=e.default)==null?void 0:i.call(e)})}}),Qp=T({name:"Layout",setup(){const n=fn(),e=Z(),a=q(),o=K(),{isMobile:i}=te(),r=g(()=>{var l,c;return((l=e.value.blog)==null?void 0:l.sidebarDisplay)||((c=n.value.blog)==null?void 0:c.sidebarDisplay)||"mobile"});return()=>[s(Et),s(dt,{},{default:()=>o.value.home?s(Lp):s(qp,()=>s(Gp,{key:a.value.path})),...r.value!=="none"?{navScreenBottom:()=>s(ln("BloggerInfo"))}:{},...!i.value&&r.value==="always"?{sidebar:()=>s(ln("BloggerInfo"))}:{}})]}});const Yp=T({name:"NotFoundHint",setup(){const n=Z(),e=()=>{const a=n.value.routeLocales.notFoundMsg;return a[Math.floor(Math.random()*a.length)]};return()=>s("div",{class:"not-found-hint"},[s("p",{class:"error-code"},"404"),s("h1",{class:"error-title"},n.value.routeLocales.notFoundTitle),s("p",{class:"error-hint"},e())])}});const Kp=T({name:"NotFound",setup(n,{slots:e}){const a=hn(),o=Z(),{navigate:i}=fo({to:o.value.home??a.value});return()=>[s(Et),s(dt,{noSidebar:!0},()=>{var r;return s("main",{class:"page not-found",id:"main-content"},((r=e.default)==null?void 0:r.call(e))||[s(Yp),s("div",{class:"actions"},[s("button",{class:"action-button",onClick:()=>{window.history.go(-1)}},o.value.routeLocales.back),s("button",{class:"action-button",onClick:()=>i()},o.value.routeLocales.home)])])})]}});const Jp={GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>'},Xp={category:{"/":{path:"/category/",map:{头脑驿站:{path:"/category/%E5%A4%B4%E8%84%91%E9%A9%BF%E7%AB%99/",keys:["v-cbac378e"]},传感器:{path:"/category/%E4%BC%A0%E6%84%9F%E5%99%A8/",keys:["v-5f23e614","v-fcb74944"]},图像处理:{path:"/category/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/",keys:["v-71abbcb8","v-70468548"]},计算机视觉:{path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/",keys:["v-b5397e12","v-43e0343a","v-2dc68459","v-3b374fed","v-458ac3fc","v-34aaaefc","v-168d6ffc"]},SLAM:{path:"/category/slam/",keys:["v-f324007c"]},人工智能:{path:"/category/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/",keys:["v-a08b6ee0"]},自动驾驶:{path:"/category/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/",keys:["v-a85882fc","v-8811a470"]},"C plus":{path:"/category/c-plus/",keys:["v-70b4f572","v-0cb8adde","v-6661285a","v-38689776","v-34885982","v-683f08d8","v-68ce8cab"]},"C++":{path:"/category/c__/",keys:["v-3c4f39c8","v-4b876903","v-fd0c12b2","v-35992c28"]},Python:{path:"/category/python/",keys:["v-216f4be0"]},Matlab:{path:"/category/matlab/",keys:["v-6960f508"]},软件:{path:"/category/%E8%BD%AF%E4%BB%B6/",keys:["v-0038f2fb","v-090c59bd","v-49fdddb7"]},个人经验:{path:"/category/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C/",keys:["v-122a55c4","v-968482f4"]},linux:{path:"/category/linux/",keys:["v-3ac441f0","v-6d97b4e7","v-25397ed8","v-1f2626a6","v-158fc2d0","v-b8c93872"]},算能:{path:"/category/%E7%AE%97%E8%83%BD/",keys:["v-dc60b056"]},Cplus:{path:"/category/cplus/",keys:["v-080b3415"]},工具:{path:"/category/%E5%B7%A5%E5%85%B7/",keys:["v-0f95e42c","v-2a6722dc","v-d42be1fe","v-3be238de","v-7577c576","v-13093ca8","v-3a5c1610"]},前端开发:{path:"/category/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/",keys:["v-428ff05c"]}}}},tag:{"/":{path:"/tag/",map:{技巧:{path:"/tag/%E6%8A%80%E5%B7%A7/",keys:["v-cbac378e"]},问题:{path:"/tag/%E9%97%AE%E9%A2%98/",keys:["v-cbac378e"]},相机:{path:"/tag/%E7%9B%B8%E6%9C%BA/",keys:["v-5f23e614"]},硬件:{path:"/tag/%E7%A1%AC%E4%BB%B6/",keys:["v-5f23e614"]},图像处理:{path:"/tag/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/",keys:["v-5f23e614","v-71abbcb8","v-70468548"]},算法:{path:"/tag/%E7%AE%97%E6%B3%95/",keys:["v-b5397e12","v-f324007c","v-a08b6ee0","v-a85882fc","v-70b4f572","v-0cb8adde","v-6661285a","v-3c4f39c8","v-38689776","v-34885982","v-216f4be0","v-6960f508","v-4b876903","v-0038f2fb","v-122a55c4","v-968482f4","v-8811a470","v-080b3415","v-fd0c12b2","v-683f08d8","v-68ce8cab","v-35992c28","v-090c59bd","v-49fdddb7","v-428ff05c","v-71abbcb8","v-70468548","v-43e0343a","v-fcb74944","v-2dc68459","v-3b374fed","v-458ac3fc","v-34aaaefc","v-168d6ffc"]},求职:{path:"/tag/%E6%B1%82%E8%81%8C/",keys:["v-43e0343a"]},优化方法:{path:"/tag/%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/",keys:["v-b5397e12"]},SLAM:{path:"/tag/slam/",keys:["v-f324007c"]},深度学习:{path:"/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/",keys:["v-a08b6ee0"]},感知:{path:"/tag/%E6%84%9F%E7%9F%A5/",keys:["v-a85882fc","v-8811a470"]},"C plus":{path:"/tag/c-plus/",keys:["v-70b4f572","v-0cb8adde","v-6661285a","v-38689776","v-34885982","v-683f08d8","v-68ce8cab"]},"C++":{path:"/tag/c__/",keys:["v-3c4f39c8","v-fd0c12b2","v-35992c28"]},Python:{path:"/tag/python/",keys:["v-216f4be0"]},Matlab:{path:"/tag/matlab/",keys:["v-6960f508"]},linux:{path:"/tag/linux/",keys:["v-dc60b056","v-4b876903"]},vscode:{path:"/tag/vscode/",keys:["v-0038f2fb","v-090c59bd","v-49fdddb7"]},软开:{path:"/tag/%E8%BD%AF%E5%BC%80/",keys:["v-122a55c4","v-968482f4"]},docker:{path:"/tag/docker/",keys:["v-3ac441f0","v-dc60b056","v-1f2626a6","v-b8c93872"]},cmake:{path:"/tag/cmake/",keys:["v-6d97b4e7"]},make:{path:"/tag/make/",keys:["v-6d97b4e7"]},分区:{path:"/tag/%E5%88%86%E5%8C%BA/",keys:["v-25397ed8"]},交叉编译:{path:"/tag/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/",keys:["v-1f2626a6"]},ip:{path:"/tag/ip/",keys:["v-158fc2d0"]},anaconda:{path:"/tag/anaconda/",keys:["v-b8c93872"]},传感器:{path:"/tag/%E4%BC%A0%E6%84%9F%E5%99%A8/",keys:["v-fcb74944"]},机器人:{path:"/tag/%E6%9C%BA%E5%99%A8%E4%BA%BA/",keys:["v-fcb74944"]},双目视觉:{path:"/tag/%E5%8F%8C%E7%9B%AE%E8%A7%86%E8%A7%89/",keys:["v-2dc68459","v-3b374fed","v-34aaaefc","v-168d6ffc"]},里程计:{path:"/tag/%E9%87%8C%E7%A8%8B%E8%AE%A1/",keys:["v-2dc68459","v-3b374fed"]},Opencv:{path:"/tag/opencv/",keys:["v-458ac3fc"]},机器视觉:{path:"/tag/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/",keys:["v-34aaaefc","v-168d6ffc"]},Cplus:{path:"/tag/cplus/",keys:["v-080b3415"]},直播:{path:"/tag/%E7%9B%B4%E6%92%AD/",keys:["v-0f95e42c","v-2a6722dc","v-d42be1fe","v-3be238de","v-7577c576","v-13093ca8","v-3a5c1610"]},OBS:{path:"/tag/obs/",keys:["v-2a6722dc","v-d42be1fe","v-3be238de"]},web:{path:"/tag/web/",keys:["v-428ff05c"]}}}}},nl={article:{"/":{path:"/article/",keys:["v-267bd09c","v-1b6f6622","v-73fd881e","v-1c922e62","v-14c29da6","v-08d39477","v-ce610fb2","v-47a7673e","v-08ca3814","v-25e12d9b","v-54bd8ca5","v-409dbff8","v-67b64117","v-983620b4","v-55c868b4","v-b1fac674","v-0a266134","v-3b9795f5","v-61953c47","v-4c82cb4a","v-6a8e50a4","v-76997a97","v-41edfa86","v-6be267ce","v-0716ff7e","v-44f90a36","v-e2eb686a","v-2fa9cbc7","v-0b5295fc","v-758df17a","v-5aad6466","v-562138db","v-2810f732","v-8b564fc6","v-0c685ccf","v-20fdbfbe","v-126b6205","v-acd854b2","v-4b524440","v-afb5c98c","v-2fc0ab4f","v-7b000337","v-5e4552a4","v-3e3e22f8","v-50290dce","v-4cbf5c90","v-4955ab52","v-45ebfa14","v-428248d6","v-3f189798","v-b6ed6200","v-556d5707","v-ab6c903c","v-f1cbec06","v-469c82f9","v-4561cc1a","v-4a0ba51f","v-afccdf7a","v-d4bc44f4","v-0df8921e","v-2a5173cc","v-59cc65be","v-58a92c3c","v-992e20ec","v-973c7be4","v-54d76c1e","v-e796fda4","v-3a27e90a","v-b52aa0f6","v-09aa8acc","v-48bbaf63","v-ae41da2c","v-4833ebdb","v-6952f1b6","v-f0cbb6f6","v-b1bf1050","v-2d5994ec","v-2af9f3cf","v-4d9679e6","v-ec36b34c","v-2d03f0c6","v-6805b4bb","v-336a38f6","v-def94006","v-58116dc6","v-8dab9cb2","v-46da7670","v-5e173d0c","v-3bd3ff2b","v-7f5facd4","v-f5428c04","v-dc7629d2","v-23bbef8c","v-4d72f195","v-1736b1a8","v-4ae7f9a0","v-e6e27064","v-5d588d29","v-41eb2fad","v-7aafd3e1","v-a36af388","v-282370f6","v-14eff5b4","v-2508f406","v-16d7eae4","v-06b354bd","v-fcd49ea4","v-60368e60","v-cc837190","v-0f95e42c","v-2a6722dc","v-d42be1fe","v-3be238de","v-7577c576","v-13093ca8","v-3a5c1610","v-ccaa603c","v-5077b2a8","v-0fb6d2aa","v-5941f6a8","v-7652e8ab","v-193410a6","v-5bda9b9c","v-954c8e4e","v-2fa3514c","v-cfd7a768","v-09974639","v-5da217d9","v-063e92f9","v-54376779","v-0c2cc5c3","v-55e0227d","v-c391adde","v-decc39fe","v-4b65808a","v-30fe8b7c","v-29cabcf7","v-0cef7c3e","v-35a63887","v-904008be","v-3dffc5f0","v-1141bba7","v-0251d77a","v-b416d81a","v-769589df","v-375de289","v-9b426004","v-3fc2abd2","v-c4b5c206","v-4eb7a968","v-23ff6a91","v-f98b864a","v-11571ff2","v-52024d87","v-e633b5dc","v-64dd5ab2","v-08752a32","v-395aae57","v-740cffbe","v-82e57f90","v-2d1ff9b6","v-8daa1a0e","v-3ac441f0","v-6d97b4e7","v-25397ed8","v-dc60b056","v-1f2626a6","v-158fc2d0","v-b8c93872","v-b5397e12","v-f324007c","v-a08b6ee0","v-a85882fc","v-70b4f572","v-0cb8adde","v-6661285a","v-3c4f39c8","v-38689776","v-34885982","v-216f4be0","v-6960f508","v-4b876903","v-0038f2fb","v-122a55c4","v-968482f4","v-8811a470","v-080b3415","v-fd0c12b2","v-683f08d8","v-68ce8cab","v-35992c28","v-090c59bd","v-49fdddb7","v-428ff05c","v-cbac378e","v-5f23e614","v-71abbcb8","v-70468548","v-43e0343a","v-fcb74944","v-2dc68459","v-3b374fed","v-458ac3fc","v-34aaaefc","v-168d6ffc"]}},star:{"/":{path:"/star/",keys:[]}},timeline:{"/":{path:"/timeline/",keys:["v-267bd09c","v-1b6f6622","v-73fd881e","v-1c922e62","v-14c29da6","v-08d39477","v-ce610fb2","v-47a7673e","v-08ca3814","v-25e12d9b","v-54bd8ca5","v-409dbff8","v-67b64117","v-983620b4","v-55c868b4","v-b1fac674","v-0a266134","v-3b9795f5","v-61953c47","v-4c82cb4a","v-6a8e50a4","v-76997a97","v-41edfa86","v-6be267ce","v-0716ff7e","v-44f90a36","v-e2eb686a","v-2fa9cbc7","v-0b5295fc","v-758df17a","v-5aad6466","v-562138db","v-2810f732","v-8b564fc6","v-0c685ccf","v-20fdbfbe","v-126b6205","v-acd854b2","v-4b524440","v-afb5c98c","v-2fc0ab4f","v-7b000337","v-5e4552a4","v-3e3e22f8","v-50290dce","v-4cbf5c90","v-4955ab52","v-45ebfa14","v-428248d6","v-3f189798","v-b6ed6200","v-556d5707","v-ab6c903c","v-f1cbec06","v-469c82f9","v-4561cc1a","v-4a0ba51f","v-afccdf7a","v-d4bc44f4","v-0df8921e","v-2a5173cc","v-59cc65be","v-58a92c3c","v-992e20ec","v-973c7be4","v-54d76c1e","v-e796fda4","v-3a27e90a","v-b52aa0f6","v-09aa8acc","v-48bbaf63","v-ae41da2c","v-4833ebdb","v-6952f1b6","v-f0cbb6f6","v-b1bf1050","v-2d5994ec","v-2af9f3cf","v-4d9679e6","v-ec36b34c","v-2d03f0c6","v-6805b4bb","v-336a38f6","v-def94006","v-58116dc6","v-8dab9cb2","v-46da7670","v-5e173d0c","v-3bd3ff2b","v-7f5facd4","v-f5428c04","v-dc7629d2","v-23bbef8c","v-4d72f195","v-1736b1a8","v-4ae7f9a0","v-e6e27064","v-5d588d29","v-41eb2fad","v-7aafd3e1","v-a36af388","v-282370f6","v-14eff5b4","v-2508f406","v-16d7eae4","v-06b354bd","v-fcd49ea4","v-60368e60","v-cc837190","v-0f95e42c","v-2a6722dc","v-d42be1fe","v-3be238de","v-7577c576","v-13093ca8","v-3a5c1610","v-ccaa603c","v-5077b2a8","v-0fb6d2aa","v-5941f6a8","v-7652e8ab","v-193410a6","v-5bda9b9c","v-954c8e4e","v-2fa3514c","v-cfd7a768","v-09974639","v-5da217d9","v-063e92f9","v-54376779","v-0c2cc5c3","v-55e0227d","v-c391adde","v-decc39fe","v-4b65808a","v-30fe8b7c","v-29cabcf7","v-0cef7c3e","v-35a63887","v-904008be","v-3dffc5f0","v-1141bba7","v-0251d77a","v-b416d81a","v-769589df","v-375de289","v-9b426004","v-3fc2abd2","v-c4b5c206","v-4eb7a968","v-23ff6a91","v-f98b864a","v-11571ff2","v-52024d87","v-e633b5dc","v-64dd5ab2","v-08752a32","v-395aae57","v-740cffbe","v-82e57f90","v-2d1ff9b6","v-8daa1a0e","v-3ac441f0","v-6d97b4e7","v-25397ed8","v-dc60b056","v-1f2626a6","v-158fc2d0","v-b8c93872","v-b5397e12","v-f324007c","v-a08b6ee0","v-a85882fc","v-70b4f572","v-0cb8adde","v-6661285a","v-3c4f39c8","v-38689776","v-34885982","v-216f4be0","v-6960f508","v-4b876903","v-0038f2fb","v-122a55c4","v-968482f4","v-8811a470","v-080b3415","v-fd0c12b2","v-683f08d8","v-68ce8cab","v-35992c28","v-090c59bd","v-49fdddb7","v-428ff05c","v-cbac378e","v-5f23e614","v-71abbcb8","v-70468548","v-43e0343a","v-fcb74944","v-2dc68459","v-3b374fed","v-458ac3fc","v-34aaaefc","v-168d6ffc"]}}},oa=V(Xp),Ns=(n="")=>{const e=q(),a=un(),o=hn();return g(()=>{var i;const r=n||((i=K().value.blog)==null?void 0:i.key)||"";if(!r)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};const l=a.getRoutes();if(!oa.value[r])throw new Error(`useBlogCategory: key ${r} is invalid`);const c=oa.value[r][o.value],u={path:c.path,map:{}};for(const d in c.map){const _=c.map[d];u.map[d]={path:_.path,items:[]};for(const h of _.keys){const m=l.find(({name:v})=>v===h);if(m){const v=ne(a,m.path);u.map[d].items.push({path:v.path,info:v.meta})}}e.value.path===_.path&&(u.currentItems=u.map[d].items)}return u})},ia=V(nl),Ce=(n="")=>{const e=un(),a=hn();return g(()=>{var o;const i=n||((o=K().value.blog)==null?void 0:o.key)||"";if(!i)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!ia.value[i])throw new Error(`useBlogType: key ${n} is invalid`);const r=e.getRoutes(),l=ia.value[i][a.value],c={path:l.path,items:[]};for(const u of l.keys){const d=r.find(({name:_})=>_===u);if(d){const _=ne(e,d.path);c.items.push({path:_.path,info:_.meta})}}return c})},Hs=Symbol.for("categoryMap"),ie=()=>{const n=en(Hs);if(!n)throw new Error("useCategoryMap() is called without provider.");return n},el=()=>{const n=Ns("category");In(Hs,n)},re=()=>{const n=fn(),e=Z();return g(()=>({...n.value.blog,...e.value.blog}))},Us=Symbol.for("tagMap"),pe=()=>{const n=en(Us);if(!n)throw new Error("useTagMap() is called without provider.");return n},tl=()=>{const n=Ns("tag");In(Us,n)},al=n=>{const e=Z();return g(()=>{const{["a"]:a}=n.value;return a?Yn(a):a===!1?[]:Yn(e.value.author,!1)})},sl=n=>{const e=ie();return g(()=>xa(n.value.c).map(a=>({name:a,path:e.value.map[a].path})))},ol=n=>{const e=pe();return g(()=>Ra(n.value.g).map(a=>({name:a,path:e.value.map[a].path})))},il=n=>g(()=>{const{["d"]:e}=n.value;return e?me(e):null}),rl=n=>{const e=Jn(n,"info"),a=re(),o=al(e),i=sl(e),r=ol(e),l=il(e),c=g(()=>({author:o.value,category:i.value,date:l.value,localizedDate:e.value.l||"",tag:r.value,isOriginal:e.value.o||!1,readingTime:e.value.r||null,pageview:n.path})),u=g(()=>a.value.articleInfo);return{info:c,items:u}},Zs=Symbol.for("articles"),le=()=>{const n=en(Zs);if(!n)throw new Error("useArticles() is called without provider.");return n},pl=()=>{const n=Ce("article");In(Zs,n)},js=Symbol.for("stars"),_t=()=>{const n=en(js);if(!n)throw new Error("useStars() is called without provider.");return n},ll=()=>{const n=Ce("star");In(js,n)},Ws=Symbol.for("timelines"),mt=()=>{const n=en(Ws);if(!n)throw new Error("useTimelines() is called without provider.");return n},cl=()=>{const n=Ce("timeline"),e=g(()=>{const a=[];return n.value.items.forEach(({info:o,path:i})=>{var u;const{year:r,month:l,day:c}=((u=me(o.d))==null?void 0:u.info)||{};r&&l&&c&&((!a[0]||a[0].year!==r)&&a.unshift({year:r,items:[]}),a[0].items.push({date:`${l}/${c}`,info:o,path:i}))}),{...n.value,config:a.reverse()}});In(Ws,e)},ul=()=>{pl(),el(),ll(),tl(),cl()};const dl=T({name:"SocialMedia",setup(){const n=re(),e=jn(),a=g(()=>{const o=n.value.medias;return o?De(o).map(([i,r])=>({name:i,icon:Jp[i],url:r})):[]});return()=>a.value.length?s("div",{class:"social-media-wrapper"},a.value.map(({name:o,icon:i,url:r})=>s("a",{class:"social-media",href:r,rel:"noopener noreferrer",target:"_blank","aria-label":o,...e.value?{}:{"data-balloon-pos":"up"},innerHTML:i}))):null}});const vt=T({name:"BloggerInfo",setup(){const n=re(),e=Zn(),a=Z(),o=le(),i=ie(),r=pe(),l=mt(),c=ae(),u=g(()=>{var m;return n.value.name||((m=Yn(a.value.author)[0])==null?void 0:m.name)||e.value.title}),d=g(()=>n.value.avatar||a.value.logo),_=g(()=>a.value.blogLocales),h=g(()=>n.value.intro);return()=>s("div",{class:"blogger-info",vocab:"https://schema.org/",typeof:"Person"},[s("div",{class:"blogger",...h.value?{style:{cursor:"pointer"},"aria-label":_.value.intro,"data-balloon-pos":"down",role:"navigation",onClick:()=>c(h.value)}:{}},[d.value?s("img",{class:["blogger-avatar",{round:n.value.roundAvatar}],src:rn(d.value),property:"image",alt:"Blogger Avatar"}):null,u.value?s("div",{class:"blogger-name",property:"name"},u.value):null,n.value.description?s("div",{class:"blogger-description",innerHTML:n.value.description}):null,h.value?s("meta",{property:"url",content:rn(h.value)}):null]),s("div",{class:"num-wrapper"},[s("div",{onClick:()=>c(o.value.path)},[s("div",{class:"num"},o.value.items.length),s("div",_.value.article)]),s("div",{onClick:()=>c(i.value.path)},[s("div",{class:"num"},Bn(i.value.map).length),s("div",_.value.category)]),s("div",{onClick:()=>c(r.value.path)},[s("div",{class:"num"},Bn(r.value.map).length),s("div",_.value.tag)]),s("div",{onClick:()=>c(l.value.path)},[s("div",{class:"num"},l.value.items.length),s("div",_.value.timeline)])]),s(dl)])}}),je=()=>s(U,{name:"category"},()=>s("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));je.displayName="CategoryIcon";const We=()=>s(U,{name:"tag"},()=>s("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));We.displayName="TagIcon";const ht=()=>s(U,{name:"timeline"},()=>s("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));ht.displayName="TimelineIcon";const Gs=()=>s(U,{name:"slides"},()=>s("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));Gs.displayName="SlideIcon";const qs=()=>s(U,{name:"sticky"},()=>[s("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);qs.displayName="StickyIcon";const he=()=>s(U,{name:"article"},()=>s("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));he.displayName="ArticleIcon";const Qs=()=>s(U,{name:"book"},()=>s("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));Qs.displayName="BookIcon";const Ys=()=>s(U,{name:"link"},()=>s("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));Ys.displayName="LinkIcon";const Ks=()=>s(U,{name:"project"},()=>s("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));Ks.displayName="ProjectIcon";const Js=()=>s(U,{name:"friend"},()=>s("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));Js.displayName="FriendIcon";const Ge=()=>s(U,{name:"slide-down"},()=>s("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Ge.displayName="SlideDownIcon";const Xs=()=>s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});Xs.displayName="EmptyIcon";const no=()=>s(U,{name:"lock"},()=>s("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));no.displayName="LockIcon";const El=T({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},setup(n){const e=Jn(n,"info"),{info:a,items:o}=rl(n);return()=>s("div",{class:"article-item"},s("article",{class:"article",vocab:"https://schema.org/",typeof:"Article"},[e.value.u?s(qs):null,s(on,{to:n.path},()=>[s("header",{class:"title"},[e.value.n?s(no):null,e.value.y==="s"?s(Gs):null,s("span",{property:"headline"},e.value.t),e.value.v?s("meta",{property:"image",content:rn(e.value.v)}):null])]),e.value.e?s("div",{class:"article-excerpt",innerHTML:e.value.e}):null,s("hr",{class:"hr"}),s(Rs,{info:a.value,...o.value?{items:o.value}:{}})]))}});const _l=T({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(n,{emit:e}){let a;const o=Z(),i=V(""),r=g(()=>o.value.paginationLocales),l=g(()=>Math.ceil(n.total/n.perPage)),c=g(()=>Boolean(l.value)&&l.value!==1),u=g(()=>l.value<7?!1:n.current>4),d=g(()=>l.value<7?!1:n.current<l.value-3),_=g(()=>{const{current:v}=n;let k=1,E=l.value;const A=[];l.value>=7&&(v<=4&&v<l.value-3?(k=1,E=5):v>4&&v>=l.value-3?(E=l.value,k=l.value-4):l.value>7&&(k=v-2,E=v+2));for(let y=k;y<=E;y++)A.push(y);return A}),h=v=>e("updateCurrentPage",v),m=v=>{const k=parseInt(v);k<=l.value&&k>0?h(k):a.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${r.value.errorText.replace(/\$page/g,l.value.toString())}`)};return J(()=>{a=new ii}),()=>s("div",{class:"pagination-wrapper"},c.value?s("div",{class:"pagination-list"},[s("div",{class:"page-number"},[n.current>1?s("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>h(n.current-1)},r.value.prev):null,...u.value?[s("div",{role:"navigation",onClick:()=>h(1)},1),s("div",{class:"ellipsis"},"...")]:[],..._.value.map(v=>s("div",{key:v,class:{active:n.current===v},role:"navigation",onClick:()=>h(v)},v)),...d.value?[s("div",{class:"ellipsis"},"..."),s("div",{role:"navigation",onClick:()=>h(l.value)},l.value)]:[],n.current<l.value?s("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>h(n.current+1)},r.value.next):null]),s("div",{class:"navigate-wrapper"},[s("label",{for:"navigation-text"},`${r.value.navigate}: `),s("input",{id:"navigation-text",value:i.value,onInput:({target:v})=>{i.value=v.value},onKeydown:v=>{v.key==="Enter"&&(v.preventDefault(),m(i.value))}}),s("button",{class:"navigate",role:"navigation",title:r.value.action,onClick:()=>m(i.value)},r.value.action)])]):[])}});const At=T({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(n){const e=kn(),a=un(),o=re(),i=V(1),r=g(()=>o.value.articlePerPage||10),l=g(()=>n.items.slice((i.value-1)*r.value,i.value*r.value)),c=u=>{i.value=u;const d={...e.query};d.page===u.toString()||u===1&&!d.page||(u===1?delete d.page:d.page=u.toString(),a.push({path:e.path,query:d}))};return J(()=>{const{page:u}=e.query;c(u?Number(u):1),t(()=>import("./pageview-1b30f8ca.js"),["assets/pageview-1b30f8ca.js","assets/framework-39b9cf04.js"]).then(({updatePageview:d})=>{d()}),Y(i,()=>{const d=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,d)},100)})}),()=>s("div",{id:"article-list",class:"article-wrapper"},l.value.length?[...l.value.map(({info:u,path:d},_)=>s(G,{appear:!0,delay:_*.04},()=>s(El,{key:d,info:u,path:d}))),s(_l,{current:i.value,perPage:r.value,total:n.items.length,onUpdateCurrentPage:c})]:s(Xs))}});const gt=T({name:"CategoryList",setup(){const n=q(),e=ie();return()=>s("ul",{class:"category-list-wrapper"},De(e.value.map).map(([a,{path:o,items:i}])=>s("li",{class:["category",`category${fe(a,9)}`,{active:o===n.value.path}]},s(on,{to:o},()=>[a,s("span",{class:"category-num"},i.length)]))))}});const Bt=T({name:"TagList",setup(){const n=K(),e=pe(),a=o=>{var i;return o===((i=n.value.blog)==null?void 0:i.name)};return()=>s("ul",{class:"tag-list-wrapper"},De(e.value.map).map(([o,{path:i,items:r}])=>s("li",{class:["tag",`tag${fe(o,9)}`,{active:a(o)}]},s(on,{to:i},()=>[o,s("span",{class:"tag-num"},r.length)]))))}});const ml=T({name:"TimelineList",setup(){const n=Z(),e=mt(),a=ae(),o=g(()=>n.value.blogLocales.timeline);return()=>s("div",{class:"timeline-list-wrapper"},[s("div",{class:"timeline-list-title",onClick:()=>a(e.value.path)},[s(ht),s("span",{class:"num"},e.value.items.length),o.value]),s("hr"),s("div",{class:"timeline-content"},s("ul",{class:"timeline-list"},e.value.config.map(({year:i,items:r},l)=>s(G,{appear:!0,delay:.08*(l+1)},()=>s("li",[s("h3",{class:"timeline-year"},i),s("ul",{class:"timeline-year-wrapper"},r.map(({date:c,info:u,path:d})=>s("li",{class:"timeline-item"},[s("span",{class:"timeline-date"},c),s(on,{class:"timeline-title",to:d},()=>u.t)])))])))))])}});const eo=T({name:"InfoList",setup(){const n=Z(),e=le(),a=ie(),o=g(()=>Bn(a.value.map).length),i=_t(),r=pe(),l=g(()=>Bn(r.value.map).length),c=ae(),u=V("article"),d=g(()=>n.value.blogLocales),_=[["article",he],["category",je],["tag",We],["timeline",ht]];return()=>s("div",{class:"blog-info-list"},[s("div",{class:"blog-type-wrapper"},_.map(([h,m])=>s("button",{class:"blog-type-button",onClick:()=>{u.value=h}},s("div",{class:["icon-wrapper",{active:u.value===h}],"aria-label":d.value[h],"data-balloon-pos":"up"},s(m))))),s(G,()=>u.value==="article"?s("div",{class:"sticky-article-wrapper"},[s("div",{class:"title",onClick:()=>c(e.value.path)},[s(he),s("span",{class:"num"},e.value.items.length),d.value.article]),s("hr"),s("ul",{class:"sticky-article-list"},i.value.items.map(({info:h,path:m},v)=>s(G,{appear:!0,delay:.08*(v+1)},()=>s("li",{class:"sticky-article"},s(on,{to:m},()=>h.t)))))]):u.value==="category"?s("div",{class:"category-wrapper"},[o.value?s("div",{class:"title",onClick:()=>c(a.value.path)},[s(je),s("span",{class:"num"},o.value),d.value.category]):null,s("hr"),s(G,{delay:.04},()=>s(gt))]):u.value==="tag"?s("div",{class:"tag-wrapper"},[l.value?s("div",{class:"title",onClick:()=>c(r.value.path)},[s(We),s("span",{class:"num"},l.value),d.value.tag]):null,s("hr"),s(G,{delay:.04},()=>s(Bt))]):s(G,()=>s(ml)))])}});const Pe=T({name:"BlogWrapper",setup(n,{slots:e}){const{isMobile:a}=te();return()=>[s(Et),s(dt,{noSidebar:!0},{default:()=>{var o;return(o=e.default)==null?void 0:o.call(e)},navScreenBottom:()=>s(vt),...a.value?{sidebar:()=>s(eo)}:{}})]}});const ce=()=>s("aside",{class:"blog-info-wrapper"},[s(G,()=>s(vt)),s(G,{delay:.04},()=>s(eo))]);ce.displayName="InfoPanel";const vl=T({name:"BlogPage",components:{CategoryList:gt,TagList:Bt},setup(){const n=q(),e=K(),a=ie(),o=pe(),i=g(()=>e.value.blog||{}),r=g(()=>{const{key:c=""}=i.value;return c==="category"?"CategoryList":c==="tag"?"TagList":null}),l=g(()=>{const{name:c="",key:u=""}=i.value;return u==="category"?c?a.value.map[c].items:[]:u==="tag"?c?o.value.map[c].items:[]:[]});return()=>s(Pe,()=>s("div",{class:"page blog"},s("div",{class:"blog-page-wrapper"},[s("main",{class:"blog-main",id:"main-content"},[s(G,()=>r.value?s(ln(r.value)):null),i.value.name?s(G,{appear:!0,delay:.24},()=>s(At,{key:n.value.path,items:l.value})):null]),s(G,{delay:.16},()=>s(ce))])))}}),hl="/assets/hero-197a9d2d.jpg";const Al=T({name:"BlogHero",setup(){const n=Vo(),e=K(),a=V(),o=g(()=>e.value.heroImage||null),i=g(()=>e.value.heroFullScreen||!1),r=g(()=>e.value.bgImage?rn(e.value.bgImage):e.value.bgImage??hl);return()=>e.value.hero===!1?null:s("div",{ref:a,class:["blog-hero",{fullscreen:i.value,"no-bg":!r.value}]},[r.value?s("div",{class:"mask",style:{background:`url(${r.value}) center/cover no-repeat`,...e.value.bgImageStyle}}):null,s(G,{appear:!0,delay:.04},()=>o.value?s("img",{class:"hero-image",style:e.value.heroImageStyle,src:rn(o.value),alt:e.value.heroAlt||"hero image"}):null),s(G,{appear:!0,delay:.08},()=>e.value.heroText===!1?null:s("h1",e.value.heroText||n.value)),s(G,{appear:!0,delay:.12},()=>e.value.tagline?s("p",{class:"description",innerHTML:e.value.tagline}):null),i.value?s("button",{class:"slide-down-button",onClick:()=>{window.scrollTo({top:a.value.clientHeight,behavior:"smooth"})}},[s(Ge),s(Ge)]):null])}});const gl=["link","article","book","project","friend"],Bl=T({name:"ProjectPanel",components:{ArticleIcon:he,BookIcon:Qs,FriendIcon:Js,LinkIcon:Ys,ProjectIcon:Ks},setup(){const n=K(),e=jn(),a=ae(),o=(i="",r="icon")=>gl.includes(i)?s(ln(`${i}-icon`)):Fn(i)?s("img",{src:i,alt:r,class:"image"}):ye(i)?s("img",{src:rn(i),alt:r,class:"image"}):s(cn,{icon:i});return()=>{var i;return(i=n.value.projects)!=null&&i.length?s("div",{class:"project-panel"},n.value.projects.map(({icon:r,link:l,name:c,desc:u},d)=>s("div",{class:["project",{[`project${d%9}`]:!e.value}],onClick:()=>a(l)},[o(r,c),s("div",{class:"name"},c),s("div",{class:"desc"},u)]))):null}}});const kl=T({name:"BlogHome",setup(){const n=le();return()=>s("div",{class:"page blog"},[s(Al),s("div",{class:"blog-page-wrapper"},[s("main",{class:"blog-home",id:"main-content"},[s(G,{appear:!0,delay:.16},()=>s(Bl)),s(G,{appear:!0,delay:.24},()=>s(At,{items:n.value.items}))]),s(G,{appear:!0,delay:.16},()=>s(ce))]),s(G,{appear:!0,delay:.28},()=>s(oe))])}}),fl=T({name:"BlogHome",setup(){return()=>s(Pe,()=>s(kl))}});const to=T({name:"ArticleType",setup(){const n=q(),e=hn(),a=Z(),o=le(),i=_t(),r=g(()=>{const l=a.value.blogLocales;return[{text:l.all,path:o.value.path},{text:l.star,path:i.value.path},...[].map(({key:c,path:u})=>({text:l[c],path:u.replace(/^\//,e.value)}))]});return()=>s("ul",{class:"article-type-wrapper"},r.value.map(l=>s("li",{class:["article-type",{active:l.path===n.value.path}]},s(on,{to:l.path},()=>l.text))))}}),bl=T({name:"BlogPage",setup(){const n=Ce(),e=K(),a=q(),o=le(),i=_t(),r=g(()=>{const{key:l="",type:c}=e.value.blog||{};return l==="star"?i.value.items:c==="type"&&l?n.value.items:o.value.items});return()=>s(Pe,()=>s("div",{class:"page blog"},s("div",{class:"blog-page-wrapper"},[s("main",{class:"blog-main",id:"main-content"},[s(G,()=>s(to)),s(G,{appear:!0,delay:.24},()=>s(At,{key:a.value.path,items:r.value}))]),s(G,{delay:.16},()=>s(ce))])))}});const Dl=T({name:"TimelineItems",setup(){const n=re(),e=Z(),a=mt(),o=g(()=>n.value.timeline||e.value.blogLocales.timelineTitle),i=g(()=>a.value.config.map(({year:r})=>({title:r.toString(),level:2,slug:r.toString(),children:[]})));return()=>s("div",{class:"timeline-wrapper"},s("ul",{class:"timeline-content"},[s(G,()=>s("li",{class:"motto"},o.value)),s(zs,{items:i.value}),...a.value.config.map(({year:r,items:l},c)=>s(G,{appear:!0,delay:.08*(c+1),type:"group"},()=>[s("h3",{key:"title",id:r,class:"timeline-year-title"},s("span",r)),s("li",{key:"content",class:"timeline-year-list"},[s("ul",{class:"timeline-year-wrapper"},l.map(({date:u,info:d,path:_})=>s("li",{class:"timeline-item"},[s("span",{class:"timeline-date"},u),s(on,{class:"timeline-title",to:_},()=>d.t)])))])]))]))}}),yl=T({name:"Timeline",components:{ArticleType:to,CategoryList:gt,TagList:Bt},setup(){return()=>s(Pe,()=>s("div",{class:"page blog"},s("div",{class:"blog-page-wrapper"},[s("main",{class:"blog-main",id:"main-content"},[s(G,{appear:!0,delay:.24},()=>s(Dl))]),s(G,{delay:.16},()=>s(ce))])))}});const Ll=dn({enhance:({app:n,router:e})=>{const{scrollBehavior:a}=e.options;e.options.scrollBehavior=async(...o)=>(await is().wait(),a(...o)),ip(n),n.component("HopeIcon",cn),n.component("BloggerInfo",vt)},setup:()=>{rp(),Bp(),ul()},layouts:{Layout:Qp,NotFound:Kp,BlogCategory:vl,BlogHome:fl,BlogType:bl,Timeline:yl}}),Cl=n=>{const e=tn("keydown",a=>{a.key==="k"&&(a.ctrlKey||a.metaKey)&&(a.preventDefault(),n(),e())})},Pl=n=>n.button===1||n.altKey||n.ctrlKey||n.metaKey||n.shiftKey,wl=()=>{const n=un();return{hitComponent:({hit:e,children:a})=>({type:"a",ref:void 0,constructor:void 0,key:void 0,props:{href:e.url,onClick:o=>{Pl(o)||(o.preventDefault(),n.push(Lt(e.url,"/")))},children:a},__v:null}),navigator:{navigate:({itemUrl:e})=>{n.push(Lt(e,"/"))}},transformSearchClient:e=>{const a=Xa(e.search,500);return{...e,search:async(...o)=>a(...o)}}}},Il=(n=[],e)=>[`lang:${e}`,...ge(n)?n:[n]],Sl=({buttonText:n="Search",buttonAriaLabel:e=n}={})=>`<button type="button" class="DocSearch DocSearch-Button" aria-label="${e}"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewBox="0 0 20 20"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">${n}</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button>`,Tl=16,ao=()=>{if(document.querySelector(".DocSearch-Modal"))return;const n=new Event("keydown");n.key="k",n.metaKey=!0,window.dispatchEvent(n),setTimeout(ao,Tl)},Ol=n=>{const e="algolia-preconnect";(window.requestIdleCallback||setTimeout)(()=>{if(document.head.querySelector(`#${e}`))return;const o=document.createElement("link");o.id=e,o.rel="preconnect",o.href=`https://${n}-dsn.algolia.net`,o.crossOrigin="",document.head.appendChild(o)})},Fl={indexName:"newzone",appId:"M4EXXEZIEG",apiKey:"fd8891a9c4cc21e0ef4f11bf44f7a11e"};t(()=>import("./style-e9220a04.js"),[]),t(()=>import("./docsearch-1d421ddb.js"),[]);const Vl=T({name:"Docsearch",props:{containerId:{type:String,required:!1,default:"docsearch-container"},options:{type:Object,required:!1,default:()=>Fl}},setup(n){const e=wl(),a=Xn(),o=hn(),i=V(!1),r=V(!1),l=g(()=>{var d;return{...n.options,...(d=n.options.locales)==null?void 0:d[o.value]}}),c=async()=>{var _;const{default:d}=await t(()=>import("./index-b98b895d.js"),[]);d({...e,...l.value,container:`#${n.containerId}`,searchParameters:{...l.value.searchParameters,facetFilters:Il((_=l.value.searchParameters)==null?void 0:_.facetFilters,a.value)}}),i.value=!0},u=()=>{r.value||i.value||(r.value=!0,c(),ao(),Y(o,c))};return Cl(u),J(()=>Ol(l.value.appId)),()=>{var d;return[s("div",{id:n.containerId,style:{display:i.value?"block":"none"}}),i.value?null:s("div",{onClick:u,innerHTML:Sl((d=l.value.translations)==null?void 0:d.button)})]}}}),Ml=dn({enhance({app:n}){n.component("Docsearch",Vl)}}),xn=({name:n="",color:e="currentColor"},{slots:a})=>{var o;return s("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${n}-icon`],viewBox:"0 0 1024 1024",fill:e,"aria-label":`${n} icon`},(o=a.default)==null?void 0:o.call(a))};xn.displayName="IconBase";function xl(n){return n}function Rl(n,e=!0){Be()?J(n):e?n():wn(n)}function $l(n,e=!1){const a=V(),o=()=>a.value=!!n();return o(),Rl(o,e),a}const ra=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},pa="__vueuse_ssr_handlers__";ra[pa]=ra[pa]||{};var la;(function(n){n.UP="UP",n.RIGHT="RIGHT",n.DOWN="DOWN",n.LEFT="LEFT",n.NONE="NONE"})(la||(la={}));var zl=Object.defineProperty,ca=Object.getOwnPropertySymbols,Nl=Object.prototype.hasOwnProperty,Hl=Object.prototype.propertyIsEnumerable,ua=(n,e,a)=>e in n?zl(n,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[e]=a,Ul=(n,e)=>{for(var a in e||(e={}))Nl.call(e,a)&&ua(n,a,e[a]);if(ca)for(var a of ca(e))Hl.call(e,a)&&ua(n,a,e[a]);return n};const Zl={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};Ul({linear:xl},Zl);const jl=()=>$l(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),Wl=()=>{const n=jl();return g(()=>n.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},kt=n=>{const e=hn();return g(()=>n[e.value])},Gl=n=>[/\((ipad);[-\w),; ]+apple/i,/applecoremedia\/[\w.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i].some(e=>e.test(n)),ql=n=>[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/cfnetwork\/.+darwin/i].some(e=>e.test(n)),Ql=n=>[/(mac os x) ?([\w. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i].some(e=>e.test(n));var we=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},qe={},Yl={get exports(){return qe},set exports(n){qe=n}};(function(n,e){(function(a,o){n.exports=o()})(we,function(){var a=1e3,o=6e4,i=36e5,r="millisecond",l="second",c="minute",u="hour",d="day",_="week",h="month",m="quarter",v="year",k="date",E="Invalid Date",A=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,L={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(P){var b=["th","st","nd","rd"],B=P%100;return"["+P+(b[(B-20)%10]||b[B]||b[0])+"]"}},F=function(P,b,B){var w=String(P);return!w||w.length>=b?P:""+Array(b+1-w.length).join(B)+P},$={s:F,z:function(P){var b=-P.utcOffset(),B=Math.abs(b),w=Math.floor(B/60),f=B%60;return(b<=0?"+":"-")+F(w,2,"0")+":"+F(f,2,"0")},m:function P(b,B){if(b.date()<B.date())return-P(B,b);var w=12*(B.year()-b.year())+(B.month()-b.month()),f=b.clone().add(w,h),O=B-f<0,I=b.clone().add(w+(O?-1:1),h);return+(-(w+(B-f)/(O?f-I:I-f))||0)},a:function(P){return P<0?Math.ceil(P)||0:Math.floor(P)},p:function(P){return{M:h,y:v,w:_,d,D:k,h:u,m:c,s:l,ms:r,Q:m}[P]||String(P||"").toLowerCase().replace(/s$/,"")},u:function(P){return P===void 0}},M="en",z={};z[M]=L;var R=function(P){return P instanceof X},S=function P(b,B,w){var f;if(!b)return M;if(typeof b=="string"){var O=b.toLowerCase();z[O]&&(f=O),B&&(z[O]=B,f=O);var I=b.split("-");if(!f&&I.length>1)return P(I[0])}else{var x=b.name;z[x]=b,f=x}return!w&&f&&(M=f),f||!w&&M},D=function(P,b){if(R(P))return P.clone();var B=typeof b=="object"?b:{};return B.date=P,B.args=arguments,new X(B)},C=$;C.l=S,C.i=R,C.w=function(P,b){return D(P,{locale:b.$L,utc:b.$u,x:b.$x,$offset:b.$offset})};var X=function(){function P(B){this.$L=S(B.locale,null,!0),this.parse(B)}var b=P.prototype;return b.parse=function(B){this.$d=function(w){var f=w.date,O=w.utc;if(f===null)return new Date(NaN);if(C.u(f))return new Date;if(f instanceof Date)return new Date(f);if(typeof f=="string"&&!/Z$/i.test(f)){var I=f.match(A);if(I){var x=I[2]-1||0,H=(I[7]||"0").substring(0,3);return O?new Date(Date.UTC(I[1],x,I[3]||1,I[4]||0,I[5]||0,I[6]||0,H)):new Date(I[1],x,I[3]||1,I[4]||0,I[5]||0,I[6]||0,H)}}return new Date(f)}(B),this.$x=B.x||{},this.init()},b.init=function(){var B=this.$d;this.$y=B.getFullYear(),this.$M=B.getMonth(),this.$D=B.getDate(),this.$W=B.getDay(),this.$H=B.getHours(),this.$m=B.getMinutes(),this.$s=B.getSeconds(),this.$ms=B.getMilliseconds()},b.$utils=function(){return C},b.isValid=function(){return this.$d.toString()!==E},b.isSame=function(B,w){var f=D(B);return this.startOf(w)<=f&&f<=this.endOf(w)},b.isAfter=function(B,w){return D(B)<this.startOf(w)},b.isBefore=function(B,w){return this.endOf(w)<D(B)},b.$g=function(B,w,f){return C.u(B)?this[w]:this.set(f,B)},b.unix=function(){return Math.floor(this.valueOf()/1e3)},b.valueOf=function(){return this.$d.getTime()},b.startOf=function(B,w){var f=this,O=!!C.u(w)||w,I=C.p(B),x=function(En,Q){var sn=C.w(f.$u?Date.UTC(f.$y,Q,En):new Date(f.$y,Q,En),f);return O?sn:sn.endOf(d)},H=function(En,Q){return C.w(f.toDate()[En].apply(f.toDate("s"),(O?[0,0,0,0]:[23,59,59,999]).slice(Q)),f)},N=this.$W,j=this.$M,an=this.$D,nn="set"+(this.$u?"UTC":"");switch(I){case v:return O?x(1,0):x(31,11);case h:return O?x(1,j):x(0,j+1);case _:var An=this.$locale().weekStart||0,gn=(N<An?N+7:N)-An;return x(O?an-gn:an+(6-gn),j);case d:case k:return H(nn+"Hours",0);case u:return H(nn+"Minutes",1);case c:return H(nn+"Seconds",2);case l:return H(nn+"Milliseconds",3);default:return this.clone()}},b.endOf=function(B){return this.startOf(B,!1)},b.$set=function(B,w){var f,O=C.p(B),I="set"+(this.$u?"UTC":""),x=(f={},f[d]=I+"Date",f[k]=I+"Date",f[h]=I+"Month",f[v]=I+"FullYear",f[u]=I+"Hours",f[c]=I+"Minutes",f[l]=I+"Seconds",f[r]=I+"Milliseconds",f)[O],H=O===d?this.$D+(w-this.$W):w;if(O===h||O===v){var N=this.clone().set(k,1);N.$d[x](H),N.init(),this.$d=N.set(k,Math.min(this.$D,N.daysInMonth())).$d}else x&&this.$d[x](H);return this.init(),this},b.set=function(B,w){return this.clone().$set(B,w)},b.get=function(B){return this[C.p(B)]()},b.add=function(B,w){var f,O=this;B=Number(B);var I=C.p(w),x=function(j){var an=D(O);return C.w(an.date(an.date()+Math.round(j*B)),O)};if(I===h)return this.set(h,this.$M+B);if(I===v)return this.set(v,this.$y+B);if(I===d)return x(1);if(I===_)return x(7);var H=(f={},f[c]=o,f[u]=i,f[l]=a,f)[I]||1,N=this.$d.getTime()+B*H;return C.w(N,this)},b.subtract=function(B,w){return this.add(-1*B,w)},b.format=function(B){var w=this,f=this.$locale();if(!this.isValid())return f.invalidDate||E;var O=B||"YYYY-MM-DDTHH:mm:ssZ",I=C.z(this),x=this.$H,H=this.$m,N=this.$M,j=f.weekdays,an=f.months,nn=function(Q,sn,Sn,bn){return Q&&(Q[sn]||Q(w,O))||Sn[sn].slice(0,bn)},An=function(Q){return C.s(x%12||12,Q,"0")},gn=f.meridiem||function(Q,sn,Sn){var bn=Q<12?"AM":"PM";return Sn?bn.toLowerCase():bn},En={YY:String(this.$y).slice(-2),YYYY:this.$y,M:N+1,MM:C.s(N+1,2,"0"),MMM:nn(f.monthsShort,N,an,3),MMMM:nn(an,N),D:this.$D,DD:C.s(this.$D,2,"0"),d:String(this.$W),dd:nn(f.weekdaysMin,this.$W,j,2),ddd:nn(f.weekdaysShort,this.$W,j,3),dddd:j[this.$W],H:String(x),HH:C.s(x,2,"0"),h:An(1),hh:An(2),a:gn(x,H,!0),A:gn(x,H,!1),m:String(H),mm:C.s(H,2,"0"),s:String(this.$s),ss:C.s(this.$s,2,"0"),SSS:C.s(this.$ms,3,"0"),Z:I};return O.replace(y,function(Q,sn){return sn||En[Q]||I.replace(":","")})},b.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},b.diff=function(B,w,f){var O,I=C.p(w),x=D(B),H=(x.utcOffset()-this.utcOffset())*o,N=this-x,j=C.m(this,x);return j=(O={},O[v]=j/12,O[h]=j,O[m]=j/3,O[_]=(N-H)/6048e5,O[d]=(N-H)/864e5,O[u]=N/i,O[c]=N/o,O[l]=N/a,O)[I]||N,f?j:C.a(j)},b.daysInMonth=function(){return this.endOf(h).$D},b.$locale=function(){return z[this.$L]},b.locale=function(B,w){if(!B)return this.$L;var f=this.clone(),O=S(B,w,!0);return O&&(f.$L=O),f},b.clone=function(){return C.w(this.$d,this)},b.toDate=function(){return new Date(this.valueOf())},b.toJSON=function(){return this.isValid()?this.toISOString():null},b.toISOString=function(){return this.$d.toISOString()},b.toString=function(){return this.$d.toUTCString()},P}(),Wn=X.prototype;return D.prototype=Wn,[["$ms",r],["$s",l],["$m",c],["$H",u],["$W",d],["$M",h],["$y",v],["$D",k]].forEach(function(P){Wn[P[1]]=function(b){return this.$g(b,P[0],P[1])}}),D.extend=function(P,b){return P.$i||(P(b,X,D),P.$i=!0),D},D.locale=S,D.isDayjs=R,D.unix=function(P){return D(1e3*P)},D.en=z[M],D.Ls=z,D.p={},D})})(Yl);var Fe=qe,Qe={},Kl={get exports(){return Qe},set exports(n){Qe=n}};(function(n,e){(function(a,o){n.exports=o()})(we,function(){return function(a,o,i){var r=o.prototype,l=function(m){var v,k=m.date,E=m.utc,A={};if(!((v=k)instanceof Date||v instanceof Array||r.$utils().u(v)||v.constructor.name!=="Object")){if(!Object.keys(k).length)return new Date;var y=E?i.utc():i();Object.keys(k).forEach(function(D){var C,X;A[C=D,X=r.$utils().p(C),X==="date"?"day":X]=k[D]});var L=A.day||(A.year||A.month>=0?1:y.date()),F=A.year||y.year(),$=A.month>=0?A.month:A.year||A.day?0:y.month(),M=A.hour||0,z=A.minute||0,R=A.second||0,S=A.millisecond||0;return E?new Date(Date.UTC(F,$,L,M,z,R,S)):new Date(F,$,L,M,z,R,S)}return k},c=r.parse;r.parse=function(m){m.date=l.bind(this)(m),c.bind(this)(m)};var u=r.set,d=r.add,_=r.subtract,h=function(m,v,k,E){E===void 0&&(E=1);var A=Object.keys(v),y=this;return A.forEach(function(L){y=m.bind(y)(v[L]*E,L)}),y};r.set=function(m,v){return v=v===void 0?m:v,m.constructor.name==="Object"?h.bind(this)(function(k,E){return u.bind(this)(E,k)},v,m):u.bind(this)(m,v)},r.add=function(m,v){return m.constructor.name==="Object"?h.bind(this)(d,m,v):d.bind(this)(m,v)},r.subtract=function(m,v){return m.constructor.name==="Object"?h.bind(this)(d,m,v,-1):_.bind(this)(m,v)}}})})(Kl);var Jl=Qe,Ye={},Xl={get exports(){return Ye},set exports(n){Ye=n}};(function(n,e){(function(a,o){n.exports=o()})(we,function(){var a={year:0,month:1,day:2,hour:3,minute:4,second:5},o={};return function(i,r,l){var c,u=function(m,v,k){k===void 0&&(k={});var E=new Date(m),A=function(y,L){L===void 0&&(L={});var F=L.timeZoneName||"short",$=y+"|"+F,M=o[$];return M||(M=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:y,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",timeZoneName:F}),o[$]=M),M}(v,k);return A.formatToParts(E)},d=function(m,v){for(var k=u(m,v),E=[],A=0;A<k.length;A+=1){var y=k[A],L=y.type,F=y.value,$=a[L];$>=0&&(E[$]=parseInt(F,10))}var M=E[3],z=M===24?0:M,R=E[0]+"-"+E[1]+"-"+E[2]+" "+z+":"+E[4]+":"+E[5]+":000",S=+m;return(l.utc(R).valueOf()-(S-=S%1e3))/6e4},_=r.prototype;_.tz=function(m,v){m===void 0&&(m=c);var k=this.utcOffset(),E=this.toDate(),A=E.toLocaleString("en-US",{timeZone:m}),y=Math.round((E-new Date(A))/1e3/60),L=l(A).$set("millisecond",this.$ms).utcOffset(15*-Math.round(E.getTimezoneOffset()/15)-y,!0);if(v){var F=L.utcOffset();L=L.add(k-F,"minute")}return L.$x.$timezone=m,L},_.offsetName=function(m){var v=this.$x.$timezone||l.tz.guess(),k=u(this.valueOf(),v,{timeZoneName:m}).find(function(E){return E.type.toLowerCase()==="timezonename"});return k&&k.value};var h=_.startOf;_.startOf=function(m,v){if(!this.$x||!this.$x.$timezone)return h.call(this,m,v);var k=l(this.format("YYYY-MM-DD HH:mm:ss:SSS"));return h.call(k,m,v).tz(this.$x.$timezone,!0)},l.tz=function(m,v,k){var E=k&&v,A=k||v||c,y=d(+l(),A);if(typeof m!="string")return l(m).tz(A);var L=function(z,R,S){var D=z-60*R*1e3,C=d(D,S);if(R===C)return[D,R];var X=d(D-=60*(C-R)*1e3,S);return C===X?[D,C]:[z-60*Math.min(C,X)*1e3,Math.max(C,X)]}(l.utc(m,E).valueOf(),y,A),F=L[0],$=L[1],M=l(F).utcOffset($);return M.$x.$timezone=A,M},l.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},l.tz.setDefault=function(m){c=m}}})})(Xl);var nc=Ye,Ke={},ec={get exports(){return Ke},set exports(n){Ke=n}};(function(n,e){(function(a,o){n.exports=o()})(we,function(){var a="minute",o=/[+-]\d\d(?::?\d\d)?/g,i=/([+-]|\d\d)/g;return function(r,l,c){var u=l.prototype;c.utc=function(E){var A={date:E,utc:!0,args:arguments};return new l(A)},u.utc=function(E){var A=c(this.toDate(),{locale:this.$L,utc:!0});return E?A.add(this.utcOffset(),a):A},u.local=function(){return c(this.toDate(),{locale:this.$L,utc:!1})};var d=u.parse;u.parse=function(E){E.utc&&(this.$u=!0),this.$utils().u(E.$offset)||(this.$offset=E.$offset),d.call(this,E)};var _=u.init;u.init=function(){if(this.$u){var E=this.$d;this.$y=E.getUTCFullYear(),this.$M=E.getUTCMonth(),this.$D=E.getUTCDate(),this.$W=E.getUTCDay(),this.$H=E.getUTCHours(),this.$m=E.getUTCMinutes(),this.$s=E.getUTCSeconds(),this.$ms=E.getUTCMilliseconds()}else _.call(this)};var h=u.utcOffset;u.utcOffset=function(E,A){var y=this.$utils().u;if(y(E))return this.$u?0:y(this.$offset)?h.call(this):this.$offset;if(typeof E=="string"&&(E=function(M){M===void 0&&(M="");var z=M.match(o);if(!z)return null;var R=(""+z[0]).match(i)||["-",0,0],S=R[0],D=60*+R[1]+ +R[2];return D===0?0:S==="+"?D:-D}(E),E===null))return this;var L=Math.abs(E)<=16?60*E:E,F=this;if(A)return F.$offset=L,F.$u=E===0,F;if(E!==0){var $=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(F=this.local().add(L+$,a)).$offset=L,F.$x.$localOffset=$}else F=this.utc();return F};var m=u.format;u.format=function(E){var A=E||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return m.call(this,A)},u.valueOf=function(){var E=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*E},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var v=u.toDate;u.toDate=function(E){return E==="s"&&this.$offset?c(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():v.call(this)};var k=u.diff;u.diff=function(E,A,y){if(E&&this.$u===E.$u)return k.call(this,E,A,y);var L=this.local(),F=c(E).local();return k.call(L,F,A,y)}}})})(ec);var tc=Ke;Fe.extend(Jl),Fe.extend(tc),Fe.extend(nc);const so=()=>s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",preserveAspectRatio:"xMidYMid",viewBox:"0 0 100 100"},[s("circle",{cx:"28",cy:"75",r:"11",fill:"currentColor"},s("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),s("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 47a28 28 0 0 1 28 28"},s("animate",{attributeName:"stroke-opacity",begin:"0.1s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),s("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 25a50 50 0 0 1 50 50"},s("animate",{attributeName:"stroke-opacity",begin:"0.2s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"}))]);so.displayName="LoadingIcon";const oo=({hint:n})=>s("div",{class:"search-pro-result loading"},[s(so),n]);oo.displayName="SearchLoading";const ac=()=>s(xn,{name:"close"},()=>s("path",{d:"M507.168 473.232 716.48 263.936a16 16 0 0 1 22.624 0l11.312 11.312a16 16 0 0 1 0 22.624L541.12 507.168 750.4 716.48a16 16 0 0 1 0 22.624l-11.312 11.312a16 16 0 0 1-22.624 0L507.168 541.12 297.872 750.4a16 16 0 0 1-22.624 0l-11.312-11.312a16 16 0 0 1 0-22.624l209.296-209.312-209.296-209.296a16 16 0 0 1 0-22.624l11.312-11.312a16 16 0 0 1 22.624 0l209.296 209.296z"}));ac.displayName="CloseIcon";const sc=()=>s(xn,{name:"heading"},()=>s("path",{d:"M250.4 704.6H64V595.4h202.4l26.2-166.6H94V319.6h214.4L352 64h127.8l-43.6 255.4h211.2L691 64h126.2l-43.6 255.4H960v109.2H756.2l-24.6 166.6H930v109.2H717L672 960H545.8l43.6-255.4H376.6L333 960H206.8l43.6-255.4zm168.4-276L394 595.4h211.2l24.6-166.6h-211z"}));sc.displayName="HeadingIcon";const oc=()=>s(xn,{name:"heart"},()=>s("path",{d:"M1024 358.156C1024 195.698 892.3 64 729.844 64c-86.362 0-164.03 37.218-217.844 96.49C458.186 101.218 380.518 64 294.156 64 131.698 64 0 195.698 0 358.156 0 444.518 37.218 522.186 96.49 576H96l320 320c32 32 64 64 96 64s64-32 96-64l320-320h-.49c59.272-53.814 96.49-131.482 96.49-217.844zM841.468 481.232 517.49 805.49a2981.962 2981.962 0 0 1-5.49 5.48c-1.96-1.95-3.814-3.802-5.49-5.48L182.532 481.234C147.366 449.306 128 405.596 128 358.156 128 266.538 202.538 192 294.156 192c47.44 0 91.15 19.366 123.076 54.532L512 350.912l94.768-104.378C638.696 211.366 682.404 192 729.844 192 821.462 192 896 266.538 896 358.156c0 47.44-19.368 91.15-54.532 123.076z"}));oc.displayName="HeartIcon";const ic=()=>s(xn,{name:"history"},()=>s("path",{d:"M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zm0-896a384 384 0 1 0 384 384 384 384 0 0 0-384-384zm192 448H512a64 64 0 0 1-64-64V320a64 64 0 0 1 128 0v128h128a64 64 0 0 1 0 128z"}));ic.displayName="HistoryIcon";const rc=()=>s(xn,{name:"title"},()=>s("path",{d:"M512 256c70.656 0 134.656 28.672 180.992 75.008A254.933 254.933 0 0 1 768 512c0 83.968-41.024 157.888-103.488 204.48C688.96 748.736 704 788.48 704 832c0 105.984-86.016 192-192 192-106.048 0-192-86.016-192-192h128a64 64 0 1 0 128 0 64 64 0 0 0-64-64 255.19 255.19 0 0 1-181.056-75.008A255.403 255.403 0 0 1 256 512c0-83.968 41.024-157.824 103.488-204.544C335.04 275.264 320 235.584 320 192A192 192 0 0 1 512 0c105.984 0 192 85.952 192 192H576a64.021 64.021 0 0 0-128 0c0 35.328 28.672 64 64 64zM384 512c0 70.656 57.344 128 128 128s128-57.344 128-128-57.344-128-128-128-128 57.344-128 128z"}));rc.displayName="TitleIcon";const ft=()=>s(xn,{name:"search"},()=>s("path",{d:"M192 480a256 256 0 1 1 512 0 256 256 0 0 1-512 0m631.776 362.496-143.2-143.168A318.464 318.464 0 0 0 768 480c0-176.736-143.264-320-320-320S128 303.264 128 480s143.264 320 320 320a318.016 318.016 0 0 0 184.16-58.592l146.336 146.368c12.512 12.48 32.768 12.48 45.28 0 12.48-12.512 12.48-32.768 0-45.28"}));ft.displayName="SearchIcon";const io={delay:300,queryHistoryCount:5,resultHistoryCount:5,hotKeys:[{key:"k",ctrl:!0}],worker:"search-pro.worker.js"},xc={},ro=io.hotKeys,bt={"/":{cancel:"取消",placeholder:"搜索",search:"搜索",searching:"搜索中",select:"选择",navigate:"切换",exit:"关闭",history:"搜索历史",emptyHistory:"无搜索历史",emptyResult:"没有找到结果",loading:"正在加载搜索索引..."}},pc="search-pro-query-history",Dn=$i(pc,[]),lc=()=>{const{queryHistoryCount:n}=io,e=n>0;return{enabled:e,queryHistory:Dn,addQueryHistory:a=>{e&&(Dn.value.length<n?Dn.value=Array.from(new Set([a,...Dn.value])):Dn.value=Array.from(new Set([a,...Dn.value.slice(0,n-1)])))},removeQueryHistory:a=>{Dn.value=[...Dn.value.slice(0,a),...Dn.value.slice(a+1)]}}};const Dt=Symbol.for("search-pro"),cc=()=>{const n=V(!1);In(Dt,n)},uc=n=>n instanceof Element?document.activeElement===n&&(["TEXTAREA","SELECT","INPUT"].includes(n.tagName)||n.hasAttribute("contenteditable")):!1,dc=n=>ro.some(e=>{const{key:a,ctrl:o=!1,shift:i=!1,alt:r=!1}=e;return a===n.key&&o===n.ctrlKey&&i===n.shiftKey&&r===n.altKey}),Ec='<svg width="15" height="15" aria-label="Enter key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M12 3.53088v3c0 1-1 2-2 2H4M7 11.53088l-3-3 3-3"></path></g></svg>',_c='<svg width="15" height="15" aria-label="Arrow down" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 3.5v8M10.5 8.5l-3 3-3-3"></path></g></svg>',mc='<svg width="15" height="15" aria-label="Arrow up" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 11.5v-8M10.5 6.5l-3-3-3 3"></path></g></svg>',vc='<svg width="15" height="15" aria-label="Escape key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M13.6167 8.936c-.1065.3583-.6883.962-1.4875.962-.7993 0-1.653-.9165-1.653-2.1258v-.5678c0-1.2548.7896-2.1016 1.653-2.1016.8634 0 1.3601.4778 1.4875 1.0724M9 6c-.1352-.4735-.7506-.9219-1.46-.8972-.7092.0246-1.344.57-1.344 1.2166s.4198.8812 1.3445.9805C8.465 7.3992 8.968 7.9337 9 8.5c.032.5663-.454 1.398-1.4595 1.398C6.6593 9.898 6 9 5.963 8.4851m-1.4748.5368c-.2635.5941-.8099.876-1.5443.876s-1.7073-.6248-1.7073-2.204v-.4603c0-1.0416.721-2.131 1.7073-2.131.9864 0 1.6425 1.031 1.5443 2.2492h-2.956"></path></g></svg>',Ve=ro[0];var hc=T({name:"SearchBox",setup(){const n=kt(bt),e=en(Dt),a=V(!1),o=g(()=>Ve?[...(a.value?["⌘","⇧","⌥"]:["Ctrl","Shift","Alt"]).filter((i,r)=>Ve[["ctrl","shift","alt"][r]]),Ve.key.toUpperCase()]:null);return tn("keydown",i=>{!e.value&&dc(i)&&!uc(i.target)&&(i.preventDefault(),e.value=!0)}),J(()=>{const{userAgent:i}=navigator;a.value=Ql(i)||ql(i)||Gl(i)}),()=>[s("button",{class:"search-pro-button",role:"search","aria-label":n.value.search,onClick:()=>{e.value=!0}},[s(ft),s("div",{class:"placeholder"},n.value.search),o.value?s("div",{class:"key-hints"},o.value.map(i=>s("kbd",{class:"key"},i))):null])]}});const Ac=p({loader:()=>t(()=>import("./SearchResult-8a55ac1a.js"),["assets/SearchResult-8a55ac1a.js","assets/framework-39b9cf04.js"]),loadingComponent:()=>{const n=kt(bt);return s(oo,{hint:n.value.loading})}});var gc=T({name:"SearchModal",setup(){const n=en(Dt),e=Zn(),a=Wl(),o=kt(bt),{enabled:i,queryHistory:r}=lc(),l=V(""),c=V(),u=V(),d=it(u);return Y(n,_=>{_&&wn().then(()=>{var h;(h=c.value)==null||h.focus()})}),tn("keydown",_=>{n.value&&_.key==="Escape"&&(n.value=!1)}),J(()=>{u.value=document.body,Y(n,_=>{d.value=_})}),Je(()=>{d.value=!1}),()=>n.value?s("div",{class:"search-pro-modal-wrapper"},[s("div",{class:"background",onClick:()=>{n.value=!1,l.value=""}}),s("div",{class:"search-pro-modal"},[s("div",{class:"search-pro-box"},[s("form",[s("label",{for:"search-pro","aria-label":o.value.search},s(ft)),s("input",{ref:c,type:"search",class:"search-pro-input",id:"search-pro",placeholder:o.value.placeholder,spellcheck:"false",autocapitalize:"off",autocorrect:"off",autocomplete:i?"on":"off",name:`${e.value.title}-search`,list:"search-pro-dataset",value:l.value,"aria-controls":"search-pro-results",onInput:({target:_})=>{l.value=_.value}}),s("dataset",{id:"search-pro-dataset"},r.value.map(_=>s("options",{value:_})))]),s("button",{class:"close-button",onClick:()=>{n.value=!1,l.value=""}},o.value.cancel)]),s(Ac,{query:l.value,onClose:()=>{n.value=!1},onUpdateQuery:_=>{l.value=_}}),a.value?null:s("div",{class:"search-pro-hints"},[s("span",{class:"search-pro-hint"},[s("kbd",{innerHTML:Ec}),o.value.select]),s("span",{class:"search-pro-hint"},[s("kbd",{innerHTML:mc}),s("kbd",{innerHTML:_c}),o.value.navigate]),s("span",{class:"search-pro-hint"},[s("kbd",{innerHTML:vc}),o.value.exit])])])]):null}}),Bc=dn({enhance({app:n}){n.component("SearchBox",hc)},setup(){cc()},rootComponents:[gc]});const kc=n=>{if(window.dataLayer&&window.gtag)return;const e=document.createElement("script");e.src=`https://www.googletagmanager.com/gtag/js?id=${n.id}`,e.async=!0,document.head.appendChild(e),window.dataLayer=window.dataLayer||[],window.gtag=function(){dataLayer.push(arguments)},gtag("js",new Date),n.debug?gtag("config",n.id,{debug_mode:!0}):gtag("config",n.id)},fc={id:"G-RWKZTY2P9R"},bc=dn({enhance(){kc(fc)}}),Ee=[zo,sr,cr,dr,mr,gr,Dr,Fr,Nr,Hr,Qr,Ll,Ml,Bc,bc],Dc=[["v-3f9d0d55","/DailyRoutine.html",{y:"p",t:"每日仪式",i:"check"},["/DailyRoutine","/DailyRoutine.md"]],["v-3d0aa58a","/Fitness.html",{y:"p",t:"健身计划",i:"strong"},["/Fitness","/Fitness.md"]],["v-8daa1a0e","/",{d:"2023-04-25T04:26:30.000Z",e:`<blockquote>
<p>开源工具、技术融合自我提升笔记</p>
</blockquote>
<!-- TABLE OF CONTENTS 有序为<ol>，无序为<ul> -->
<details>
  <summary>Table of Contents</summary>
  <ul>
    <li><a href="#-初衷">✨ 初衷</a></li>
    <li><a href="#-笔记结构">🧱 笔记结构</a></li>
    <li><a href="#-内容管理工具">🍥 内容管理工具</a></li>
    <li><a href="#-目录介绍">🔣 目录介绍</a></li>
    <li><a href="#-特性">:📚 目录介绍</a></li>
    <li><a href="#-安装说明">:📌 安装说明</a></li>
  </ul>
</details>`,r:{minutes:7.64,words:2292},y:"a",t:"👋 你好，我是 Your_Name! 🚀"},["/index.html","/README.md"]],["v-35f5db9e","/blog.html",{y:"h",t:"工科小白",i:"home"},["/blog","/blog.md"]],["v-184f4da6","/intro.html",{y:"p",t:"个人介绍",i:"any"},["/intro","/intro.md"]],["v-cbac378e","/00Daily_Question/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%97%AE.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["头脑驿站"],g:["技巧","问题"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>作为一个电脑打交道的打工人，经常会需要用到各种工具，而且这次用了，下次又忘了，所以就想着把这些问题记录下来，方便自己以后查阅，也方便大家一起交流。</p>
</div>
<h1> 📅每日一问系列</h1>
<h3> <a href="/00Daily_Question/QandA/01.html" target="blank">01如何在指定目录下的文件名前面加上“0”+序号</a></h3>
<h3> <a href="/00Daily_Question/QandA/02.html" target="blank">02如何实现PDF合并?</a></h3>`,r:{minutes:.65,words:195},y:"a",t:"每日一问！目录",i:"📅",O:null},["/00Daily_Question/每日一问.html","/00Daily_Question/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%97%AE","/00Daily_Question/每日一问.md","/00Daily_Question/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%97%AE.md"]],["v-1b6f6622","/00Daily_Question/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/00Daily_Question/详情目录.html","/00Daily_Question/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/00Daily_Question/详情目录.md","/00Daily_Question/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-f2b510ca","/01Sensor/",{y:"h",t:"传感器"},["/01Sensor/index.html","/01Sensor/README.md"]],["v-5f23e614","/01Sensor/%E4%BC%A0%E6%84%9F%E5%99%A8%E7%AF%87.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["传感器"],g:["相机","硬件","图像处理"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>传感器是机器人和无人车中最重要的感知不部件，这篇文章讲解相机。</p>
</div>
<h1> 摄像机</h1>
<h3> 硬件知识</h3>
<p><strong>1、相机主要参数：</strong></p>
<p>分辨率、像素尺寸、帧率、像素深度、数字接口</p>
<p><strong>2、相机种类：</strong></p>
<p>（1）面阵相机和线阵相机</p>
<p>（2）CMOS和CCD</p>
<p>（3）黑白和彩色相机</p>
<p><strong>3、面阵相机的选型</strong></p>`,r:{minutes:12.76,words:3827},y:"a",t:"机器人、自动驾驶传感器概述",i:"robotics",O:null},["/01Sensor/传感器篇.html","/01Sensor/%E4%BC%A0%E6%84%9F%E5%99%A8%E7%AF%87","/01Sensor/传感器篇.md","/01Sensor/%E4%BC%A0%E6%84%9F%E5%99%A8%E7%AF%87.md"]],["v-73fd881e","/01Sensor/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/01Sensor/详情目录.html","/01Sensor/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/01Sensor/详情目录.md","/01Sensor/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-71abbcb8","/02Image_Processing/%E5%87%A0%E5%9D%97%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["图像处理"],g:["算法","图像处理"],e:`<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>图像处理的一般步骤：提取原始图像→灰度处理→滤波→边缘检测→图像分割→特征提取。</p>
</div>
<h2> 一、图像滤波</h2>
<p>1、平均滤波
2、中值滤波：对于消除椒盐噪声很有效
3、高斯滤波
4、BM3D滤波
5、双边滤波</p>
<h3> 基本原理</h3>
<p>1、<strong>中值滤波——非线性滤波</strong></p>
<p>用像素点领域灰度值的中值来代替该像素点的灰度值，<strong>该方法在去除脉冲噪声，椒盐噪声的同时又能保留图像的边缘细节</strong>，<strong>中值滤波去除椒盐噪声和斑块噪声时，效果非常明显。</strong></p>`,r:{minutes:26.95,words:8084},y:"a",t:"图像处理几块重点知识",i:"🧑",O:null},["/02Image_Processing/几块重点知识.html","/02Image_Processing/%E5%87%A0%E5%9D%97%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86","/02Image_Processing/几块重点知识.md","/02Image_Processing/%E5%87%A0%E5%9D%97%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86.md"]],["v-70468548","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E6%A6%82%E8%BF%B0.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["图像处理"],g:["算法","图像处理"],e:`<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>图像处理的一般步骤：提取原始图像→灰度处理→滤波→边缘检测→图像分割→特征提取。</p>
</div>
<h1> 〇、图像性质和表达</h1>
<h2> 0.1 基本概念</h2>
<aside> 🪁 灰度图像表示为两个变量的标量函数f(x,y),其中x,y是平面内的坐标 数字化图像的定义域是一个有限的离散山歌，器坐标是自然数。数字化图像的值域是一个有限的灰度值（亮度）的离散集合。像素是图像的基本单位。
</aside>
<h2> 0.2 图像数字化</h2>`,r:{minutes:48.57,words:14570},y:"a",t:"图像处理-冈萨雷斯",i:"🧑",O:null},["/02Image_Processing/图像处理概述.html","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E6%A6%82%E8%BF%B0","/02Image_Processing/图像处理概述.md","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E6%A6%82%E8%BF%B0.md"]],["v-1c922e62","/02Image_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/02Image_Processing/详情目录.html","/02Image_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/02Image_Processing/详情目录.md","/02Image_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-43e0343a","/03Computer_Vision/%E5%B2%97%E4%BD%8D%E8%A6%81%E6%B1%82.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["计算机视觉"],g:["算法","求职"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>求职</p>
</div>
<p>💡
1、 基础的图像去噪、纹理增强、对比度控制、颜色管理；</p>
<p>2、负责双摄和多摄的成像算法设计，包括相机立体标定、深度计算、背景虚化、图像融合等；</p>
<p>3、负责图像处理和计算机视觉方向的算法研发，包括但不限于相机标定、图像拼接、图像复原、图像增强、生物识别、图像或视频的分类、检测、跟踪、分割等技术领域；</p>
<p>4、具有相机成像原理、数字图像处理、计算机视觉、图形学、机器学习等基础知识</p>`,r:{minutes:.72,words:217},y:"a",t:"计算机视觉岗位要求",i:"🧑",O:null},["/03Computer_Vision/岗位要求.html","/03Computer_Vision/%E5%B2%97%E4%BD%8D%E8%A6%81%E6%B1%82","/03Computer_Vision/岗位要求.md","/03Computer_Vision/%E5%B2%97%E4%BD%8D%E8%A6%81%E6%B1%82.md"]],["v-14c29da6","/03Computer_Vision/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/03Computer_Vision/详情目录.html","/03Computer_Vision/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/03Computer_Vision/详情目录.md","/03Computer_Vision/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-b5397e12","/04Optimization_Algorithm/%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["计算机视觉"],g:["算法","优化方法"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>优化方法概述</p>
</div>
<p>**作用：**最优化就是用来解决复杂函数的极值问题</p>
<h3> 主要方法</h3>
<p>1、一阶方法：梯度下降法、最速下降法</p>
<p>2、二阶方法：牛顿法、拟牛顿法（构造一个近似的黑赛尔矩阵用于牛顿迭代）、高斯牛顿法（高斯—牛顿法不需要求解Hessian二阶信息）</p>
`,r:{minutes:.41,words:124},y:"a",t:"优化方法概述",i:"🧑",O:null},["/04Optimization_Algorithm/优化方法概述.html","/04Optimization_Algorithm/%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0","/04Optimization_Algorithm/优化方法概述.md","/04Optimization_Algorithm/%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0.md"]],["v-08d39477","/04Optimization_Algorithm/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/04Optimization_Algorithm/详情目录.html","/04Optimization_Algorithm/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/04Optimization_Algorithm/详情目录.md","/04Optimization_Algorithm/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-ce610fb2","/05Point_Cloud_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/05Point_Cloud_Processing/详情目录.html","/05Point_Cloud_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/05Point_Cloud_Processing/详情目录.md","/05Point_Cloud_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-f324007c","/06SLAM/SLAM%E6%A6%82%E8%BF%B0.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["SLAM"],g:["算法","SLAM"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>SLAM概述</p>
</div>
<h3> 经典SLAM：<strong>视觉里程计、后端优化、回环检测、建图</strong></h3>
<h3> 1、三维刚体运动：主要内容就是坐标</h3>
<p>理解左乘是基于自身坐标系，右乘是基于基坐标系</p>
<h3> 3、相机和图像：针孔相机模型、3D视觉</h3>
<figure><figcaption></figcaption></figure>
<figure><figcaption></figcaption></figure>`,r:{minutes:2.07,words:621},y:"a",t:"SLAM概述",i:"🧑",O:null},["/06SLAM/SLAM概述.html","/06SLAM/SLAM%E6%A6%82%E8%BF%B0","/06SLAM/SLAM概述.md","/06SLAM/SLAM%E6%A6%82%E8%BF%B0.md"]],["v-47a7673e","/06SLAM/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/06SLAM/详情目录.html","/06SLAM/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/06SLAM/详情目录.md","/06SLAM/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-08ca3814","/07Math_Basic/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/07Math_Basic/详情目录.html","/07Math_Basic/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/07Math_Basic/详情目录.md","/07Math_Basic/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-a08b6ee0","/08AI_Machine_Learning_Deep_Learning/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["人工智能"],g:["算法","深度学习"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>深度学习常用框架</p>
</div>
<h1> 深度学习常用框架</h1>
<p>深度学习框架的出现降低了入门的门槛，你不需要从复杂的神经网络开始编代码，你可以根据需要选择已有的模型，通过训练得到模型参数，你也可以在已有模型的基础上增加自己的layer，或者是在顶端选择自己需要的分类器和优化算法（比如常用的梯度下降法）。</p>
<blockquote>
<p>总的来说深度学习框架提供了一些列的深度学习的组件（对于通用的算法，里面会有实现），当需要使用新的算法的时候就需要用户自己去定义，然后调用深度学习框架的函数接口使用用户自定义的新算法。</p>
</blockquote>`,r:{minutes:2.65,words:795},y:"a",t:"深度学习常用框架",i:"🧑",O:null},["/08AI_Machine_Learning_Deep_Learning/深度学习常用框架.html","/08AI_Machine_Learning_Deep_Learning/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6","/08AI_Machine_Learning_Deep_Learning/深度学习常用框架.md","/08AI_Machine_Learning_Deep_Learning/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6.md"]],["v-25e12d9b","/08AI_Machine_Learning_Deep_Learning/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/08AI_Machine_Learning_Deep_Learning/详情目录.html","/08AI_Machine_Learning_Deep_Learning/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/08AI_Machine_Learning_Deep_Learning/详情目录.md","/08AI_Machine_Learning_Deep_Learning/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-54bd8ca5","/09Embedded_Development/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/09Embedded_Development/详情目录.html","/09Embedded_Development/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/09Embedded_Development/详情目录.md","/09Embedded_Development/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-409dbff8","/10Robotics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/10Robotics/详情目录.html","/10Robotics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/10Robotics/详情目录.md","/10Robotics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-0c685ccf","/11Automatic_Driving/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%A1%86%E6%9E%B6.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 自动驾驶概述</h1>
<figure><figcaption></figcaption></figure>
<h3> <a href="https://blog.csdn.net/weixin_47196664/article/details/106866502?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164941622316781685393295%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=164941622316781685393295&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-8-106866502.142%5Ev7%5Epc_search_result_cache,157%5Ev4%5Econtrol&amp;utm_term=%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%AE%97%E6%B3%95&amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener noreferrer">全自动驾驶资源大合集</a></h3>`,r:{minutes:4.23,words:1268},y:"a",t:"自动驾驶概述"},["/11Automatic_Driving/自动驾驶框架.html","/11Automatic_Driving/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%A1%86%E6%9E%B6","/11Automatic_Driving/自动驾驶框架.md","/11Automatic_Driving/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%A1%86%E6%9E%B6.md"]],["v-a85882fc","/11Automatic_Driving/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%A6%82%E8%BF%B0.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["自动驾驶"],g:["算法","感知"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>自动驾驶概述</p>
</div>
<h1> 1、自动驾驶主要分为感知、定位、决策、控制</h1>
<h1> 2、自动驾驶常见的传感器类型</h1>
<figure><figcaption></figcaption></figure>
<p>1）激光雷达的测距精度、测距范围及对温度和光照的适应性都很厉害，缺点就是太贵；</p>
<p>2）相机对环境细节信息的提取能力吊炸天，但是光照影响太大，晚上就瞎了；</p>
<p>3）<a href="https://www.zhihu.com/search?q=%E6%AF%AB%E7%B1%B3%E6%B3%A2&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1851149672%7D" target="_blank" rel="noopener noreferrer">毫米波</a>最大优点探测角度比较大，抗干扰性强，性能比较稳定，另外也不贵，缺点就是分辨率和精度跟不上。
4）<a href="https://www.zhihu.com/search?q=%E8%B6%85%E5%A3%B0%E6%B3%A2%E9%9B%B7%E8%BE%BE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1851149672%7D" target="_blank" rel="noopener noreferrer">超声波雷达</a>最牛逼的地方是便宜，倒车防撞提醒用的一般是这个，一台车上装十个成本才一百块钱，精度也是最差的，不过低速倒车3m左右足够了。
5）红外优点不是很明显，主要就是晚上比较好用，智驾方案里不算标配，很多传感器方案都没有这个，这里就不过多提了。</p>`,r:{minutes:18.9,words:5670},y:"a",t:"自动驾驶概述",i:"🧑",O:null},["/11Automatic_Driving/自动驾驶概述.html","/11Automatic_Driving/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%A6%82%E8%BF%B0","/11Automatic_Driving/自动驾驶概述.md","/11Automatic_Driving/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%A6%82%E8%BF%B0.md"]],["v-67b64117","/11Automatic_Driving/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/11Automatic_Driving/详情目录.html","/11Automatic_Driving/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/11Automatic_Driving/详情目录.md","/11Automatic_Driving/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-70b4f572","/12C_plus_plus/C__%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C plus"],g:["算法","C plus"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>C++个人项目经验</p>
</div>
<aside> 🪁 （1）使用c++练习一些数据结构和算法题目 （2）使用C++进行相机标定 设置标定板角点数量→读取图像→利用findChessboardCorners识别角点（*harris，_高斯滤波+非极大值抑制）→亚像素精细化→保存角点图像坐标→初始化标定板上的三维坐标→calibrateCamera函数开始标定（张正友标定法）→通过得到的内外参数对三维点进行重投影计算，计算重投影误差进行评价 （3）使用C++进行简单的工业相机多线程开发，采用激光三角法进行钢带平整度检测。 启动系统后，相机开始采集图像，将图像信息放入任务队列，这个队列负责保存相机取得的图像，而图像处理的线程负责从这个队列里取图，然后进行自适应阈值处理，二值化，然后进行中值滤波、形态学处理以及边缘检测等预处理_,,*再通过灰度质心法和圆拟合等图像处理操作，得到激光光斑的中心位置坐标和直径大小。再结合激光三角法测距模型，换算成平直度参数。 （4）利用C++开发小目标跟踪MFC程序 基于天空背景下的红外弱小目标的提取，通过对视频连续探测，输出探测飞机图像框中心坐标。采用opencv中的CSRT、MIL、KCF等多种跟踪算法 对小目标进行跟踪。具体步骤为：实例化跟踪器Tracker，选取一个ROI目标，在跟踪器上初始化这个RIO目标，然后开始跟踪目标，画出目标框，输出目标中心坐标。
<p>这类方法一般都是在追踪过程中训练一个目标跟踪器，使用目标分类器去预测下一帧目标位置，即分类器的最大响应输出值，然后再通过输出结果的区域样本作为当前帧的训练样本，持续不断地更新目标跟踪器的参数，进而预测下一时刻的输出值。算法实现主要分为以下三部分：相关滤波器训练、目标位置检测、相关滤波器更新。 特征提取：采用<strong>HOG方向梯度图</strong>和<strong>CN颜色特征</strong>融合进行提取</p>
</aside>`,r:{minutes:2.13,words:640},y:"a",t:"个人项目经验",i:"🧑",O:null},["/12C_plus_plus/C__个人经验.html","/12C_plus_plus/C__%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C","/12C_plus_plus/C++个人经验.html","/12C_plus_plus/C++%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.html","/12C_plus_plus/C++个人经验.md","/12C_plus_plus/C++%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.md"]],["v-0cb8adde","/12C_plus_plus/C__%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C plus"],g:["算法","C plus"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>C++面试常见问题</p>
</div>
<ul>
<li>
<p>进程通信方式</p>
<p>包括管道（有名管道和无名管道）、消息队列、共享内存、信号量和套接字。其中前四个属于同一台机器下进程间的通信，套接字则是用于网络通信。</p>
</li>
<li>
<p>动态分区
</p>
</li>
<li>
<p>虚拟技术</p>
<p>主要有两种虚拟技术：时分复用技术和空分复用技术。</p>
<p>多进程与多线程：多个进程能在同一个处理器上并发执行使用了时分复用技术，让每个进程轮流占用处理器，每次只执行一小个时间片并快速切换。</p>
<p>虚拟内存使用了空分复用技术，它将物理内存抽象为地址空间，每个进程都有各自的地址空间。</p>
</li>
<li>
<p><strong><strong>逻辑地址转换为物理地址的基本过程</strong></strong></p>
<figure><figcaption></figcaption></figure>
<p>例:若页面大小L为1K字节，页号2对应的内存块号b=8，将逻辑地址A=2500转换为物理地址E。 等价描述：某系统按字节寻址，逻辑地址结构中，页内偏移量占10位(说明一个页面的大小为2^10B = 1KB)，页号2对应的内存块号 b=8，将逻辑地址A=2500转换为物理地址E。</p>
<blockquote>
<p>①计算页号、页内偏移量 页号P=A/L = 2500/1024 = 2; 页内偏移量W= A%L = 2500%1024 = 452</p>
<p>②根据题中条件可知，页号2没有越界，其存放的内存块号b=8</p>
<p>③物理地址E=b*L+W=8 * 1024+ 425 = 8644</p>
<p>在分页存储管理(页式管理)的系统中，只要确定了每个页面的大小，逻辑地址结构就确定了。因此，页式管理中地址是-维的。即，只要给出一个逻辑地址，系统就可以自动地算出页号、页内偏移量两个部分，并不需要显式地告诉系统这个逻辑地址中，页内偏移量占多少位。</p>
</blockquote>
<figure><figcaption></figcaption></figure>
</li>
<li>
<p>三次握手</p>
<p>客户端向服务器发送一个包（第一次握手）然后收到服务器的应答（第二次）那客户端就知道<strong>自己能发能收</strong>而且<strong>服务器能发能收。</strong></p>
<p>服务器收到第一次握手后，发送第二次握手，<strong>服务器知道客户端能发</strong>，但是<strong>服务器不知道客户端收到第二次握手报文</strong>没有，就是不知道客户端能不能收。</p>
<p>第三次就是客户端告诉服务器，说自己收到了<strong>第二次握手</strong>，所以服务器就知道客户端收到了第二次，就知道了<strong>客户端能收</strong></p>
</li>
<li>
<p>四次挥手</p>
<p>A 和 B 打电话，通话即将结束后，A 说“我没啥要说的了”，B回答“我知道了”，但是 B 可能还会有要说的话，A 不能要求 B 跟着自己的节奏结束通话，于是 B 可能又巴拉巴拉说了一通，最后 B 说“我说完了”，A 回答“知道了”，这样通话才算结束。</p>
</li>
<li>
<p>内存读写</p>
<p>有了cache，CPU不再直接与内存打交道，因此CPU直接写cache，但此时就会有一个问题，那就是cache中的值更新了，但内存中的值还是旧的，这就是所谓的不一致问题。
</p>
<p>最简单的方法是这样的，当我们更新cache时一并把内存也更新了，这种方法被称为 write-through。</p>
<p>如果当CPU写cache时，cache中没有相应的内存数据该怎么呢？这就有点麻烦了，首先我们需要把该数据从内存加载到cache中，然后更新cache，再然后更新内存。</p>
<figure><figcaption></figcaption></figure>
<p>在这种方案下&nbsp;<strong>写内存就不得不访问内存，速度比较慢。</strong></p>
<p>不是因为写内存慢，更重要的原因是CPU在同步等待，因此很自然的，这类问题的统一解法就是把同步改为异步。</p>
<p>异步的这种方法是这样的，当CPU写内存时，直接更新cache，然后，注意，更新完cache后CPU就可以认为写内存的操作已经完成了，尽管此时内存中保存的还是旧数据。</p>
<p>当包含该数据的cache块被剔除时再更新到内存中，这样CPU更新cache与更新内存就解耦了，也就是说，CPU更新cache后不再等待内存更新，这就是异步，这种方案也被称之为write-back，这种方案相比write-through来说更复杂，但很显然，性能会更好。</p>
<figure><figcaption></figcaption></figure>
<p>CPU和内存之间会有一个层cache，但当CPU有多个核心后新的问题来了：</p>
<p>现在假设内存中有一变量X，初始值为2。</p>
<p>系统中有两个CPU核心C1和C2，现在C1和C2要分别读取内存中X的值，根据cache的工作原理，首次读取X不能命中cache，因此从内存中读取到X后更新相应的cache，现在C1 cache和C2 cache中都有变量X了，其值都是2。</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/db24c307-372f-407c-84a6-3387f492f4e8/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p>接下来C1需要对X执行+2操作，同样根据cache的工作原理，C1从cache中拿到X的值+2后更新cache，在然后更新内存，此时C1 cache和内存中的X值都变为了4。</p>
<p>然后C2也许需要对X执行加法操作，假设需要+4，同样根据cache的工作原理，C2从cache中拿到X的值+4后更新cache，此时cache中的值变为了6（2+4），再更新内存，此时C2 cache和内存中的X值都变为了6。</p>
<figure><figcaption></figcaption></figure>
<p>一个初始值为2的变量，在分别+2和+4后正确的结果应该是2+2+4 = 8，但从上图可以看出&nbsp;<strong>内存中X的值却为6</strong>，问题出在哪了呢？</p>
<p>有的同学可能已经发现了，问题出在了内存中一个X变量&nbsp;<strong>在C1和C2的cache中有共计两个副本，当C1更新cache时没有同步修改C2 cache中X的值</strong>。</p>
<figure><figcaption></figcaption></figure>
<p>显然，如果一个cache中待更新的变量同样存在于其它核心的cache，那么你需要一并将其它cache也更新好。</p>
</li>
<li>
<p>static关键字</p>
<p>类外：</p>
<p>1、 隐藏，只能在当前文件使用，不能被其他文件使用</p>
<p>2、默认为0</p>
<p>3、在函数内定义，始终存在，返回后不清空</p>
<p>类内：</p>
<p>静态成员函数和静态成员变量属于类，不属于类的实体，这样可以被多个对象所共享</p>
<p>1、静态成员变量，类内定义，类外初始化</p>
<p>2、静态成员变量，类外不能访问</p>
<p>3、静态成员函数，没有this，只能访问静态变量和静态函数</p>
<p>4、非静态成员函数可以任意访问</p>
</li>
<li>
<p>1、多态</p>
<p>在基类的函数前加上<strong>virtual</strong>关键字，在派生类中重写该函数，运行时将会根据所指对象的实际类型来调用相应的函数，如果对象类型是派生类，就调用派生类的函数，如果对象类型是基类，就调用基类的函数。</p>
</li>
<li>
<p>2、内存泄漏</p>
<p>内存泄漏(memory leak)是指由于疏忽或错误造成了程序未能释放掉不再使⽤的内存的情况。内存泄漏并⾮指内存在物理上的消失，⽽是应⽤程序分配某段内存后，由于设计错误，失去了对该段内存的控制，因⽽造成了内存的浪费。 如何避免？将内存的分配封装在类中，构造函数分配内存，析构函数释放内存；使⽤智能指针</p>
</li>
<li>
<p>3、线程和进程</p>
<aside> 🪁 1.进程：进程是操作系统中**资源分配**的基本单位,可以看成是程序的一次运行。 2.线程：线程是操作系统中**调度执行**的基本单位 区别和联系：
<p>1、进程是资源分配的基本单位，线程是任务调度执行的基本单位。 2、进程之间的资源是独立的，线程之间的资源则是共享的。 3、进程的创建/销毁/调度开销大，线程的创建/销毁/调度开销相对少很多。 4、进程的上下文切换速度比较慢，而线程的上下文切换速度比较快。 5、多个进程同时执行时，如果一个进程崩溃，一般不会影响其他进程，而同一进程内的多个线程之间，如果一个线程崩溃，很可能使得整个进程崩溃。 6.一个进程可以<strong>包含多个线程</strong>，<strong>线程</strong>在进程的内部。 7.每个进程都有<strong>独立的虚拟<a href="https://so.csdn.net/so/search?q=%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">地址空间</a></strong>，也有之间独立的文件描述符表，同一<strong>进程的多个线程</strong>之间则共用这一份虚拟地址空间和文件描述符表。</p>
</aside>
</li>
<li>
<p>4、TCP/UDP区别</p>
<p>由于 TCP 是面向连接，能保证数据的可靠性交付，因此经常用于：</p>
<ul>
<li><code>FTP</code>&nbsp;文件传输；</li>
<li>HTTP / HTTPS；</li>
</ul>
<p>由于 UDP 面向无连接，它可以随时发送数据，再加上UDP本身的处理既简单又高效，因此经常用于：</p>
<ul>
<li>
<p>包总量较少的通信，如&nbsp;<code>DNS</code>&nbsp;、<code>SNMP</code>&nbsp;等；</p>
</li>
<li>
<p>视频、音频等多媒体通信；</p>
</li>
<li>
<p>广播通信；</p>
</li>
<li>
<p>七个区别</p>
<p><em>1. 连接</em></p>
<ul>
<li>TCP 是面向连接的传输层协议，传输数据前先要建立连接。</li>
<li>UDP 是不需要连接，即刻传输数据。</li>
</ul>
<p><em>2. 服务对象</em></p>
<ul>
<li>TCP 是一对一的两点服务，即一条连接只有两个端点。</li>
<li>UDP 支持一对一、一对多、多对多的交互通信</li>
</ul>
<p><em>3. 可靠性</em></p>
<ul>
<li>TCP 是可靠交付数据的，数据可以无差错、不丢失、不重复、按序到达。</li>
<li>UDP 是尽最大努力交付，不保证可靠交付数据。</li>
</ul>
<p><em>4. 拥塞控制、流量控制</em></p>
<ul>
<li>TCP 有拥塞控制和流量控制机制，保证数据传输的安全性。</li>
<li>UDP 则没有，即使网络非常拥堵了，也不会影响 UDP 的发送速率。</li>
</ul>
<p><em>5. 首部开销</em></p>
<ul>
<li>TCP 首部长度较长，会有一定的开销，首部在没有使用「选项」字段时是&nbsp;<code>20</code>&nbsp;个字节，如果使用了「选项」字段则会变长的。</li>
<li>UDP 首部只有 8 个字节，并且是固定不变的，开销较小。</li>
</ul>
<p><em>6. 传输方式</em></p>
<ul>
<li>TCP 是流式传输，没有边界，但保证顺序和可靠。</li>
<li>UDP 是一个包一个包的发送，是有边界的，但可能会丢包和乱序。</li>
</ul>
<p><em>7. 分片不同</em></p>
<ul>
<li>TCP 的数据大小如果大于 MSS 大小，则会在传输层进行分片，目标主机收到后，也同样在传输层组装 TCP 数据包，如果中途丢失了一个分片，只需要传输丢失的这个分片。</li>
<li>UDP 的数据大小如果大于 MTU 大小，则会在 IP 层进行分片，目标主机收到后，在 IP 层组装完数据，接着再传给传输层。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>5、三次握手四次挥手，为什么不是五次</p>
<p>因为三次握手才能保证双方具有接收和发送的能力。更重要的是：</p>
<ul>
<li>三次握手才可以阻止重复历史连接的初始化（主要原因）</li>
<li>三次握手才可以同步双方的初始序列号</li>
<li>三次握手才可以避免资源浪费</li>
</ul>
<p>四次挥手双方发&nbsp;<code>FIN</code>&nbsp;包的过程，就能理解为什么需要四次了。</p>
<ul>
<li>关闭连接时，客户端向服务端发送&nbsp;<code>FIN</code>&nbsp;时，仅仅表示客户端不再发送数据了但是还能接收数据。</li>
<li>服务器收到客户端的&nbsp;<code>FIN</code>&nbsp;报文时，先回一个&nbsp;<code>ACK</code>&nbsp;应答报文，而服务端可能还有数据需要处理和发送，等服务端不再发送数据时，才发送&nbsp;<code>FIN</code>&nbsp;报文给客户端来表示同意现在关闭连接。</li>
</ul>
<p>从上面过程可知，服务端通常需要等待完成数据的发送和处理，所以服务端的&nbsp;<code>ACK</code>&nbsp;和&nbsp;<code>FIN</code>&nbsp;一般都会分开发送，因此是需要四次挥手。</p>
</li>
<li>
<p>6、内存管理、内存分区</p>
<p>C++中的内存分区，分别是堆、栈、自由存储区、全局/静态存储区、常量存储区和代码区。如下图所示
</p>
<p><strong>栈</strong>：在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放。栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限</p>
<p><strong>堆</strong>：就是那些由&nbsp;<code>new</code>分配的内存块，他们的释放编译器不去管，由我们的应用程序去控制，一般一个<code>new</code>就要对应一个&nbsp;<code>delete</code>。如果程序员没有释放掉，那么在程序结束后，操作系统会自动回收</p>
<p><strong>自由存储区</strong>：如果说堆是操作系统维护的一块内存，那么自由存储区就是C++中通过new和delete动态分配和释放对象的抽象概念。需要注意的是，自由存储区和堆比较像，但不等价。</p>
<p><strong>全局/静态存储区</strong>：全局变量和静态变量被分配到同一块内存中，在以前的C语言中，全局变量和静态变量又分为初始化的和未初始化的，在C++里面没有这个区分了，它们共同占用同一块内存区，在该区定义的变量若没有初始化，则会被自动初始化，例如int型变量自动初始为0</p>
<p><strong>常量存储区</strong>：这是一块比较特殊的存储区，这里面存放的是常量，不允许修改</p>
<p><strong>代码区</strong>：存放函数体的二进制代码</p>
</li>
<li>
<p>7、进程间通信方式、socket能不能进行本地通信</p>
<figure><figcaption></figcaption></figure>
<p>前面提到的管道、消息队列、共享内存、信号量和信号都是在同一台主机上进行进程间通信，那要想<strong>跨网络与不同主机上的进程之间通信，就需要 Socket 通信了。</strong></p>
<p>实际上，Socket 通信不仅可以跨网络与不同主机的进程间通信，还可以在同主机上进程间通信。</p>
</li>
<li>
<p>8、list、queue、vector时间复杂度，空间复杂</p>
<p><a href="https://blog.csdn.net/like_that/article/details/98446479" target="_blank" rel="noopener noreferrer"></a><a href="https://blog.csdn.net/like_that/article/details/98446479" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/like_that/article/details/98446479</a></p>
</li>
<li>
<p>9、C++常用特性</p>
<ul>
<li>nullptr替代 NULL</li>
<li>引入了 auto 和 decltype 这两个关键字实现了类型推导</li>
<li>基于范围的 for 循环for(auto&amp; i : res){}</li>
<li>类和结构体的中初始化列表（可以不使用=号）</li>
</ul>
</li>
<li>
<p>智能指针</p>
<p>C++STL共提供了四个智能指针: auto_ptr, unique_ptr,shared_ptr, weak_ptr 其中C++11只支持后三个，C++98支持所有四个</p>
<p>使用普通指针，容易造成堆内存泄露（忘记释放），二次释放，程序发生异常时内存泄露等问题等，使用智能指针能更好的管理堆内存。 shared_ptr使用引用计数，每一个shared_ptr的拷贝都指向相同的内存。每使用他一次，内部的引用计数加1，每析构一次，内部的引用计数减1，减为0时，自动删除所指向的堆内存。</p>
<p><strong>weak_ptr是用来解决shared_ptr相互引用时的死锁问题</strong> ,如果说两个shared_ptr相互引用,那么这两个指针的引用计数永远不可能下降为0,资源永远不会释放；</p>
</li>
<li>
<p>10、C++定义空类，编译器会自动补全哪些函数</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token function">Empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 缺省构造函数//</span>
<span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">Empty</span><span class="token punctuation">(</span> <span class="token keyword">const</span> Empty<span class="token operator">&amp;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 拷贝构造函数//</span>
<span class="token number">3</span><span class="token punctuation">)</span>  <span class="token operator">~</span><span class="token function">Empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 析构函数//</span>
<span class="token number">4</span><span class="token punctuation">)</span>  Empty<span class="token operator">&amp;</span> <span class="token keyword">operator</span><span class="token operator">=</span><span class="token punctuation">(</span> <span class="token keyword">const</span> Empty<span class="token operator">&amp;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 赋值运算符//</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>11、虚拟内存</p>
<p><strong>操作系统会提供一种机制，将不同进程的虚拟地址和不同内存的物理地址映射起来。</strong></p>
<ul>
<li>我们程序所使用的内存地址叫做<strong>虚拟内存地址</strong>（<em>Virtual Memory Address</em>）</li>
<li>实际存在硬件里面的空间地址叫<strong>物理内存地址</strong>（<em>Physical Memory Address</em>）。</li>
</ul>
</li>
<li>
<p>堆和栈的区别</p>
<aside> 💡 **特点：** 堆，队列优先，先进先出 栈，先进后出
<p><strong>1、堆栈空间分配</strong> 　　<strong>栈</strong>（操作系统）：由<strong>操作系统自动分配释放</strong> ，存放函数的参数值，<strong>局部变量的值</strong>等。其操作方式类似于数据结构中的栈。 　　<strong>堆</strong>（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表 <strong>2、堆栈缓存方式</strong> 　　栈使用的是<strong>一级缓存</strong>， 他们通常都是被调用时处于存储空间中，调用完毕立即释放。 　　堆则是存放在<strong>二级缓存</strong>中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的<strong>速度要相对来得低</strong>一些。 <strong>3、堆栈数据结构区别</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>      栈（数据结构）：一种先进后出的**数据结构**。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>堆（数据结构）：堆可以被看成是<strong>一棵树</strong>，如：堆排序。</p>
</aside>
</li>
<li>
<p>虚函数、纯虚函数</p>
<p>虚函数是为了实现动态编联产生的，目的是通过基类类型的指针指向不同对象时，自动调用相应的、和基类同名的函数 纯虚函数只是相当于一个接口名，但含有纯虚函数的类不能够实例化，纯虚函数首先是虚函数，其次它没有函数体，取而代之的是用“=0”。</p>
</li>
<li>
<p>C++和python的区别
||python|C++|
|-|-|-|
||脚本语言，解释执行|编译语言|
||跨平台，效率较低|一般不能跨平台，因为不同|
|格式|缩进|括号，分号|
|变量|不需要事先定义，有数字、布尔值、字符串、列表、元组|需要事先定义|
|库|不需要事先定义，有数字、布尔值、字符串、列表、元组|比较少|
C++和c的区别
||c|C++|
|-|-|-|
||面向过程|面向对象|
||struct|增加类|
|||引用|
||在函数开头部分|允许变量定义语句在程序中的任何地方|
|||字符数组|字符串|
|||关键字using、namespace|</p>
</li>
<li>
<p>指针和引用的区别</p>
<figure><figcaption></figcaption></figure>
</li>
<li>
<p>一、线程和进程区别</p>
<p>1、进程是资源分配的基本单位，线程是任务调度执行的基本单位。 2、进程之间的资源是独立的，线程之间的资源则是共享的。 3、进程的创建/销毁/调度开销大，线程的创建/销毁/调度开销相对少很多。 4、进程的上下文切换速度比较慢，而线程的上下文切换速度比较快。 5、多个进程同时执行时，如果一个进程崩溃，一般不会影响其他进程，而同一进程内的多个线程之间，如果一个线程崩溃，很可能使得整个进程崩溃。</p>
</li>
<li>
<p>二、多态</p>
<p>在基类的函数前加上virtual关键字，在派生类中重写该函数，运行时将会根据所指对象的实际类型来调用相应的函数，如果对象类型是派生类，就调用派生类的函数，如果对象类型是基类，就调用基类的函数。</p>
</li>
<li>
<p>三、内存泄漏</p>
<p>内存泄漏(memory leak)是指由于疏忽或错误造成了程序未能释放掉不再使⽤的内存的情况。内存泄漏并⾮指内存在物理上的消失，⽽是应⽤程序分配某段内存后，由于设计错误，失去了对该段内存的控制，因⽽造成了内存的浪费。 如何避免？将内存的分配封装在类中，构造函数分配内存，析构函数释放内存；使⽤智能指针。</p>
</li>
<li>
<p>四、 static关键字</p>
<p>类外： 1、隐藏，只能在当前文件使用，不能被其他文件使用 2、默认为0 3、在函数内定义，始终存在，返回后不清空 类内： 静态成员函数和静态成员变量属于类，不属于类的实体，这样可以被多个对象所共享 1、静态成员变量，类内定义，类外初始化 2、静态成员变量，类外不能访问 3、静态成员函数，没有this，只能访问静态变量和静态函数 4、非静态成员函数可以任意访问</p>
</li>
<li>
<p>1、线程进程区别：</p>
<aside> 💡 1.进程：进程是操作系统中**资源分配**的基本单位,可以看成是程序的一次运行。 2.线程：线程是操作系统中**调度执行**的基本单位。一个线程是一个“执行流”，每个线程之间都可以按照**顺序执行自己的代码**，多个线程**“同时”执行多份代码**。
<p>区别和联系： 1.一个进程可以<strong>包含多个线程</strong>，<strong>线程</strong>在进程的内部。 2.进程之间的<strong>资源是独立</strong>的，线程之间的<strong>资源则是共享</strong>的。 3.每个进程都有<strong>独立的虚拟<a href="https://so.csdn.net/so/search?q=%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">地址空间</a></strong>，也有之间独立的文件描述符表，同一<strong>进程的多个线程</strong>之间则共用这一份虚拟地址空间和文件描述符表。 4.进程是<strong>资源分配的基本单位</strong>，线程是<strong>操调度执行的基本单位</strong>。 5.<strong>多个进程同时执行时</strong>，<strong>如果一个进程崩溃，一般不会影响其他进程</strong>，而<strong>同一进程内的多个线程之间，如果一个线程崩溃</strong>，很可能使得整个进程崩溃。</p>
<p>6.进程的<strong>上下文切换速度比较慢</strong>，而<strong>线程的上下文切换速度比较快</strong>。</p>
<p>7.进程的<strong>创建/销毁/调度开销大</strong>，<strong>线程的创建/销毁/调度开销相对少</strong>很多。</p>
</aside>
</li>
<li>
<p>2、堆和栈的区别：</p>
<aside> 💡 **特点：** 堆是队列优先，先进先出 栈，先进后出
<p><strong>1、堆栈空间分配</strong> 　　<strong>栈</strong>（操作系统）：由<strong>操作系统自动分配释放</strong> ，存放函数的参数值，<strong>局部变量的值</strong>等。其操作方式类似于数据结构中的栈。 　　<strong>堆</strong>（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表 <strong>2、堆栈缓存方式</strong> 　　栈使用的是<strong>一级缓存</strong>， 他们通常都是被调用时处于存储空间中，调用完毕立即释放。 　　堆则是存放在<strong>二级缓存</strong>中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的<strong>速度要相对来得低</strong>一些。 <strong>3、堆栈数据结构区别</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>      栈（数据结构）：一种先进后出的**数据结构**。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>堆（数据结构）：堆可以被看成是<strong>一棵树</strong>，如：堆排序。</p>
</aside>
</li>
<li>
<p>3、也是堆和栈</p>
<aside> 🪁
<p><strong>管理方式不同：</strong></p>
<p>对于栈来讲，是由编译器自动管理，无需我们手工控制； 对于堆来说，释放工作由程序员控制，容易产生memory leak。 空间大小不同：</p>
<p>一般来讲在32位系统下，堆内存可以达到4G的空间，从这个角度来看堆内存几乎是没有什么限制的。 对于栈来讲，一般都是有一定的空间大小的。默认的栈空间大小是1M了。不过可以修改其大小。</p>
<p><strong>能否产生碎片不同：</strong></p>
<p>对于堆来讲，频繁的new/delete势必会造成内存空间的不连续，从而造成大量的碎片，使程序效率降低。 对于栈来讲，则不会存在这个问题，因为栈是先进后出的队列，他们是如此的一一对应，以至于永远都不可能有一个内存块从栈中间弹出，在他弹出之前，在他上面的后进的栈内容已经被弹出。</p>
<p><strong>生长方向不同：</strong></p>
<p>对于堆来讲，生长方向是向上的，也就是向着内存地址增加的方向； 对于栈来讲，它的生长方向是向下的，是向着内存地址减小的方向增长。</p>
<p><strong>分配方式不同：</strong></p>
<p>堆都是动态分配的，没有静态分配的堆。 栈有2种分配方式：静态分配和动态分配。静态分配是编译器完成的，比如局部变量的分配。动态分配由allocal 函数进行分配，但是栈的动态分配和堆是不同的，他的动态分配是由编译器进行释放，无需我们手工实现。</p>
<p><strong>分配效率不同：</strong></p>
<p>栈是机器系统提供的数据结构，计算机会在底层对栈提供支持：分配专门的寄存器存放栈的地址，压栈出栈都有专门的指令执行，这就决定了栈的效率比较高。 堆则是C/C++函数库提供的，它的机制是很复杂的，例如为了分配一块内存，库函数会按照一定的算法（具体的算法可以参考数据结构/操作系统）在堆内存中搜索可用的足够大小的空间，如果没有足够大小的空间（可能是由于内存碎片太多），就有可能调用系统功能去增加程序数据段的内存空间，这样就有机会分到足够大小的内存，然后进行返回。显然，堆的效率比栈要低得多。</p>
</aside>
</li>
<li>
<p>4、声明、定义、初始化</p>
<p><strong>声明</strong>：告诉编译器该变量存在，不分配内存空间，可以多次声明</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">/*extern关键字声明，不分配存储空间，一般位于多文件中工程中，声明在.h文件*/</span>
<span class="token keyword">extern</span> <span class="token keyword">int</span> a<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>定义</strong>：只能定义一次，创建了一个类型对象，为类型对象分配内存空间。</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">/*定义  分配存储空间   在单个文件中没有声明和定义的区分，声明就是定义，统称为定义，多文件中将声明和定义区别*/</span>
<span class="token keyword">int</span> a<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>初始化</strong>：在定义变量以后，系统为变量分配的空间内存储的值是不确定的，所以需要对这个空间进行初始化，以确保程序的安全性和确定性，给变量赋默认值。</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">/*声明+定义+初始化，通常直接叫做初始化。分配存储空间*/</span>
<span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在类或者结构体中变量的声明、定义、初始化和赋值：</p>
<aside> 🪁 在类中**定义和初始化**统称为初始化（分配空间）；
<p>类或者结构体只是一个模板（Template），<strong>编译后不占用内存空间</strong>，书写好类模版实际上只是声明该类（包含类成员变量和函数的声明），不占用存储空间。只有在<strong>创建对象以后才会给成员变量分配内存</strong>，这个时候就可以赋值了。</p>
<p>类的成员变量和普通变量一样，也有数据类型和名称，占用固定长度的内存。但是，在<strong>定义类模版</strong>的时候<strong>不能对成员变量分配空间初始化或者赋值</strong>，因为类只是一种数据类型或者说是一种模板，本身不占用内存空间，而<strong>变量的值</strong>则需要内存来存储。</p>
</aside>
<p>c++规定<strong>类的静态成员变量在类中声明，类外初始化（分配空间赋值）</strong>；<strong>静态成员是单独存储的，并不是对象的组成部分</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
     <span class="token keyword">static</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token comment">//声明</span>
     <span class="token function">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         n <span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//构造函数第二段 计算赋值</span>
     <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> A<span class="token double-colon punctuation">::</span>n<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//初始化（分配存储空间）</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        A a<span class="token punctuation">;</span>
        cout<span class="token operator">&lt;&lt;</span> a<span class="token punctuation">.</span>n<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//以下会报错</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>
		<span class="token comment">//static int n=1;//也不可以，反正静态是不能在里面进行初始化的</span>
     <span class="token function">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         n <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        A a<span class="token punctuation">;</span>
        cout<span class="token operator">&lt;&lt;</span> a<span class="token punctuation">.</span>n<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>C++类中const静态成员变量可以直接初始化</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
     <span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span>
     <span class="token function">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> A<span class="token double-colon punctuation">::</span>m<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        A a<span class="token punctuation">;</span>
        cout<span class="token operator">&lt;&lt;</span> a<span class="token punctuation">.</span>m<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//或者直接类中初始化写,都是可以的</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
     <span class="token function">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        A a<span class="token punctuation">;</span>
        cout<span class="token operator">&lt;&lt;</span> a<span class="token punctuation">.</span>m<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>5、<strong><strong>define、const、typedef、inline的使用方法？他们之间有什么区别？</strong></strong>
| 符号 | const | #define | typedef | inline |
| --- | --- | --- | --- | --- |
| 定义 | 定义常量 | 定义常量、变量、编译开关等 | 定义类型的别名 | 定义函数 |
| 是否是关键字 | 是 | 否 | 否 | 否 |
| 是否是函数 | 否 | 否 | 否 | 是 |
| 带类型/不带类型 | 带类型 | 不带类型 | 带类型 | 带类型 |
| 执行时间 | 运行时 | 预处理阶段 | 编译阶段 | 运行时 |
| 阶段 | 编译、链接阶段 | 编译阶段 | 预处理阶段 | 编译阶段 |
| 类型检查 | 有类型检查 | 无类型检查 | 有类型检查 | 有类型检查 |
| 替换方式 | 无类型替换 | 文本替换 | 无类型替换 | 无类型替换 |
| 占用空间 | 占用数据段空间 | 预处理后占用代码空间 | 占用数据段空间 | 占用代码段空间 |
| 功能 | 定义常量 | 定义常量、变量、编译开关等 | 定义类型的别名，与struct的结合使用 | 定义函数 |
| 作用域 | 有自己的作用域 | 没有作用域的限制，只要是之前预定义过的宏，在以后的程序中都可以使用 | 有自己的作用域 | 有自己的作用域 |</p>
</li>
<li>
<p>6、<strong><strong>strcpy、sprintf与memcpy使用</strong></strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"../bits/stdc++.h"</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> dst<span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    string str<span class="token operator">=</span><span class="token string">"world"</span><span class="token punctuation">;</span>
    <span class="token comment">//sizeof() 可以以类型、指针、数组和函数等作为参数，</span>
    <span class="token comment">//其值在编译时计算，用于获取操作数所占空间的字节数大小。</span>
    <span class="token comment">// sizeof求得的结果是存储该字符串的变量占用的空间大小，</span>
    <span class="token comment">// 因而一定会包括’\\\\0’.若’\\\\0’后还有空余的空间，也会包含到结果里面</span>
    cout<span class="token operator">&lt;&lt;</span><span class="token string">"sizeof(str):"</span><span class="token operator">&lt;&lt;</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"获取的是字符指针大小"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
    <span class="token comment">// size()函数以及length()函数都用于计算字符串（string）长度，</span>
    <span class="token comment">// 不能用char*作为参数。除此之外，size()函数还可以获取vector类型的长度。</span>
    cout<span class="token operator">&lt;&lt;</span><span class="token string">"str.size():"</span><span class="token operator">&lt;&lt;</span>str<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
    cout<span class="token operator">&lt;&lt;</span><span class="token string">"str.length():"</span><span class="token operator">&lt;&lt;</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>  
    <span class="token comment">// strlen()函数其参数只能为char*（字符型指针），</span>
    <span class="token comment">// 所以在计算字符数组（char str[ ])时，一般用strlen()函数</span>
    cout<span class="token operator">&lt;&lt;</span><span class="token string">"strlen(dst):"</span><span class="token operator">&lt;&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
    
     cout<span class="token operator">&lt;&lt;</span>str<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
     <span class="token function">sprintf</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token string">"hello%s"</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">//strlen函数求得的字符串长度是从字符串第一个元素到第一个’\\\\0’之间元素的个数</span>
     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s size:%d\\\\n"</span><span class="token punctuation">,</span> dst<span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token comment">//可以看出，sprintf()只能传入字符数组或者字符串，不能传入string 串名</span>
     <span class="token keyword">char</span> <span class="token operator">*</span>str2<span class="token operator">=</span><span class="token string">"world"</span><span class="token punctuation">;</span>
     <span class="token function">sprintf</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token string">"hello %s\\\\n"</span><span class="token punctuation">,</span> str2<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">//strlen函数求得的字符串长度是从字符串第一个元素到第一个’\\\\0’之间元素的个数</span>
     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%ssize:%d\\\\n"</span><span class="token punctuation">,</span> dst<span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// char *strcpy(char *dest , const char *src);</span>
     <span class="token function">strcpy</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
     cout<span class="token operator">&lt;&lt;</span>dst<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>

    <span class="token comment">//  void *memcpy(void *destin , void *source , unsigned n);</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span>str2<span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout<span class="token operator">&lt;&lt;</span>dst<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>7、auto、decltype</p>
<p><strong>auto 让编译器通过初始值来进行类型推演。从而获得定义变量的类型，auto 定义的变量必须有初始值。</strong></p>
<p><strong>择并返回操作数的数据类型。在此过程中，编译器只是分析表达式并得到它的类型，却不进行实际的计算表达式的值。</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//普通；类型</span>
<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span><span class="token comment">// c为int型</span>

<span class="token comment">//普通类型</span>
<span class="token keyword">decltype</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> sum <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// sum的类型是函数func()的返回值的类型int, 但是这时不会实际调用函数func()</span>
<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">decltype</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// a的类型是int, 所以b的类型也是int</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>8、lambda表达式</p>
<p><code>[捕获列表] (函数参数) **mutable** 或 exception 声明 **-&gt;** 返回值类型 {函数体}</code></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">auto</span> plus <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token function">plus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"iostream"</span></span>

 <span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
    <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span><span class="token operator">:</span>
        <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"test hello!\\\\n"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">lambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">auto</span> fun <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token comment">// 捕获了 this 指针</span>
            <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 这里 this 调用的就是 class Test 的对象了</span>
            <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

 <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 定义一个简单的lambda表达式</span>
        <span class="token keyword">auto</span> basicLamda <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"hello world!"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token function">basicLamda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 调用</span>
        <span class="token comment">// 如果需要参数，那么就要像函数那样，放在圆括号里面，如果有返回值，返回类型要放在-&gt;后面，即拖尾返回类型</span>
        <span class="token comment">// 当然你也可以忽略返回类型，lambda会帮你自动推断出返回类型</span>
        <span class="token keyword">auto</span> add <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">int</span> <span class="token punctuation">{</span><span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"result = "</span> <span class="token operator">&lt;&lt;</span> result <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token comment">// 自动推断出返回类型</span>
        <span class="token keyword">auto</span> multiply <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> a <span class="token operator">*</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> result1 <span class="token operator">=</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"result1 = "</span> <span class="token operator">&lt;&lt;</span> result1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token comment">// 1、什么也不捕获，或者是故意不用 Lambda 函数外部的变量</span>
        <span class="token keyword">int</span>  i <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
        <span class="token comment">// auto f = []{cout &lt;&lt; "i = " &lt;&lt; i &lt;&lt; endl; }; 报错!应该使用了lambda函数外部的变量</span>
        <span class="token keyword">auto</span> f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"i = "</span> <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// 使用传值的方式使用外lambda函数外部的变量i</span>
        <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 调用函数</span>
        <span class="token comment">// 2、引用捕捉</span>
        <span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token number">666</span><span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"变量i1的引用: "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>i1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token keyword">auto</span> f1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"变量i1的引用: "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>i1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3、复制并引用捕获</span>
        <span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token number">777</span><span class="token punctuation">,</span> j2 <span class="token operator">=</span> <span class="token number">888</span><span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"i2 = "</span> <span class="token operator">&lt;&lt;</span> i2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"j2 = "</span> <span class="token operator">&lt;&lt;</span> j2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token keyword">auto</span> f2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>i2<span class="token punctuation">]</span> <span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"i2 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>i2 <span class="token operator">&lt;&lt;</span> <span class="token string">" ,j2 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>j2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// 默认拷贝外部所有变量，但引用变量i2</span>
        <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4、指定引用或复制</span>
        <span class="token keyword">int</span> i3 <span class="token operator">=</span> <span class="token number">444</span><span class="token punctuation">,</span> j3 <span class="token operator">=</span> <span class="token number">555</span><span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"外部变量i3 = "</span> <span class="token operator">&lt;&lt;</span> i3 <span class="token operator">&lt;&lt;</span> <span class="token string">" i3的地址是: "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>i3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token keyword">auto</span> f3 <span class="token operator">=</span> <span class="token punctuation">[</span>i3<span class="token punctuation">]</span> <span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"内部变量i3 = "</span> <span class="token operator">&lt;&lt;</span> i3 <span class="token operator">&lt;&lt;</span> <span class="token string">" i3的地址是: "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>i3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5、捕获this指针</span>
        Test t<span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">lambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>9、<strong>前向迭代器</strong>、<strong>双向迭代器</strong>、<strong>随机访问迭代器</strong></p>
<p>**前向迭代器：**假设 p 是一个前向迭代器，则 p 支持 ++p，p++，*p 操作，还可以被复制或赋值，可以用 == 和 != 运算符进行比较。此外，两个正向迭代器可以互相赋值。</p>
<p>**双向迭代器：**具有正向迭代器的全部功能，除此之外，假设 p 是一个双向迭代器，则还可以进行 --p 或者 p-- 操作（即一次向后移动一个位置）。</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b429eacb-4176-459a-a73f-b374f6868645/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p><strong>随机访问迭代器：随机访问迭代器具有双向迭代器的全部功能。除此之外，假设 p 是一个随机访问迭代器，也就是可以下标访问</strong></p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ea611237-d491-4093-9399-cd61c0c0523e/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
</li>
<li>
<p>测试岗的要求</p>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 程序语言编译原理</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 操作系统底层原理</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 动态语言工作原理</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 性能和安全等测试</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 自动化系统的能力</label></li>
</ul>
<p>一、软件测试的定义：通过人工或自动化的方式来验证软件的实际结果与用户是否一致的过程</p>
<p>二、软件测试流程：</p>
<p>1）测试准备阶段：所有人一起参与需求分析</p>
<p>2）测试计划阶段：测试经理编写测试计划，需要多长时间来完成</p>
<p>3）测试设计阶段：寻找测试点、编写测试用例（用例评审）</p>
<p>4）测试执行阶段：（开发提测后）冒烟测试 执行测试用例（提bug）（回归测试）</p>
<p>5）测试完成阶段：编写测试报告 线上测试（回归测试）</p>
<p>三、软件测试的分类</p>
<p>1）按技术划分：</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3f9ec5c8-bacf-485f-9f3e-d3416a5099ce/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p>黑盒测试（不用了解程序的源代码，通过使用整个软件功能来检验程序是否满意）</p>
<p>白盒测试（是一种按照程序内部逻辑结构和编码结构设计测试数据并完成测试的测试方法）</p>
<p>灰盒测试（一种基于程序运行时的外部表现同时又结合程序内部结构来设计测试数据的测试方法）</p>
<p>单元测试（对一个模块、一个函数或者一个类来进行正确性来检验）</p>
<p>集成测试（单元测试完成后，将单元测试的模块按照设计要求组装成为子系统或系统，作为整体进行测试）</p>
<p>系统测试（集成测试后，将硬件、软件看作一个整体，对系统的功能及性能的总体测试）</p>
<p>验收测试（系统测试后以用户测试为主，或有测试人员共同参与检验软件质量的测试方法）</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/26a204ea-91c6-44f8-9591-25fc062360af/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p>功能测试（根据产品操作描述和需求，测试一个产品的特性和操作行为是否满意用户的需求）</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3658c191-4861-451f-b6e1-e9cf9556f881/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p>性能测试（通过自动化测试工具模拟多种正常、峰值以及异常负载条件对系统的各项指标进行校验的测试方法）</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b6d74069-1deb-47e7-aea4-b0838443fb42/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p>兼容性测试：检测设计的程序与硬件、软件之间的兼容性的测试方法</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6c74220f-f813-40bd-a6a6-a6ff76b66c35/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p>冒烟测试：是验证系统的核心功能是否能够正常运行的测试方法</p>
<p>随机测试：随机测试主要是根据测试者的经验无需测试用例对软件进行功能和性能抽查的测试方法 安全性测试：通过不同的测试方法，检验程序、网络、数据库安全性的测试方法 探索性测试：碰到问题时能随机应变，强调测试人员的主观能动性明确整体的测试计划的测试方法</p>
<p>回归测试：是指修改了旧代码后，重新进行测试以确认修改没有引入新的错误或导致其他代码产生错误 的测试方法</p>
<p>Alpha测试是测试人员在内部环境下的测试 Beta测试是一个或多个用户在生产环境下进行的测试</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b0890c1a-7871-4fb8-988a-20518f7c81c9/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
<p>四、软件开发模型</p>
<p>1、瀑布模型</p>
<figure><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f17a5cb7-0ad2-45e1-b869-930e366e7781/Untitled.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>
</li>
<li>
<p>并行编程、CUDA加速、内核优先、linux操作系统-商汤</p>
</li>
</ul>`,r:{minutes:32.22,words:9666},y:"a",t:"C++面试常见问题",i:"🧑",O:null},["/12C_plus_plus/C__面试常见问题.html","/12C_plus_plus/C__%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98","/12C_plus_plus/C++面试常见问题.html","/12C_plus_plus/C++%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html","/12C_plus_plus/C++面试常见问题.md","/12C_plus_plus/C++%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md"]],["v-6661285a","/12C_plus_plus/%E5%AE%B9%E5%99%A8%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C plus"],g:["算法","C plus"],e:`<p>::: tips
容器应用知识
:::</p>
<h1> 容器应用知识</h1>
<p>Created: September 2, 2022 1:12 PM</p>
<h1> 一、全能库</h1>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:43.51,words:13053},y:"a",t:"容器应用知识",i:"🧑",O:null},["/12C_plus_plus/容器应用知识.html","/12C_plus_plus/%E5%AE%B9%E5%99%A8%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86","/12C_plus_plus/容器应用知识.md","/12C_plus_plus/%E5%AE%B9%E5%99%A8%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86.md"]],["v-3c4f39c8","/12C_plus_plus/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C++"],g:["算法","C++"],e:`<p>::: tips
查找算法
:::</p>
<ul>
<li>
<p><strong>find_if(iterator beg, iterator end, _Pred);</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string&gt;</span></span>

<span class="token comment">//常用查找算法：find_if</span>

<span class="token comment">//1. 查找内置数据类型</span>
<span class="token keyword">class</span> <span class="token class-name">GreaterFive</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	<span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span> val <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span>v<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">//查找容器中是否有大于5的元素</span>
	vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> <span class="token function">find_if</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">GreaterFive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">==</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"未找到大于5的元素！"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"找到大于5的元素："</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>it <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//2. 查找自定义数据类型（必须重载==）</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	<span class="token function">Person</span><span class="token punctuation">(</span>string name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token operator">-&gt;</span>m_Name <span class="token operator">=</span> name<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token operator">-&gt;</span>m_Age <span class="token operator">=</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//重载==使得底层find知道如何对比Person数据类型</span>
	<span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token keyword">const</span> Person <span class="token operator">&amp;</span>p<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">-&gt;</span>m_Name <span class="token operator">==</span> p<span class="token punctuation">.</span>m_Name<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token operator">-&gt;</span>m_Age <span class="token operator">==</span> p<span class="token punctuation">.</span>m_Age<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	string m_Name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> m_Age<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Greater20</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	<span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Person <span class="token operator">&amp;</span>p<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span> p<span class="token punctuation">.</span>m_Age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	vector<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span>v<span class="token punctuation">;</span>

	<span class="token comment">//创建数据</span>
	Person <span class="token function">p1</span><span class="token punctuation">(</span><span class="token string">"aaa"</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Person <span class="token function">p2</span><span class="token punctuation">(</span><span class="token string">"bbb"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Person <span class="token function">p3</span><span class="token punctuation">(</span><span class="token string">"ccc"</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Person <span class="token function">p4</span><span class="token punctuation">(</span><span class="token string">"ddd"</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//放到容器中</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p4<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//查找容器中是否有年龄大于20的人</span>
	vector<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> <span class="token function">find_if</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Greater20</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">==</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"未找到年龄大于20的人！"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"找到年龄大于20的人！姓名："</span> <span class="token operator">&lt;&lt;</span> it<span class="token operator">-&gt;</span>m_Name <span class="token operator">&lt;&lt;</span> <span class="token string">"    年龄："</span> <span class="token operator">&lt;&lt;</span> it<span class="token operator">-&gt;</span>m_Age <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>adjacent_find(iterator beg, iterator end);</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string&gt;</span></span>

<span class="token comment">//常用查找算法：adjacent_find</span>

<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span>v<span class="token punctuation">;</span>

	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//查找容器中是否有相邻重复元素</span>
	vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> <span class="token function">adjacent_find</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">==</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"未找到相邻重复元素！"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"找到相邻重复元素："</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>it <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>count_if(iterator beg, iterator end, _Pred);</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string&gt;</span></span>

<span class="token comment">//常用查找算法：count_if</span>

<span class="token comment">//1. 统计内置数据类型</span>
<span class="token keyword">class</span> <span class="token class-name">Greater20</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	<span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span> val <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span>v<span class="token punctuation">;</span>

	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//统计大于20的元素的个数</span>
	<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token function">count_if</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Greater20</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"大于20的元素个数为："</span> <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//2. 统计自定义数据类型</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	<span class="token function">Person</span><span class="token punctuation">(</span>string name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token operator">-&gt;</span>m_Name <span class="token operator">=</span> name<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token operator">-&gt;</span>m_Age <span class="token operator">=</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	string m_Name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> m_Age<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">AgeGreater20</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	<span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Person <span class="token operator">&amp;</span>p<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span> p<span class="token punctuation">.</span>m_Age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	vector<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span>v<span class="token punctuation">;</span>
	
	Person <span class="token function">p1</span><span class="token punctuation">(</span><span class="token string">"刘备"</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Person <span class="token function">p2</span><span class="token punctuation">(</span><span class="token string">"关羽"</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Person <span class="token function">p3</span><span class="token punctuation">(</span><span class="token string">"张飞"</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Person <span class="token function">p4</span><span class="token punctuation">(</span><span class="token string">"赵云"</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Person <span class="token function">p5</span><span class="token punctuation">(</span><span class="token string">"曹操"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p4<span class="token punctuation">)</span><span class="token punctuation">;</span>
	v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p5<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">//统计大于20岁的人员个数</span>
	<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token function">count_if</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">AgeGreater20</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"年龄大于20岁的人员个数为："</span> <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>random_shuffle(iterator beg, iterator end);</strong></p>
</li>
</ul>`,r:{minutes:2.68,words:805},y:"a",t:"查找算法",i:"🧑",O:null},["/12C_plus_plus/查找算法.html","/12C_plus_plus/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95","/12C_plus_plus/查找算法.md","/12C_plus_plus/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95.md"]],["v-38689776","/12C_plus_plus/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C plus"],g:["算法","C plus"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>计算机重要知识</p>
</div>
<h1> 计算机重要知识</h1>
<p>Created: September 15, 2022 8:35 AM</p>
<h3> 进制计算</h3>
<p><strong>1、二进制转十进制：</strong></p>
<blockquote>
<p>例如二进制的：101001转换过程：1<em>2<sup>0+0*2</sup>1+0</em>2<sup>2+1*2</sup>3+0*2<sup>4+1*2</sup>5=1+8+32=41结果：41</p>
</blockquote>`,r:{minutes:5.98,words:1794},y:"a",t:"计算机重要知识",i:"🧑",O:null},["/12C_plus_plus/计算机基础知识.html","/12C_plus_plus/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86","/12C_plus_plus/计算机基础知识.md","/12C_plus_plus/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md"]],["v-983620b4","/12C_plus_plus/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/12C_plus_plus/详情目录.html","/12C_plus_plus/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/12C_plus_plus/详情目录.md","/12C_plus_plus/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-34885982","/12C_plus_plus/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E3%80%81%E5%A4%A7%E6%95%B0%E8%BF%90%E7%AE%97.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C plus"],g:["算法","C plus"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>进制转换、字符串操、大数运算</p>
</div>
<h1> 进制转换、字符串操、大数运算</h1>
<h1> 一、进制转换</h1>
<h2> 1.1 itoa</h2>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">char</span><span class="token operator">*</span><span class="token function">itoa</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span>string<span class="token punctuation">,</span><span class="token keyword">int</span> radix<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  
<span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token function">_itoa</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//c++中一般用_itoa，用itoa也行,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.02,words:1206},y:"a",t:"进制转换、字符串操、大数运算",i:"🧑",O:null},["/12C_plus_plus/进制转换、字符串操、大数运算.html","/12C_plus_plus/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E3%80%81%E5%A4%A7%E6%95%B0%E8%BF%90%E7%AE%97","/12C_plus_plus/进制转换、字符串操、大数运算.md","/12C_plus_plus/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E3%80%81%E5%A4%A7%E6%95%B0%E8%BF%90%E7%AE%97.md"]],["v-216f4be0","/13Python/Python%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["Python"],g:["算法","Python"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Python个人经验</p>
</div>
<p>爬虫、词云、文件批处理、人脸识别、目标追踪、相机标定</p>
<ul>
<li>
<p>你用Python做过一些什么？</p>
<p>（1）词频分析，通过准备好的汉语词库，去网站爬取法语、英语完成翻译(BeautifulSoup)，同时给汉语标上拼音（pypinyin），加上中英文释义。</p>
<p>（2） MaskRCNN 实例分割</p>
<p>（3）小目标动态跟踪</p>
<p>（4）用python进行人脸识别： 利用opencv、FaceRecognition、dlib包，准备几张图片，放入一个文件夹，开始训练，利用一张新的图片进行预测，采用人脸定位函数获取人脸位置，画上方框，贴上标签。</p>
</li>
</ul>`,r:{minutes:.61,words:182},y:"a",t:"Python个人经验",i:"🧑",O:null},["/13Python/Python个人经验.html","/13Python/Python%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C","/13Python/Python个人经验.md","/13Python/Python%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.md"]],["v-55c868b4","/13Python/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/13Python/详情目录.html","/13Python/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/13Python/详情目录.md","/13Python/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-6960f508","/14Matlab/Matlab_Personal_Experience.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["Matlab"],g:["算法","Matlab"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Matlab个人经验</p>
</div>
<h2> 对Matlab的掌握情况</h2>
<p>1、能够利用matlab进行数据处理和分析，包括常见的数值分析、傅里叶变换和滤波、误差的分析等等</p>
<p>2、能够利用matlab进行各类图形的绘制</p>
<p>3、利用matlab进行图像处理任务：
（1）**相机标定：**估算相机内参、外参和镜头畸变参数</p>
<p>（2）<strong><strong>几何变换和图像配准</strong></strong></p>`,r:{minutes:.97,words:292},y:"a",t:"Matlab个人经验",i:"🧑",O:null},["/14Matlab/Matlab_Personal_Experience","/14Matlab/Matlab_Personal_Experience.md"]],["v-b1fac674","/14Matlab/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/14Matlab/详情目录.html","/14Matlab/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/14Matlab/详情目录.md","/14Matlab/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-e2af76be","/15Linux/Docker.html",{y:"p",t:"Docker",i:"any",O:4},["/15Linux/Docker","/15Linux/Docker.md"]],["v-1af0691c","/15Linux/Huginn.html",{y:"p",t:"Huginn",i:"customize",O:2},["/15Linux/Huginn","/15Linux/Huginn.md"]],["v-20fdbfbe","/15Linux/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8.html",{d:"2023-04-26T10:25:41.000Z",e:`<p><a href="https://m.runoob.com/linux/linux-command-manual.html" target="_blank" rel="noopener noreferrer">Linux 命令大全 | 菜鸟教程 (runoob.com)</a></p>
`,r:{minutes:.05,words:16},y:"a",t:""},["/15Linux/Linux命令大全.html","/15Linux/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8","/15Linux/Linux命令大全.md","/15Linux/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8.md"]],["v-db1b8a5e","/15Linux/NAS.html",{y:"p",t:"NAS",i:"process",O:1},["/15Linux/NAS","/15Linux/NAS.md"]],["v-e1627542","/15Linux/TTRSS.html",{y:"p",t:"Tiny Tiny RSS",i:"rss",O:3},["/15Linux/TTRSS","/15Linux/TTRSS.md"]],["v-126b6205","/15Linux/linux%E5%9F%BA%E7%A1%80.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 基本操作</h2>
<figure><figcaption></figcaption></figure>
<p>1、更新apt，yum源</p>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> ubuntu</label></li>
<li>apt update</li>
<li>apt install vim</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> centos</label></li>
<li>yum update</li>
<li>yum install vim
2、查看文件系统磁盘使用情况统计</li>
<li>df -h</li>
<li><figcaption></figcaption></li>
</ul>`,r:{minutes:2.48,words:743},y:"a",t:""},["/15Linux/linux基础.html","/15Linux/linux%E5%9F%BA%E7%A1%80","/15Linux/linux基础.md","/15Linux/linux%E5%9F%BA%E7%A1%80.md"]],["v-0a266134","/15Linux/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/15Linux/详情目录.html","/15Linux/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/15Linux/详情目录.md","/15Linux/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-4b876903","/16ROS/ROS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C++"],g:["算法","linux"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>ROS学习笔记</p>
</div>
<h1> 一、学习网站</h1>
<p><a href="http://wiki.ros.org/ROS/Tutorials" target="_blank" rel="noopener noreferrer">http://wiki.ros.org/ROS/Tutorials</a></p>
<h1> 二、ROS安装过程</h1>
<p>![[../15Linux/ubuntu/photo/1.png]]
![[../15Linux/ubuntu/photo/2.png]]</p>`,r:{minutes:2.29,words:687},y:"a",t:"ROS学习笔记",i:"🧑",O:null},["/16ROS/ROS学习笔记.html","/16ROS/ROS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0","/16ROS/ROS学习笔记.md","/16ROS/ROS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md"]],["v-3b9795f5","/16ROS/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/16ROS/详情目录.html","/16ROS/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/16ROS/详情目录.md","/16ROS/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-61953c47","/17Computer_Basics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/17Computer_Basics/详情目录.html","/17Computer_Basics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/17Computer_Basics/详情目录.md","/17Computer_Basics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-4c82cb4a","/18Data_Structure/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/18Data_Structure/详情目录.html","/18Data_Structure/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/18Data_Structure/详情目录.md","/18Data_Structure/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-6a8e50a4","/19Network_Programming/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/19Network_Programming/详情目录.html","/19Network_Programming/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/19Network_Programming/详情目录.md","/19Network_Programming/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-acd854b2","/20Mechanical_Engineering/%E6%9C%BA%E6%A2%B0%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>1、能够使用CAD进行常见任务的二维图的绘制</p>
<p>2、能使用Solidwork进行三维图绘制、结构运动学、动力学仿真、空气动力学、受力分析等等</p>
<p>3、能使用Ansys对机械结构进行流体力学仿真和分析</p>
`,r:{minutes:.24,words:73},y:"a",t:""},["/20Mechanical_Engineering/机械个人经验.html","/20Mechanical_Engineering/%E6%9C%BA%E6%A2%B0%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C","/20Mechanical_Engineering/机械个人经验.md","/20Mechanical_Engineering/%E6%9C%BA%E6%A2%B0%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C.md"]],["v-76997a97","/20Mechanical_Engineering/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/20Mechanical_Engineering/详情目录.html","/20Mechanical_Engineering/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/20Mechanical_Engineering/详情目录.md","/20Mechanical_Engineering/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-41edfa86","/21Circuit_Electronics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/21Circuit_Electronics/详情目录.html","/21Circuit_Electronics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/21Circuit_Electronics/详情目录.md","/21Circuit_Electronics/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-6be267ce","/22Signal_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/22Signal_Processing/详情目录.html","/22Signal_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/22Signal_Processing/详情目录.md","/22Signal_Processing/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-0038f2fb","/23SoftWare/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["软件"],g:["算法","vscode"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>计算机常见问题</p>
</div>
<h2> cd无效</h2>
<figure><figcaption></figcaption></figure>
<h2> 环境变量</h2>
<pre><code>一般在环境变量里添加bin路径
</code></pre>
<h2> include</h2>
<pre><code>\`\`\`cpp
用include 引用头文件时，双引号和尖括号的区别：

1.双引号：引用非标准库的头文件，编译器首先在程序源文件所在目录查找，如果未找到，则去系统默认目录查找，通常用于引用用户自定义的头文件。

2.尖扩号：只在系统默认目录（在Linux系统中通常为/usr/include目录）或者尖括号内的路径查找，通常用于引用标准库中自带的头文件。

综上，标准库自带的头文件既可以用双引号也可以用尖括号，不过习惯使用尖括号，用户自定义的头文件只能用双引号。
\`\`\`
</code></pre>`,r:{minutes:.94,words:282},y:"a",t:"计算机常见问题",i:"🧑",O:null},["/23SoftWare/计算机常见问题.html","/23SoftWare/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98","/23SoftWare/计算机常见问题.md","/23SoftWare/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md"]],["v-0716ff7e","/23SoftWare/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/23SoftWare/详情目录.html","/23SoftWare/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/23SoftWare/详情目录.md","/23SoftWare/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-98addf5e","/24Windows/NewSystem.html",{y:"p",t:"系统重装",i:"update",O:2},["/24Windows/NewSystem","/24Windows/NewSystem.md"]],["v-44a8fb1e","/24Windows/QTTabBar.html",{y:"p",t:"QTTabBar",i:"tab",O:3},["/24Windows/QTTabBar","/24Windows/QTTabBar.md"]],["v-5587baac","/24Windows/faq.html",{y:"p",t:"Windows",i:"windows",O:1},["/24Windows/faq","/24Windows/faq.md"]],["v-44f90a36","/24Windows/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/24Windows/详情目录.html","/24Windows/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/24Windows/详情目录.md","/24Windows/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-12f6ea90","/25apps/AppNotes.html",{y:"p",t:"工具笔记",i:"plugin",O:4},["/25apps/AppNotes","/25apps/AppNotes.md"]],["v-76999b1b","/25apps/Applist.html",{y:"p",t:"必备应用",i:"list",O:1},["/25apps/Applist","/25apps/Applist.md"]],["v-1a9ff8b2","/25apps/ChatGPT.html",{y:"p",t:"ChatGPT",i:"creative",O:2},["/25apps/ChatGPT","/25apps/ChatGPT.md"]],["v-5920455e","/25apps/Chrome.html",{y:"p",t:"Chrome 扩展",i:"chrome",O:5},["/25apps/Chrome","/25apps/Chrome.md"]],["v-b69ace8c","/25apps/design.html",{y:"p",t:"平面设计",i:"pic",O:3},["/25apps/design","/25apps/design.md"]],["v-e2eb686a","/25apps/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/25apps/详情目录.html","/25apps/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/25apps/详情目录.md","/25apps/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-6a34da33","/26code/AutoHotkey.html",{y:"p",t:"AutoHotkey",i:"linter",O:4},["/26code/AutoHotkey","/26code/AutoHotkey.md"]],["v-4556bd9c","/26code/Electron.html",{y:"p",t:"Electron",i:"layout",O:7},["/26code/Electron","/26code/Electron.md"]],["v-76febaae","/26code/HTML.html",{y:"p",t:"HTML",i:"html",O:1},["/26code/HTML","/26code/HTML.md"]],["v-32f0a9c7","/26code/Javascript.html",{y:"p",t:"JavaScript",i:"javascript",O:2},["/26code/Javascript","/26code/Javascript.md"]],["v-59faba45","/26code/Markdown.html",{y:"p",t:"Markdown",i:"markdown",O:5},["/26code/Markdown","/26code/Markdown.md"]],["v-0488f538","/26code/Python.html",{y:"p",t:"Python",i:"python",O:3},["/26code/Python","/26code/Python.md"]],["v-20c9c705","/26code/",{y:"p",t:"Coding",i:"code"},["/26code/index.html","/26code/README.md"]],["v-6167c5d7","/26code/Regex.html",{y:"p",t:"正则表达式",i:"regexp",O:6},["/26code/Regex","/26code/Regex.md"]],["v-2159d138","/26code/Vue.html",{y:"p",t:"Vue",i:"vue",O:2},["/26code/Vue","/26code/Vue.md"]],["v-2fa9cbc7","/26code/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/26code/详情目录.html","/26code/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/26code/详情目录.md","/26code/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-f2437614","/27deploy/Cloudflare.html",{y:"p",t:"Cloudflare",i:"proxy",O:4},["/27deploy/Cloudflare","/27deploy/Cloudflare.md"]],["v-247cbeda","/27deploy/DNS.html",{y:"p",t:"域名 DNS 托管",i:"sitemap",O:5},["/27deploy/DNS","/27deploy/DNS.md"]],["v-6b3525a8","/27deploy/GitHub.html",{y:"p",t:"GitHub",i:"github",O:3},["/27deploy/GitHub","/27deploy/GitHub.md"]],["v-b661953e","/27deploy/Static.html",{y:"p",t:"静态部署",i:"generic",O:1},["/27deploy/Static","/27deploy/Static.md"]],["v-47c345ec","/27deploy/VPS.html",{y:"p",t:"服务器 VPS",i:"IO",O:2},["/27deploy/VPS","/27deploy/VPS.md"]],["v-0b5295fc","/27deploy/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/27deploy/详情目录.html","/27deploy/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/27deploy/详情目录.md","/27deploy/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-390aeeac","/28LifeNotes/Coupon.html",{y:"p",t:"网购攻略",i:"free",O:3},["/28LifeNotes/Coupon","/28LifeNotes/Coupon.md"]],["v-f189b148","/28LifeNotes/Diet.html",{y:"p",t:"健康饮食",i:"enum",O:1},["/28LifeNotes/Diet","/28LifeNotes/Diet.md"]],["v-43061c7a","/28LifeNotes/HomeAutomation.html",{y:"p",t:"智能家居",i:"home",O:3.1},["/28LifeNotes/HomeAutomation","/28LifeNotes/HomeAutomation.md"]],["v-44ac2954","/28LifeNotes/Life.html",{y:"p",t:"生活窍门",i:"creative",O:6},["/28LifeNotes/Life","/28LifeNotes/Life.md"]],["v-45a6d3cf","/28LifeNotes/Maintenance.html",{y:"p",t:"维修/保养",i:"repair",O:5},["/28LifeNotes/Maintenance","/28LifeNotes/Maintenance.md"]],["v-cd21b0de","/28LifeNotes/Medical.html",{y:"p",t:"医疗药品",i:"like",O:4},["/28LifeNotes/Medical","/28LifeNotes/Medical.md"]],["v-1b11198a","/28LifeNotes/Shoppinglist.html",{y:"p",t:"购物清单",i:"info",O:2},["/28LifeNotes/Shoppinglist","/28LifeNotes/Shoppinglist.md"]],["v-758df17a","/28LifeNotes/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/28LifeNotes/详情目录.html","/28LifeNotes/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/28LifeNotes/详情目录.md","/28LifeNotes/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-122a55c4","/29Personal_Experience/Interview.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["个人经验"],g:["算法","软开"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>面试问题</p>
</div>
<h3> 经纬恒润</h3>
<p>1、自我介绍</p>
<p>2、你熟悉的哪些感知类传感器？</p>
<p>3、简单介绍一下你的项目？</p>
<p>4、处理过哪些数据类型？</p>
<p>5、期望的薪资是多少？</p>
<p>6、你觉得你在项目中的角色是怎样的？</p>
<p>7、你认可军方否定用激光的理由吗？</p>
<p>8、你熟悉智能驾驶的汽车框架吗？</p>
<p>9、你为什么报的是测试岗</p>
<p>10、毫米波雷达是数据格式是怎样的？</p>`,r:{minutes:12.89,words:3868},y:"a",t:"面试问题",i:"🧑",O:null},["/29Personal_Experience/Interview","/29Personal_Experience/Interview.md"]],["v-968482f4","/29Personal_Experience/Personal_Information.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["个人经验"],g:["算法","软开"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>个人信息</p>
</div>
<h1> 自我介绍</h1>
<ul>
<li>
<p>经纬恒润、海康威视自我介绍</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学精仪学院2023届仪器仪表工程的应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>，后细分至机器人方向,毕业设计是一个并联机器人，获得了专业第一名。在课外，参加了智能车、机器人、电子设计、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，先后参与国家重大专项《精密减速器》项目，自然基金《舰机对准》项目，主要完成一些角度、扭矩、距离的测量和误差分析工作。后来，我协同老师申报了一个自然基金和军工项目《共轴旋翼桨叶防撞预警系统》。从方案的定夺、项目的申报、到具体的实施都主要是我在推进和负责。项目涉及的三个主要技术是：一是高速高精度测距、二是动态基准定位，三是相位识别。其中，关于高精度测距，先后提出超声波方法、激光和陀螺仪融合方法、以及毫米波雷达测距方法。基准定位采用随动相机实时定位方法，相位识别采用高精度原光栅定位方法。目前，申请了《激光陀螺仪融合》和《单目视觉标定方法》等多个发明，利用Matlab写了一个共轴旋翼测量监控系统，正准备发表一篇<strong>提高毫米波雷达测距的精度</strong>的文章。</p>
<p>我自己做得虽然并没有那么计算机，我还是非常喜欢计算机相关的内容。所谓在其位谋其事，对于我来说，任何岗位都会全心投入。</p>
<p>我认为自己应该算是一个<strong>工作狂</strong>，对感兴趣的事情会投入<strong>大量时间</strong>。而且长期的竞赛经历，基本就是面对什么问题，就学什么东西，总是怕忘记，我学完每门课、做完每件事都会总结详细文档或者写博客分享出去。我认为知识只是工具，一段时间不用可能就忘了，重要的是解决问题的方向，知道所面对问题的关键，知道应该去哪学习，怎么解决问题，这也让我具有较好的的学科交叉能力。</p>
<p>目前，比较感兴趣的内容有：C++/Python编程、机器学习、计算机视觉、以及传感器融合相关的技术。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
<p>我自己比较喜欢传感器相关的岗位，并且认为自动驾驶的前景非常好，所以希望进入自动驾驶相关领域。</p>
<p>目前，希望今后重点研究学习的内容主要是C++/Python编程、机器学习、计算机视觉、以及传感器融合相关的技术。</p>
</aside>
</li>
<li>
<p>荣耀自我介绍</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学精仪学院2023届仪器仪表工程的应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>，后细分至机器人方向,毕业设计是一个并联机器人，获得了专业第一名。在课外，参加了智能车、机器人、电子设计、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，参与过国家重大专项《精密减速器》项目，自然基金《航母舰机对准》项目，主要完成一些角度、扭矩、距离的测量和误差分析工作。后来，我协同老师申报了一个自然基金和军工项目《共轴旋翼桨叶防撞预警系统》。从方案的定夺、项目的申报、到具体的实施都主要是我在推进和负责。项目涉及的三个主要技术是：一是高速高精度测距、二是动态基准定位，三是相位识别。其中，关于高精度测距，先后提出超声波方法、激光和陀螺仪融合方法、以及毫米波雷达测距方法。基准定位采用随动相机实时定位方法，相位识别采用高精度原光栅定位方法。目前，申请了《激光陀螺仪融合》和《单目视觉标定方法》等多个发明，利用Matlab写了一个共轴旋翼测量监控系统，一篇<strong>提高毫米波雷达测距的精度</strong>的文章再投。</p>
<p>我自己做得工作虽然并没有那么计算机，我还是非常喜欢计算机相关的内容。关于编程语言的开发，曾经利用C++完成过相机标定、进行工业相机激光法三角测量的简单多线程开发、小目标动态追踪等应用，利用Python的爬虫技术实现汉语词频分析，利用MaskRCNN进行实例分割、完成过简单的人脸识别应用等等。</p>
<p>所谓在其位谋其事，对于我来说，不管喜不喜欢，任何岗位都会全心投入。我会额外花时间去了解自己感兴趣的事情。</p>
<p>我认为自己应该算是一个<strong>工作狂</strong>，对感兴趣的事情会投入<strong>大量时间</strong>。而且长期的竞赛经历，基本就是面对什么问题，就学什么东西，总是怕忘记，我学完每门课、做完每件事都会总结详细文档或者写博客分享出去，这也让我具有较好的的学科交叉能力。我认为知识只是工具，一段时间不用可能就忘了，重要的是解决问题的方向，知道所面对问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，比较感兴趣的内容有：C++/Python编程、机器学习、计算机视觉、以及传感器融合相关的技术。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>海康二面自我介绍</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学精仪学院2023届仪器仪表工程的应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>，后细分至机器人方向,毕业设计是一个并联机器人，获得了专业第一名。在课外，参加了智能车、机器人、电子设计、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，参与过国家重大专项《精密减速器》项目，自然基金《航母舰机对准》项目，主要完成一些角度、扭矩、距离的测量和误差分析工作。后来，我协同老师申报了一个自然基金和军工项目《共轴旋翼桨叶防撞预警系统》。从方案的定夺、项目的申报、到具体的实施都主要是我在推进和负责。项目涉及的三个主要技术是：一是高速高精度测距、二是动态基准定位，三是相位识别。这些技术中我主要都是从方案、编程、算法方面去推进的。目前，申请了《激光陀螺仪融合》和《单目视觉标定方法》等多个发明，利用Matlab写了一个共轴旋翼测量监控系统，一篇<strong>提高毫米波雷达测距的精度</strong>的文章再投。</p>
<p>我自己做得工作虽然并没有那么计算机，我还是非常喜欢计算机相关的内容。本科的各种比赛主要跟嵌入式相关，研究生阶段，关于编程语言的开发，曾经利用C++完成过相机标定、进行工业相机激光法三角测量的简单多线程开发、小目标动态追踪等应用，利用Python的爬虫技术实现汉语词频分析，利用MaskRCNN进行实例分割、完成过简单的人脸识别应用等等。</p>
<p>所谓在其位谋其事，对于我来说，不管喜不喜欢，任何岗位都会全心投入。我会额外花时间去了解自己感兴趣的事情。</p>
<p>我认为自己应该算是一个<strong>工作狂</strong>，对感兴趣的事情会投入<strong>大量时间</strong>。而且长期的竞赛经历，基本就是面对什么问题，就学什么东西，总是怕忘记，我学完每门课、做完每件事都会总结详细文档或者写博客分享出去，这也让我具有较好的的学科交叉能力。我认为知识只是工具，一段时间不用可能就忘了，重要的是解决问题的方向，知道所面对问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，比较感兴趣的内容有：C++/Python编程、机器学习、计算机视觉、以及传感器融合相关的技术。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>中兴自我介绍</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学精仪学院2023届仪器仪表工程的应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>，后细分至机器人方向,毕业设计是一个并联机器人，获得了专业第一名。在课外，参加了智能车、机器人、电子设计、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，参与过国家重大专项《精密减速器》项目，自然基金《航母舰机对准》项目，主要完成一些角度、扭矩、距离的测量和误差分析工作。后来，我协同老师申报了一个自然基金和军工项目《共轴旋翼桨叶防撞预警系统》。从方案的定夺、项目的申报、到具体的实施都主要是我在推进和负责。项目涉及的三个主要技术是：一是高速高精度测距、二是动态基准定位，三是相位识别。这些技术中我主要都是从方案、编程、算法方面去推进的。目前，申请了《激光陀螺仪融合》和《单目视觉标定方法》等多个发明，利用Matlab写了一个共轴旋翼测量监控系统，一篇<strong>提高毫米波雷达测距的精度</strong>的文章再投。</p>
<p>我自己做得工作虽然并没有那么计算机，我还是非常喜欢计算机相关的内容。本科的各种比赛主要跟嵌入式相关，研究生阶段，关于编程语言的开发，曾经利用C++完成过相机标定、进行工业相机激光法三角测量的简单多线程开发、小目标动态追踪等应用，利用Python的爬虫技术实现汉语词频分析完成过简单的人脸识别应用等等。</p>
<p>对于我来说，在其位谋其事，不管喜不喜欢，任何岗位都会全心投入。我会额外花时间去了解自己感兴趣的事情。</p>
<p>我认为自己应该算是一个<strong>工作狂</strong>，对感兴趣的事情会投入<strong>大量时间</strong>。而且长期的竞赛经历，基本就是面对什么问题，就学什么东西，形成了一套自己解决问题的方法论。总是怕忘记知识，我学完每门课、做完每件事都会总结详细文档或者写博客分享出去，广泛的学习，让我具有较好的的学科交叉能力。我认为知识只是工具，一段时间不用可能就忘了，重要的是解决问题的方向，知道所面对问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，比较感兴趣的内容有：C++/Python编程、机器学习、计算机视觉、以及传感器融合相关的技术。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>滴滴、美的、深信服、中电十所、中船自我介绍</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学2023届电子信息专业应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>，后细分至机器人方向,毕业设计是一个并联机器人。获得了专业第一名，江苏省优秀毕业论文。在课外，参加智能车、机器人、电子设计、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是传感与测量，最初参加减速器和航母相关项目，主要完成一些测量和误差分析工作。后来，我协同老师申报了一个自然基金和军工项目《共轴旋翼桨叶防撞预警系统》。从方案的定夺、项目的申报、到具体的实施都主要是我在推进和负责。目前，申请了《激光陀螺仪融合》和《单目视觉标定方法》等5个发明，利用Matlab写了一个共轴旋翼测量系统，一篇<strong>提高毫米波雷达测距的精度</strong>的文章再投。</p>
<p>我自己非常喜欢计算机相关内容，本科的各种比赛主要跟嵌入式相关，研究生阶段，关于编程语言的开发，曾经利用C++完成过相机标定、进行工业相机激光法三角测量的简单多线程开发应用，利用Python的爬虫技术实现汉语词频分析，完成过简单的人脸识别应用等等。</p>
<p>对于我来说，在其位谋其事，不管喜不喜欢的岗位，我都会全心投入。做好本职工作后，再额外花时间去了解自己感兴趣的事情，这也是我基本天天熬夜的原因。</p>
<p>我认为自己应该算是一个<strong>工作狂</strong>，对感兴趣的事情会投入<strong>大量时间</strong>。而且长期的竞赛经历，基本就是面对什么问题，就学什么东西，形成了一套自己解决问题的方法论。总是怕忘记知识，学完每门课、做完每件事都会总结详细文档或者写博客分享出去，广泛的学习，机械\\电子\\计算机都有做过相关的应用，让我具有较好的的学科交叉能力。我认为知识只是工具，一段时间不用可能就忘了，重要的是解决问题的方向，问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，也是主要是针对工程项目做编程开发，对理论知识可能有些欠缺。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
<p>目前，最喜欢的一个领域就是自动驾驶，我自己比较感兴趣的知识主要有：图像处理、计算机视觉、以及传感器融合、深度学习相关的技术。</p>
</aside>
</li>
<li>
<p>自我介绍10.06</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学电子信息专业应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>机器人方向,毕业设计是一个并联机器人，获得了专业第一名，江苏省优秀毕业论文。在课外，参加智能车、机器人、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是<strong>传感与测量</strong>，起初参加减速器和航母等军工项目，主要完成一些测量和误差分析工作。后来，协同老师申报了一个自然基金和军工项目《共轴旋翼桨叶防撞预警系统》。从方案的定夺、项目的申报、到具体的实施都主要是我在负责和推进。目前，申请了《<strong>激光陀螺仪融合</strong>》和《<strong>单目视觉标定方法</strong>》等5个发明，一个测量系统软件，一篇<strong>提高毫米波雷达测距的精度</strong>的文章在投。</p>
<p>我认为自己是算是一个<strong>工作狂</strong>，基本都是从早干到晚上十二点，做好本职工作后，还会对感兴趣的事情额外投入<strong>大量时间</strong>。这可能就是我基本天天熬夜的原因。</p>
<p>我自己比较喜欢计算机相关内容，本科的各种比赛主要跟嵌入式相关，研究生阶段，做得也主要是编程开发和算法研究。包括一些图像、信号处理等等。长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，广泛的学习，机械\\电子\\计算机都有做过相关的应用，让我具有较好的的学科交叉能力，形成了一套自己解决问题的方法论。我有一个习惯，学完每门课、做完每件事都会总结详细文档或者写博客分享出去。我认为知识只是工具，忘记是常事，重要是能快速分析出问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，在写毕业论文了，如果找工作顺利的话，大概一月可以毕业，如果不顺利，就计划三月了。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>中船八院自我介绍</p>
<aside> 🪁 尊敬的面试官
<p>您好。首先，感谢各位宝贵的时间。</p>
<p>我叫张志远，是天津大学2023届电子信息专业应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>，后细分至机器人方向,毕业设计是一个并联机器人。获得了专业第一名，江苏省优秀毕业论文。在课外，参加智能车、机器人、电子设计、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是传感与测量，最初参加减速器和航母相关项目，主要完成一些测量和误差分析工作。后来，我协同老师申报了一个自然基金和军工项目《共轴旋翼桨叶防撞预警系统》。从方案的定夺、项目的申报、到具体的实施都主要是我在负责和推进。目前，申请了《激光陀螺仪融合》和《单目视觉标定方法》等5个发明，利用Matlab写了一个共轴旋翼测量系统，一篇<strong>提高毫米波雷达测距的精度</strong>的文章在投。</p>
<p>对于我来说，不管喜不喜欢的岗位，我都会全心投入。做好本职工作后，再额外花时间去学习自己感兴趣的事情，这可能就是我基本天天熬夜的原因。我自己非常喜欢计算机相关内容，本科的各种比赛主要跟嵌入式相关，研究生阶段，做得也主要是编程开发。包括一些图像、信号处理等等。</p>
<p>我认为自己小时候是一个<strong>孩子王</strong>，长大了变成了<strong>工作狂</strong>，对感兴趣的事情会投入<strong>大量时间</strong>。而且长期的竞赛经历，基本就是面对什么问题，就学什么东西，形成了一套自己解决问题的方法论。总是怕忘记知识，学完每门课、做完每件事都会总结详细文档或者写博客分享出去，广泛的学习，机械\\电子\\计算机都有做过相关的应用，让我具有较好的的学科交叉能力。我认为知识只是工具，一段时间不用可能就忘了，重要的是解决问题的方向，问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，准备写毕业论文了，如果找工作顺利的话，大概一月可以毕业，如果不顺利，那可能就三月了。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>腾讯面试准备</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学电子信息专业<strong>应届毕业生</strong>,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>机器人方向，参加过参加智能车、挑战杯等十多项科技竞赛，都取得了不错的成绩，并且毕设成绩也是专业第一。</p>
<p>研究生阶段，研究方向是**传感与测量，**先后做了减速器、航母、直升机等几个军工项目，主要是利用传感器，包括相机、毫米波雷达、激光等，进行一些工程项目的方案设计、仿真和编程开发。申请了5个发明，一个软件，还有一篇毫米波雷达算法文章在投。</p>
<p>我自己比较喜欢计算机相关内容，本科的各种比赛主要跟嵌入式相关，研究生阶段，做得也主要是编程开发和算法研究。包括一些图像、信号处理等等。我认为自己是算是一个<strong>工作狂</strong>，基本都是从早干到晚上十二点，可能项目并不是特别喜欢，所以需要做好本职工作后，再对感兴趣的事情额外投入<strong>大量时间</strong>。这可能就是我基本天天熬夜的原因。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，机械\\电子\\计算机都有做过相关的应用，我有一个习惯，学完每门课、做完每件事都会总结详细文档或者写博客、github分享出去。我认为知识只是工具，好记性不如烂笔头，重要是能快速分析出问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，在写毕业论文了，如果找工作顺利的话，大概一月可以毕业，如果不顺利，就计划三月了。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>宁德时代面试</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学<strong>电子信息</strong>专业<strong>应届毕业生</strong>,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>机器人方向，参加过参加智能车、挑战杯等十多项科技竞赛，都取得了不错的成绩，并且本科毕设成绩是专业第一。</p>
<p>研究生阶段，研究方向是<strong>传感与测量，<strong>先后做了减速器、航母、直升机相关的几个军工项目，主要是利用传感器，包括</strong>相机、毫米波雷达、激光</strong>等，进行一些工程项目的方案设计、仿真和编程开发。目前还在进行中的是直升机项目，申请了5个发明，一个软件，还有一篇<strong>毫米波雷达算法</strong>文章在投。</p>
<p>我自己比较喜欢计算机相关内容</p>
<p>，本科的各种比赛主要跟嵌入式相关，研究生阶段，做的主要是编程开发和算法研究。包括一些图像、信号处理等等。我认为自己是算是一个<strong>工作狂</strong>，基本都是从早干到晚上十二点，可能项目并一定特别喜欢，所以需要做好本职工作后，再对喜欢的事情额外投入<strong>大量时间</strong>。这可能就是我基本天天熬夜的原因。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，机械\\电子\\计算机都有做过相关的应用，我有一个习惯，学完每门课、做完每件事都会总结详细文档或者写博客、github分享出去。我认为知识只是工具，好记性不如烂笔头，压力大的时候记性就不好，最重要是能快速分析出问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，在写毕业论文了，如果找工作顺利的话，大概一月可以毕业，如果不顺利，就计划三月了。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>北醒二面</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学<strong>电子信息</strong>专业<strong>应届毕业生</strong>,来自<strong>湖南郴州</strong>。</p>
<p>本科是<strong>中国矿业大学机械工程</strong>机器人方向的，毕设成绩是专业第一，参加过参加智能车、挑战杯等很多比赛竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是<strong>传感与测量，<strong>先后做了减速器、航母、直升机相关的几个军工项目，主要是利用传感器，包括</strong>相机、毫米波雷达、激光</strong>等，进行一些工程项目的方案设计、仿真和编程开发。目前还在进行中的是直升机项目，申请了一些个发明，一个软件，还有一篇<strong>毫米波雷达算法</strong>文章在投。</p>
<p>我自己比较喜欢计算机相关内容，本科的各种比赛主要跟嵌入式相关，研究生阶段，做的主要是编程开发和算法研究。我认为自己是算是一个<strong>工作狂</strong>，基本都是从早干到晚上十二点，有时候项目并一定特别喜欢，所以会额外投入很多时间去学自己感兴趣的事情。这可能就是我基本天天熬夜的原因。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，机械\\电子\\计算机都有做过相关的应用，我有一个习惯，学完每门课、做完每件事都会总结详细文档或者写博客、github分享出去。我认为知识只是工具，好记性不如烂笔头，压力大的时候记性就不好，最重要是能快速分析出问题的关键，知道应该去哪学习，怎么解决问题。</p>
<p>目前，在写毕业论文了，如果找工作顺利的话，大概一月可以毕业，如果不顺利，就计划三月了。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>科曼医疗一面</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学<strong>电子信息</strong>专业<strong>应届毕业生</strong>,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程</strong>机器人方向，毕设成绩是专业第一，参加过参加智能车、挑战杯等很多比赛竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是<strong>传感与测量，<strong>先后做了减速器、航母、直升机相关的几个军工项目，主要是利用传感器，包括</strong>相机、毫米波雷达、超声波、激光</strong>等，进行一些工程项目的方案设计、仿真和编程开发。目前还在进行中的是直升机项目，申请了5个发明，一个软件，还有一篇<strong>毫米波雷达算法</strong>文章在投。</p>
<p>我自己比较喜欢计算机相关内容，本科的各种比赛主要跟嵌入式相关，研究生阶段，做的主要是信号处理、编程开发和算法研究。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，机械\\电子\\计算机都有做过相关的应用，我有一个习惯，学完每门课、做完每件事都会总结详细文档或者写博客、github分享出去。</p>
<p>目前，在写毕业论文了，如果找工作顺利的话，大概一月可以毕业，如果不顺利，就计划三月了。</p>
<p>以上就是我的基本情况，谢谢大家的耐心聆听！</p>
</aside>
</li>
<li>
<p>综合面试自我介绍（核心再描述自我特点）</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学2023届电子信息专业应届毕业生,来自<strong>湖南郴州</strong>。</p>
<p>本科就读于<strong>中国矿业大学机械工程专业</strong>，后细分至机器人方向,毕业设计是一个并联机器人，获得了专业第一名，江苏省优秀毕业论文。在课外，参加智能车、机器人、挑战杯等十多项科技竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是传感与测量，先后参加减速器、航母、共轴旋翼等几个军工项目，主要是利用传感器，包括相机、毫米波雷达、激光等，进行一些工程项目的方案设计、仿真和编程开发。申请了几篇发明，一个软著，还有一篇毫米波雷达算法文章在投。</p>
<p>对于我来说，不管喜不喜欢的岗位，我都会全心投入。做好本职工作后，再额外花时间去学习自己感兴趣的事情，这可能就是我基本天天熬夜的原因。我自己非常喜欢计算机相关内容，本科的各种比赛主要跟嵌入式相关，研究生阶段，做得也主要是编程开发。</p>
<p>我认为自己应该算是一个<strong>工作狂</strong>，又是一个<strong>理想主义</strong>的人，对事情的发展永远是充满乐观，对感兴趣的事情会投入<strong>大量时间</strong>。而且长期的竞赛经历，基本就是面对什么问题，就学什么东西，形成了一套自己解决问题的方法论。总是怕忘记知识，学完每门课、做完每件事都会总结详细文档或者写博客分享出去，广泛的学习，机械\\电子\\计算机都有做过相关的应用，让我具有较好的的学科交叉能力。我认为知识只是工具，一段时间不用可能就忘了，最重要的是能够<strong>准确、快速</strong>的抓住问题的关键，知道应该去哪学习，怎么解决问题，这可能也是我的优势。</p>
<p>以上就是我的基本情况，谢谢大家！</p>
</aside>
<ul>
<li>
<p>如果团队里有一个人有自己的想法，别人不同意会怎么吧？</p>
<p>首先，我认为这应该是一个非常普遍的情况。从我的个人经历来说吧。我和导师的意见经常不一致，但是我都会通过公式与原理分析先去分析问题点，通过制作形象的PPT来解释我的意见。在研究电磁测距方案的时候，因为我们是多个方案同时进行的，需要尽快确定一个最可行的方案。当时遇到的第一个问题就是最先进的毫米波雷达测距分辨率都太低了，无法满足我们的要求，导师就觉得应该改用其他方案，但是我后面就仔细去研究它的原理，分析影响分辨率的因素，以及我们项目的目标，指出分辨率难以提高不意味着精度无法提高，后来就开始研究精度问题，不断否定又不断提出新的方法。螺旋式优化上升。 还有就是关于共轴旋翼的运动控制问题，我们老师资历也比较老，之前还去参观过航展，认为自己比较了解结构。但是我在会上介绍的和他的不太一致，他开始就固执认为他是对的。我首先是认同老师的，会后我询问了各位在座的同学，他们的看法，发现他们是认同我的。我就搜集了更多相关资料，希望用更形象的方式去让老师尽快接受，后来我们老师在会上承认了自己认识的欠缺，也表扬了我这种精神。经常会发生类似的事情，我们老师就很喜欢我，一直想留我读博，但是我一心想早点给家里承担责任，多次拒绝。</p>
</li>
<li>
<p>我机械专业看上去与软件不相关，跟其他自动化或者计算机专业学生相比，优势在哪？</p>
<p>我的专业涉及光、机、电、算等多个学科的知识，这就使得具有学科融合的综合能力，而实际的产品肯定是各学科的综合体现，当我们在解决问题的时候，思路肯定会更加开阔，不仅仅会单纯从某一个技术出发，而且了解各个部分之间的流程和关系，这让我们有时候容易想到更简单的解决办法。</p>
</li>
</ul>
</li>
<li>
<p>比赛经历</p>
<p>长期比赛主要的收获在于点燃了自己对科研的热情，养成了良好的科学态度。后保研至天津大学仪器仪表工程，目前主要研究的方向的传感与测量信息技术。我认为自己比较特别的点，一是非常独立，无惧面对的任何技术问题。二是有强烈的求知欲，愿意花最大的时间去专研和探索。</p>
<p>研究生阶段接触了多个课题，其中比较核心的一个项目就是《共轴旋翼高速直升机桨叶防撞实时预警系统研究》，从方案提出、原理验证、项目的申报到项目的具体推进，都是在我的推动下进行的。</p>
<p>目前常见的直升机都是一层旋翼的，国家希望发展共轴旋翼，主要原因在于它具有承载能力强，机动性好等特点，但是有一个比较致命的问题就是，共轴旋翼容易发生打桨事故。为此，我们课题的就是要实时监测双层桨叶在交汇时刻的距离，因此引出第一个问题，就是高速旋转下的测距问题。表面上，完成了测距就达到了目的，但是交汇桨叶的距离未必就是最危险的距离，还要考虑相邻桨叶的位置问题。</p>
<p>因此，提出了第二个问题，建立动态基准问题，使得所测的浮动距离变成相对于机身的一个绝对的距离，为此，我们提出了随动相机技术，将相机安装在旋转轴，朝向桨叶，使得相机随旋转轴转动，并且与桨叶保持相对静止，通过相机，测量上旋翼的位置，结合距离即可得出下旋翼的位置。其中为了在合适的角度准确触发相机拍照，我们提出相位识别方法，将原光栅安装于旋转轴上，实时测量旋转相位。</p>
</li>
<li>
<p>解决问题的方法</p>
<p>1.问题是什么？核心问题是什么？ 2.任务是什么？我的任务是什么 3.解决办法是什么 4.需要的技术和知识有哪些？ 5.我已有的知识有哪些？我需要学习的有什么？我可以去哪里学习这些知识？ 6.进行的怎么样，遇到的难点是什么，打算怎么解决？ 7.结果怎么样？完成的好的地方是什么？不足点是什么？ 8.不够好的原因分析</p>
</li>
<li>
<p>360面试</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学<strong>电子信息</strong>专业<strong>应届毕业生，<strong>来自</strong>湖南郴州。</strong></p>
<p>我本科就读于<strong>中国矿业大学机械工程</strong>机器人方向，毕业设计是一个<strong>并联机器人自动分选系统</strong>，获得专业第一名和江苏省优秀论文，参加过智能车、挑战杯等很多竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是<strong>传感与测量，<strong>课题面向</strong>减速器</strong>、<strong>航母</strong>、<strong>直升机</strong>上的测量问题，主要是利用传感器，包括<strong>相机、毫米波雷达、激光</strong>等，进行工程项目的<strong>方案设计</strong>、<strong>结构设计</strong>和<strong>编程开发</strong>。贯穿研究所阶段的项目是<strong>共轴旋翼</strong>，目前申请了多个发明和软件，投稿了一篇<strong>毫米波雷达算法</strong>文章。</p>
<p>我自己兴趣比较广泛，比较喜欢计算机相关内容，比如<strong>深度学习、机器视觉</strong>之类的，本科的各种比赛主要跟嵌入式相关，主要内容就是画结构、画电路、加工组装，编程控制，让作品动起来。研究生阶段，做的主要是测量，主要内容就是<strong>方案设计</strong>、信号处理、编程开发、算法研究、结构设计和仿真，最后完成测量目标。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，<strong>机械\\视觉\\计算机</strong>都有做过相关的应用。我有一个习惯，学完每门课、做完每件事都会总结详细文档、写博客、在github分享出去，对我来说学习技术，分享经验是一种极大的乐趣。</p>
<p>目前，正在写毕业论文，内容就是<strong>共轴旋翼项目</strong>，我也为此次面试做了一个PPT。</p>
<p>以上就是我的基本情况，感谢面试官的耐心聆听！</p>
</aside>
</li>
<li>
<p>华为一面</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学<strong>电子信息</strong>专业<strong>应届毕业生，<strong>来自</strong>湖南郴州，就在东莞上面一点点</strong>，等了两个多月，终于进入了面试，真的非常开心和激动。</p>
<p>我本科就读于<strong>中国矿业大学机械工程</strong>机器人方向，毕业设计是一个<strong>并联机器人自动分选系统</strong>，获得专业第一名和江苏省优秀论文，参加过智能车、挑战杯等很多竞赛，都取得了不错的成绩。</p>
<p>研究生阶段，研究方向是<strong>传感与测量，<strong>课题面向</strong>减速器</strong>、<strong>航母</strong>、<strong>直升机</strong>上的测量问题，主要是利用传感器，包括<strong>相机、毫米波雷达、激光</strong>等，进行工程项目的<strong>方案设计</strong>、<strong>结构设计</strong>和<strong>编程开发</strong>。贯穿研究所阶段的项目是<strong>共轴旋翼</strong>，目前申请了多个发明和软件，投稿了一篇<strong>毫米波雷达算法</strong>文章。</p>
<p>我自己兴趣比较广泛，比较喜欢计算机相关内容，比如<strong>深度学习、机器视觉</strong>之类的，本科的各种比赛主要跟嵌入式相关，主要内容就是画结构、画电路、加工组装，编程控制，让作品动起来。研究生阶段，做的主要是测量，主要内容就是<strong>方案设计</strong>、<strong>原理验证</strong>、信号处理、编程开发、算法研究、结构设计和仿真，最后完成测量目标。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，<strong>机械\\视觉\\控制</strong>都有做过相关的应用。总的来说，我认为我和这个岗位<strong>非常匹配</strong>，工作内容也是我非常<strong>感兴趣</strong>的。我有一个习惯，学完每门课、做完每件事都会总结详细文档、写博客、在github分享出去，对我来说学习技术，分享经验是一种极大的乐趣。</p>
<p>目前，正在写毕业论文，内容就是共轴旋翼项目，我也为这次面试做了一个PPT。</p>
<p>以上就是我的基本情况，感谢面试官的耐心聆听！</p>
</aside>
</li>
<li>
<p>华为主管面</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远，是天津大学<strong>电子信息</strong>专业<strong>应届毕业生，<strong>来自</strong>湖南郴州，就在东莞上面一点点</strong>，等了两个多月，终于到了华为最后一次面试，真的很激动，然后又非常紧张。</p>
<p>我本科是<strong>机械工程</strong>机器人方向，毕业设计是一个<strong>并联机器人自动分选系统</strong>，有幸获得专业第一名和江苏省优秀论文，参加过智能车、挑战杯等很多竞赛，都取得了不错的成绩，其中有一个比赛叫华为杯，也就是从那个时候开始就想加入华为。</p>
<p>研究生阶段，幸运地保研到了天大静仪国家重点实验室，研究方向是<strong>传感与测量，<strong>课题主要面向</strong>航母</strong>、<strong>直升机</strong>上的测量问题，利用传感器，包括<strong>相机、毫米波雷达、激光</strong>等，进行工程项目的<strong>方案设计</strong>、<strong>结构设计</strong>和<strong>编程开发</strong>。付出心血最多的是<strong>共轴直升机项目</strong>，目前申请了多个发明和软件，投稿了一篇<strong>毫米波雷达算法</strong>文章。</p>
<p>我自己兴趣比较广泛，比较喜欢计算机相关内容，比如<strong>机器视觉</strong>之类的，本科的各种比赛主要跟嵌入式相关，主要内容就是画结构画电路、加工组装，编程控制，让作品动起来。研究生阶段，做的主要是测量，主要内容就是<strong>方案和结构的设计</strong>、信号处理、编程开发、最后完成测量目标。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，<strong>机械\\视觉\\控制</strong>都有做过相关的应用。总的来说，无论是专业背景和项目经历都和这个岗位<strong>非常匹配</strong>，最重要的是我还喜欢做这些事，所以研一的时候就想报智能制造这个岗位。</p>
<p>我有一个习惯，学完每门课、做完每件事都会总结详细文档、写博客、在github分享出去，您从简历上应该也可以看出来，我也是一个停不下来的人，对我来说学习技术，分享经验是一种极大的乐趣。</p>
<p>目前，正在写毕业论文，内容就是共轴直升机项目，我也为这次面试做了一个PPT。</p>
<p>以上就是我的基本情况，感谢面试官的耐心聆听！</p>
</aside>
</li>
<li>
<p>工作主要内容</p>
<p>在介绍技术前，可能需要先介绍下项目背景，目前常见的直升机都是一层旋翼的，国家希望发展共轴旋翼，主要原因在于它具有承载能力强，机动性好等特点，但是有一个比较致命的问题就是，共轴旋翼容易发生打桨事故。为此，我们课题的就是要实时监测双层桨叶在交汇时刻的距离。项目的难点在于，桨叶交汇时间极短，约为0.6ms。面对这个问题，我们研究了多个方案。</p>
<p>1、研究激光和陀螺仪融合测距方案，将激光和陀螺仪安装在桨叶的末端，为了保证交汇时刻都能测到，所以上桨叶下表面和下桨叶上表面都需要安装传感器。结合这种安装模式，进行几何建模和推导，如何确定激光光点的位置，包括径向位置和宽度方向，如何将激光距离转化为桨尖距离，都需要具体的建模和推导。后来，设计了一个试验台，实测效果，静态精度在1mm左右，在项目要求的精度15mm范围之内，但是军方建议采用这种方案。</p>
<p>2、研究电磁波测距技术，因为FMCW调频连续波毫米波雷达的测距精度相对比较高，而且抗干扰性比较强，就选用了该项技术进行研究。通过仿真分析测量原理和关键参数。但是，毫米波雷达的测距分辨率为厘米级，目标转向了提高精度上，分出了两套方案，从硬件层面和从软件层面，基于快速应用和低成本需求，认为软件层面更为合适。根据测距原理。提出采用频谱分析方法对毫米波雷达进行改善的方法，研究了相位法、能量法、神经网络法等二十种算法，对其进行仿真、改进，分析，对比。在此基础上，将改进的算法应用到实际的测量中，测试了毫米波雷达各算法在各距离段、不同被测物的测距性能情况。</p>
<p>3、研究了随动相机基准定位技术，由于测距并不能完全判断桨叶的危险程度，将相机安装在旋转轴上，对准目标桨叶，在目标桨叶尖部安装标志物，动态测量桨尖的位置，结合电磁测距值，可以确定各桨尖相对于机身的三维坐标。</p>
<p>4、设计共轴旋翼试验平台，用于模拟真实测量，评定测量有效性。对结构进行应力应变分析、空气动力学仿真，对局部结构进行优化。</p>
<p>5、构建共轴旋翼多坐标系统，用Matlab的Multibody构建坐标系统，模拟桨叶运动，分析各桨尖的运动状态。</p>
</li>
<li>
<p>三一算法面试</p>
<aside> 🪁 尊敬的面试官
<p>您好。</p>
<p>我叫张志远**，<strong>来自</strong>湖南郴州。**</p>
<p>本科是中国矿业大学<strong>机械工程</strong>机器人方向的，毕业设计是<strong>并联机器人自动分选系统</strong>，有幸获得专业第一名和江苏省优秀论文。</p>
<p>后来，保研到了<strong>天津大学精仪国家重点实验室</strong>，研究方向是<strong>传感与测量，<strong>课题主要面向</strong>航母</strong>、<strong>直升机</strong>上的测量问题，利用传感器包括<strong>相机、毫米波雷达、超声波、激光</strong>等，进行工程项目的<strong>方案设计</strong>和<strong>编程开发</strong>。付出心血最多的是<strong>共轴直升机项目</strong>，也是我的毕业设计，目前申请了多个发明和软件，投稿了一篇<strong>毫米波雷达算法</strong>文章。</p>
<p>长期的竞赛和项目经历，基本就是面对什么问题，就学什么东西，<strong>机械\\视觉\\控制</strong>都有做过相关的应用。本科的专业方向是机器人，也参加了机器人、智能车，挑战杯等很多竞赛，所以对<strong>结构，机器人系统，动力学，控制</strong>都相对熟悉，偏硬件。研究生的研究方向是测量，对传感器原理，算法有更多的接触。这个过程中，使用Solidwrok、Ansys进行结构设计和力学仿真，利用AD进行电路绘制，使用Matlab进行传感器信号的处理和仿真分析，使用C++结合OpenCV做一些视觉应用,之前也学习过linux下的ROS核心技术，包括SLAM,概率模型等。所以，本科和研究生的学习就是一个软硬件结合的过程。也正是这样的经历，让我最感兴趣的工作就是自动驾驶相关。我也养成了一个习惯，学完每门课、做完每件事都会总结详细文档、写博客、在github分享出去，经验分享对我来说是一种很大的乐趣。</p>
<p>目前，正在写毕业论文，预计三月毕业。</p>
<p>以上就是我的基本情况，感谢面试官的耐心聆听！</p>
</aside>
</li>
</ul>`,r:{minutes:70.64,words:21191},y:"a",t:"个人信息",i:"🧑",O:null},["/29Personal_Experience/Personal_Information","/29Personal_Experience/Personal_Information.md"]],["v-5aad6466","/29Personal_Experience/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/29Personal_Experience/详情目录.html","/29Personal_Experience/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/29Personal_Experience/详情目录.md","/29Personal_Experience/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-572bc774","/30web/Comments.html",{y:"p",t:"评论插件",i:"comment",O:3},["/30web/Comments","/30web/Comments.md"]],["v-d73f600c","/30web/Site%20Navigation.html",{y:"p",t:"Site Navigation",i:"vue",O:1},["/30web/Site Navigation.html","/30web/Site%20Navigation","/30web/Site Navigation.md","/30web/Site%20Navigation.md"]],["v-dd7edeaa","/30web/VuePress.html",{y:"p",t:"VuePress",i:"vue",O:1},["/30web/VuePress","/30web/VuePress.md"]],["v-4b524440","/30web/WebGuide.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 🍥 搭建 LearnData</h2>
<ol>
<li>
<p>首先，进入 <a href="https://github.com/rockbenben/LearnData" target="_blank" rel="noopener noreferrer">LearnData</a> 项目页，点击右上方的「Use this template」&gt;「Create a new repository」。</p>
<figure><img src="https://tc.seoipo.com/2022-08-10-19-32-05.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://tc.seoipo.com/2022-08-10-19-34-13.png?imageMogr2/thumbnail/!60p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>接着，进入项目仓库的「Settings」&gt;「Actions」&gt;「General」，选中底部 Workflow permissions 中的 <code>Read and write permissions</code>，然后点击保存即可。如果未授权，GitHub Page 部署会由于 repo 权限不足而报错 <code>failed with exit code 128</code>。</p>
<figure><img src="https://tc.seoipo.com/2023-03-14-04-02-16.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>接下来，进入菜单栏顶部的「Actions」&gt;「最新的 workflow」，点击右上方的「Re-run jobs」&gt;「Re-run all jobs」，重新生成网页。若部署正确，GitHub 将自动搭建 gh-page branch 页面。(如果你不需要将<strong>文件同步到服务器</strong>，则请删除 <code>.github/workflows/main.yml</code> 中 Sync files 区块的代码，以避免出现报错。)</p>
<figure><img src="https://tc.seoipo.com/2023-03-14-04-04-52.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>然后点击「Settings」, 修改 <code>Repository name</code> 为 <code>用户名.github.io</code>。假设你的仓库链接是 <code>https://github.com/xxx/LearnData</code>，那么中间的 <code>xxx</code> 就是你的用户名。如果该仓库名称已被使用，GitHub Pages 将无法正常显示样式，请查看页面底部的常见问题来设置子域名。</p>
<figure><img src="https://tc.seoipo.com/20180505202201.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>在同一页面选择「Settings」&gt;「Pages」&gt;「Build and deployment」&gt;「Branch」, 将 gh-page branch 设为 GitHub Pages 的来源，网站运行目录默认为 <code>/(root)</code>。设置完成后，点击「Save」。如果找不到 gh-pages 分支，可以按照上面提到的第三步进行操作，或在 GitHub 中修改任意文件以手动触发 GitHub Action，等待其执行完成后，再重新设置 Pages 的来源。</p>
<figure><img src="https://tc.seoipo.com/2022-08-10-19-39-15.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>设置成功后，页面会提示访问链接：<code>https://xxx.github.io/</code>，知识库搭建完毕。</p>
<p>如果未出现访问链接提示或不能打开 GitHub Pages，则删除 <code>docs/_posts</code> 路径下的博客文件，GitHub Pages 有时会对旧文章里的代码报错。</p>
</li>
</ol>`,r:{minutes:9.32,words:2795},y:"a",t:""},["/30web/WebGuide","/30web/WebGuide.md"]],["v-cbf1feee","/30web/docsify.html",{y:"p",t:"docsify",i:"edit",O:2},["/30web/docsify","/30web/docsify.md"]],["v-562138db","/30web/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/30web/详情目录.html","/30web/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/30web/详情目录.md","/30web/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-afb5c98c","/31reading/",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 读书笔记</h1>
<ul>
<li>书单：Notion 数据库管理。</li>
<li>汇总：LearnData 读书笔记。
<ul>
<li>Calibre：管理所有电子书，阅读时选择「连接/共享」&gt;「启动内容服务器」，可对 EPUB/MOBI 作笔记。</li>
<li>Logseq：对历史、心理等提升类 PDF 进行笔记。</li>
</ul>
</li>
</ul>
<h2> 阅读技巧</h2>
<p>阅读技巧：<a href="https://zhuanlan.zhihu.com/p/25858189" target="_blank" rel="noopener noreferrer">戴雨森阅读法</a>、雪球速读法</p>`,r:{minutes:2.25,words:675},y:"a",t:"读书笔记"},["/31reading/index.html","/31reading/README.md"]],["v-2fc0ab4f","/31reading/navbar.html",{d:"2023-04-26T10:25:41.000Z",e:`<ul>
<li><a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">🚀 LearnData</a></li>
<li><a href="https://newzone.top/blog.html" target="_blank" rel="noopener noreferrer">📝 博客文章</a></li>
<li><a href="https://nav.newzone.top/" target="_blank" rel="noopener noreferrer">🔨 工具收藏</a></li>
</ul>`,r:{minutes:.05,words:16},y:"a",t:""},["/31reading/navbar","/31reading/_navbar.html","/31reading/_navbar.md"]],["v-7b000337","/31reading/sidebar.html",{d:"2023-04-26T10:25:41.000Z",e:`<ul>
<li><a href="">读书方法</a></li>
<li>0.自我提升
<ul>
<li><a href="/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%8F%90%E5%8D%87%E6%80%9D%E7%BB%B4.html" target="blank">提升思维</a></li>
<li><a href="/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%90%83%E6%8E%89%E9%82%A3%E5%8F%AA%E9%9D%92%E8%9B%99.html" target="blank">吃掉那只青蛙</a></li>
</ul>
</li>
<li>1.心理学
<ul>
<li><a href="/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E8%87%AA%E6%88%91%E8%AE%A4%E7%9F%A5.html" target="blank">自我认知</a></li>
<li><a href="/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E7%A4%BE%E4%BC%9A%E8%AE%A4%E7%9F%A5.html" target="blank">社会认知</a></li>
<li><a href="/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E5%BD%B1%E5%93%8D%E5%8A%9B.html" target="blank">影响力</a></li>
</ul>
</li>
<li><a href="/31reading/2_%E6%8A%80%E8%83%BD/%E5%86%99%E4%BD%9C.html" target="blank">写作</a></li>
<li><a href="/31reading/3_%E7%AE%A1%E7%90%86/%E5%95%86%E4%B8%9A%E4%BC%A0%E8%AE%B0.html" target="blank">商业传记</a></li>
<li><a href="/31reading/3_%E7%AE%A1%E7%90%86/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80.html" target="blank">市场营销</a></li>
<li><a href="/31reading/3_%E7%AE%A1%E7%90%86/%E7%A4%BE%E4%BC%9A%E7%BB%8F%E6%B5%8E.html" target="blank">社会经济</a></li>
</ul>`,r:{minutes:.42,words:126},y:"a",t:""},["/31reading/sidebar","/31reading/_sidebar.html","/31reading/_sidebar.md"]],["v-2810f732","/31reading/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/31reading/详情目录.html","/31reading/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/31reading/详情目录.md","/31reading/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-3ac441f0","/blog/docker%E4%BD%BF%E7%94%A8.html",{d:"2023-04-22T00:00:00.000Z",l:"2023年4月22日",c:["linux"],g:["docker"],e:`<h3> 一、安装</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装docker</span>
 <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker.io
 <span class="token comment"># docker命令免root权限执行</span>
 <span class="token comment"># 创建docker用户组，若已有docker组会报错，没关系可忽略</span>
 <span class="token function">sudo</span> <span class="token function">groupadd</span> <span class="token function">docker</span>
 <span class="token comment"># 将当前用户加入docker组</span>
 <span class="token function">sudo</span> gpasswd <span class="token parameter variable">-a</span> <span class="token variable">\${<span class="token environment constant">USER</span>}</span> <span class="token function">docker</span>
 <span class="token comment"># 重启docker服务</span>
 <span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">docker</span> restart
<span class="token comment"># 切换当前会话到新group或重新登录重启X会话</span>
 newgrp docker​
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.87,words:562},y:"a",t:"docker使用",i:"📅",O:null},["/blog/docker使用.html","/blog/docker%E4%BD%BF%E7%94%A8","/_blog/docker使用.html","/_blog/docker%E4%BD%BF%E7%94%A8.html","/_blog/docker使用.md","/_blog/docker%E4%BD%BF%E7%94%A8.md"]],["v-6d97b4e7","/blog/make%E3%80%81makefile%E3%80%81CMake%E5%92%8CCMakeLists.html",{d:"2023-04-22T00:00:00.000Z",l:"2023年4月22日",c:["linux"],g:["cmake","make"],e:`<p>make、makefile、CMake和CMakeLists.txt是构建软件的工具和脚本。它们的高频用法如下：</p>
<ul>
<li>
<p>make：是一个用于自动化编译程序的工具。Make工具通过读取Makefile文件来确定如何编译和链接程序。Makefile文件中包含了编译和链接的规则，以及依赖关系和命令行指令。Make工具可以根据Makefile文件自动化地执行编译和链接程序的过程。</p>
</li>
<li>
<p>makefile：是一个文本文件，其中包含了Make工具所需的规则和指令，以告诉Make工具如何编译和链接程序。Makefile文件通常包括目标、依赖关系和命令行指令。</p>
</li>
<li>
<p>CMake：是一个跨平台的构建系统生成器，它可以生成各种不同平台的构建系统，如Unix Makefile、Visual Studio工程、Xcode工程等。CMake使用CMakeLists.txt文件来描述项目的构建过程，并生成适用于所选平台的构建系统。</p>
</li>
<li>
<p>CMakeLists.txt：是一个CMake的配置文件，它描述了项目的各个组成部分及其依赖关系，并为每个组成部分指定如何编译和链接。CMakeLists.txt文件由CMake工具读取并生成适用于目标平台的构建系统。</p>
</li>
</ul>`,r:{minutes:4.8,words:1440},y:"a",t:"make和makefile",i:"📅",O:null},["/blog/make、makefile、CMake和CMakeLists.html","/blog/make%E3%80%81makefile%E3%80%81CMake%E5%92%8CCMakeLists","/_blog/make、makefile、CMake和CMakeLists.html","/_blog/make%E3%80%81makefile%E3%80%81CMake%E5%92%8CCMakeLists.html","/_blog/make、makefile、CMake和CMakeLists.md","/_blog/make%E3%80%81makefile%E3%80%81CMake%E5%92%8CCMakeLists.md"]],["v-25397ed8","/blog/ubuntu%E5%88%86%E5%8C%BA%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html",{d:"2023-04-22T00:00:00.000Z",l:"2023年4月22日",c:["linux"],g:["分区"],e:`<p>第一步：打开分区管理工具<br>
使用命令安装分区管理工具<a href="https://so.csdn.net/so/search?q=gparted&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">gparted</a>:</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>sudo apt<span class="token operator">-</span>get install gparted
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.26,words:77},y:"a",t:"ubuntu分区管理工具",i:"📅",O:null},["/blog/ubuntu分区管理工具.html","/blog/ubuntu%E5%88%86%E5%8C%BA%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7","/_blog/ubuntu分区管理工具.html","/_blog/ubuntu%E5%88%86%E5%8C%BA%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html","/_blog/ubuntu分区管理工具.md","/_blog/ubuntu%E5%88%86%E5%8C%BA%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.md"]],["v-dc60b056","/blog/ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9apt_pip%E6%BA%90%E5%88%B0%E5%9B%BD%E5%86%85%E6%BA%90.html",{d:"2023-04-22T00:00:00.000Z",l:"2023年4月22日",c:["算能"],g:["linux","docker"],e:`<h1> 一、命令行修改apt源</h1>
<p>这里以阿里云源为例：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 如果需要备份Ubuntu源可以提前备份下
# 可选 cp /etc/apt/sources.list/etc/apt/sources.list.bk
sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list 
sed -i s@/security.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.73,words:219},y:"a",t:"ubuntu:命令行修改apt&pip源到国内源",i:"📅",O:null},["/blog/ubuntu命令行修改apt_pip源到国内源.html","/blog/ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9apt_pip%E6%BA%90%E5%88%B0%E5%9B%BD%E5%86%85%E6%BA%90","/_blog/ubuntu命令行修改apt&pip源到国内源.html","/_blog/ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9apt&pip%E6%BA%90%E5%88%B0%E5%9B%BD%E5%86%85%E6%BA%90.html","/_blog/ubuntu命令行修改apt&pip源到国内源.md","/_blog/ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9apt&pip%E6%BA%90%E5%88%B0%E5%9B%BD%E5%86%85%E6%BA%90.md"]],["v-1f2626a6","/blog/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91.html",{d:"2023-04-22T00:00:00.000Z",l:"2023年4月22日",c:["linux"],g:["docker","交叉编译"],e:`<h3> 一、交叉编译概念</h3>
<p>在设备A下开发编译的程序，放到设备B上运行</p>
<h3> 二、开发步骤</h3>
<p>查看系统版本
cat /proc/version!</p>
<figure><figcaption></figcaption></figure>
<h4> 2.1 下载docker镜像和sdk</h4>
<figure><figcaption></figcaption></figure>
<p>复制下载链接和并用wget下载
</p>
<p>查看本机docker版本
docker version

如果没有找到docker，则需要重新安装一下
具体安装如下：</p>`,r:{minutes:1.76,words:527},y:"a",t:"交叉编译",i:"📅",O:null},["/blog/交叉编译.html","/blog/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91","/_blog/交叉编译.html","/_blog/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91.html","/_blog/交叉编译.md","/_blog/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91.md"]],["v-158fc2d0","/blog/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8Bip.html",{d:"2023-04-22T00:00:00.000Z",l:"2023年4月22日",c:["linux"],g:["ip"],e:`<h4> 查看当前服务器公网ip：</h4>
<p>curl <a href="http://ipconfig.me" target="_blank" rel="noopener noreferrer">ipconfig.me</a>
</p>
<h4> ifconfig参数解析</h4>
<p>
这是一个在 Linux 系统上执行的 <code>ifconfig</code> 命令的输出结果，用于显示系统上的网络接口信息。</p>
<p>在该输出结果中，可以看到以下几个网络接口：</p>
<ul>
<li><code>br-102ccc665cc6</code>：这是一个 Docker 网桥，它允许 Docker 容器相互通信。它的 IP 地址为 <code>172.18.0.1</code>，子网掩码为 <code>255.255.0.0</code>。</li>
<li><code>docker0</code>：这也是一个 Docker 网桥，它允许 Docker 容器与主机进行通信。它的 IP 地址为 <code>172.17.0.1</code>，子网掩码为 <code>255.255.0.0</code>。</li>
<li><code>eth0</code>：这是主机上的物理网络接口，它的 IP 地址为 <code>192.168.0.125</code>，子网掩码为 <code>255.255.255.0</code>。</li>
<li><code>lo</code>：这是一个本地回环接口，用于在本地主机上进行网络通信。它的 IP 地址为 <code>127.0.0.1</code>，子网掩码为 <code>255.0.0.0</code>。</li>
</ul>`,r:{minutes:3.53,words:1059},y:"a",t:"如何查看ip",i:"📅",O:null},["/blog/如何查看ip.html","/blog/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8Bip","/_blog/如何查看ip.html","/_blog/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8Bip.html","/_blog/如何查看ip.md","/_blog/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8Bip.md"]],["v-b8c93872","/blog/%E5%AE%89%E8%A3%85anaconda%E3%80%81tensorflow%E3%80%81Pytoch.html",{d:"2023-04-22T00:00:00.000Z",l:"2023年4月22日",c:["linux"],g:["docker","anaconda"],e:`<h3> 安装anaconda</h3>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://repo.anaconda.com/archive/Anaconda3-2023.03-Linux-x86_64.sh

sudo sh Anaconda3-2023.03-Linux-x86_64.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.23,words:370},y:"a",t:"ubuntu:命令行修改apt&pip源到国内源",i:"📅",O:null},["/blog/安装anaconda、tensorflow、Pytoch.html","/blog/%E5%AE%89%E8%A3%85anaconda%E3%80%81tensorflow%E3%80%81Pytoch","/_blog/安装anaconda、tensorflow、Pytoch.html","/_blog/%E5%AE%89%E8%A3%85anaconda%E3%80%81tensorflow%E3%80%81Pytoch.html","/_blog/安装anaconda、tensorflow、Pytoch.md","/_blog/%E5%AE%89%E8%A3%85anaconda%E3%80%81tensorflow%E3%80%81Pytoch.md"]],["v-5e4552a4","/soph%E5%BC%80%E5%8F%91/%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>在实际开发中，关于工具链（nntc和mlir）、bmlib和sophon inference（SAIL）等方面，你应该注意以下重点知识：</p>
<ol>
<li>
<p><strong>工具链（nntc和mlir）</strong></p>
<ul>
<li>
<p>nntc：nntc是一个神经网络编译器，可以将神经网络模型转换为特定硬件平台上可执行的代码。你需要熟悉nntc支持的模型格式（如ONNX、TensorFlow、PyTorch等），以及如何将模型转换为特定硬件的指令集。</p>
</li>
<li>
<p>MLIR：MLIR（Multi-Level Intermediate Representation）是一个用于表示多种不同层次的中间表示（IR）的编译基础设施。你需要了解MLIR的基本概念（如操作、类型和属性），以及如何使用MLIR为特定硬件编写和优化算子。</p>
</li>
</ul>
</li>
<li>
<p><strong>算子开发</strong></p>
<p>在开发自定义算子时，你应该注意以下几点：</p>
<ul>
<li>了解各种算子的功能和实现方式，以便在实际应用中选择合适的算子。</li>
<li>确保算子在不同硬件平台上的兼容性和可移植性。</li>
<li>优化算子性能，包括计算速度和内存占用。</li>
</ul>
</li>
<li>
<p><strong>模型移植</strong></p>
<p>在模型移植过程中，你需要注意以下几点：</p>
<ul>
<li>保持模型结构和权重的精度，以确保迁移后模型的性能不受影响。</li>
<li>了解目标硬件平台的特点和限制，以便在迁移过程中进行针对性的优化。</li>
<li>在不同框架之间进行迁移时，确保算子的对应和兼容性。</li>
</ul>
</li>
<li>
<p><strong>算法开发</strong></p>
<p>在算法开发过程中，关注以下几点：</p>
<ul>
<li>选择合适的算法框架，如TensorFlow、PyTorch等。</li>
<li>了解各种算法的优缺点，以便为实际问题选择最佳算法。</li>
<li>保持算法的可扩展性和可维护性。</li>
</ul>
</li>
<li>
<p><strong>程序优化</strong></p>
<p>在进行程序优化时，注意以下几点：</p>
<ul>
<li>分析程序瓶颈，找到可优化的部分。</li>
<li>使用性能分析工具，如profiler，定位性能瓶颈。</li>
<li>针对性地优化计算和内存操作，提高程序运行效率。</li>
</ul>
</li>
<li>
<p><strong>通用框架软件开发（bmlib和sophon inference）</strong></p>
<ul>
<li>
<p>bmlib：bmlib是一个通用的库，提供了许多底层功能和优化，如内存管理、并行计算等。你需要了解bmlib的API和功能，以便在项目中利用这些功能提高性能。</p>
</li>
<li>
<p>sophon inference（SAIL）：SAIL是一个高性能的推理引擎，支持多种硬件平台。你需要熟悉SAIL的API和使用方法，以便将其集成到你的项目中。</p>
</li>
</ul>
</li>
</ol>`,r:{minutes:2.11,words:633},y:"a",t:""},["/soph开发/开发知识.html","/soph%E5%BC%80%E5%8F%91/%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86","/soph开发/开发知识.md","/soph%E5%BC%80%E5%8F%91/%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86.md"]],["v-3e3e22f8","/soph%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E5%9F%BA%E7%A1%80.html",{d:"2023-04-26T10:25:41.000Z",e:`<figure><figcaption></figcaption></figure>
<p>

</p>
<figure><figcaption></figcaption></figure>
<p>
</p>
<figure><figcaption></figcaption></figure>
<ol>
<li>
<p><strong>DDR（Double Data Rate）</strong>：DDR是一种计算机内存技术，它可以在每个时钟周期内传输两次数据，因此可以实现比传统SDRAM更高的带宽和性能。DDR内存通常被用于桌面计算机、服务器和其他需要高性能内存的设备上。</p>
</li>
<li>
<p><strong>LPDDR（Low Power Double Data Rate）</strong>：LPDDR是一种低功耗的DDR内存，它与传统DDR相比具有更低的功耗和更高的带宽效率。由于其低功耗和高性能，LPDDR内存通常被用于移动设备，例如智能手机、平板电脑和笔记本电脑等。</p>
</li>
<li>
<p><strong>PCIe（Peripheral Component Interconnect Express）</strong>：PCIe是一种高速串行总线接口标准，用于连接计算机内部的各种设备，例如显卡、网卡、存储控制器等。PCIe接口具有高速、可扩展和热插拔等优点，因此在现代计算机中广泛使用。</p>
</li>
<li>
<p><strong>Ethernet</strong>：以太网是一种局域网技术，用于在计算机和其他设备之间进行数据通信。它是一种基于分组交换的数据传输协议，可以实现高速、可靠和灵活的数据通信。以太网通常被用于连接计算机、服务器、网络打印机、路由器和交换机等设备。</p>
</li>
<li>
<p><strong>eMMC</strong>（Embedded Multi-Media Card）：eMMC是一种嵌入式多媒体卡，它是一种基于闪存存储技术的存储卡，常用于嵌入式系统和移动设备中，例如智能手机、平板电脑和车载娱乐系统等。eMMC具有小巧、高速、低功耗和可靠等特点，可以提供可靠的存储解决方案。</p>
</li>
</ol>`,r:{minutes:1.56,words:468},y:"a",t:""},["/soph开发/深度学基础.html","/soph%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E5%9F%BA%E7%A1%80","/soph开发/深度学基础.md","/soph%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E5%9F%BA%E7%A1%80.md"]],["v-8b564fc6","/soph%E5%BC%80%E5%8F%91/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T15:55:00.000Z",r:{minutes:0,words:1},y:"a",t:""},["/soph开发/详情目录.html","/soph%E5%BC%80%E5%8F%91/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95","/soph开发/详情目录.md","/soph%E5%BC%80%E5%8F%91/%E8%AF%A6%E6%83%85%E7%9B%AE%E5%BD%95.md"]],["v-5392bf0c","/00Daily_Question/QandA/01.html",{y:"p",t:"每日一问—01如何在指定目录下的文件名前面加上“0”+序号",i:"note"},["/00Daily_Question/QandA/01","/00Daily_Question/QandA/01.md"]],["v-50290dce","/00Daily_Question/QandA/02.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 每日一问—02如何实现PDF合并？</h1>
<h2> python版本</h2>
<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> PyPDF2
 
pdf_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'D:\\\\TJU\\\\1.pdf'</span><span class="token punctuation">,</span> <span class="token string">'D:\\\\TJU\\\\1.pdf'</span><span class="token punctuation">]</span>
pdf_writer <span class="token operator">=</span> PyPDF2<span class="token punctuation">.</span>PdfFileWriter<span class="token punctuation">(</span><span class="token punctuation">)</span>
 
<span class="token keyword">for</span> file_name <span class="token keyword">in</span> pdf_files<span class="token punctuation">:</span>
    pdf_reader <span class="token operator">=</span> PyPDF2<span class="token punctuation">.</span>PdfFileReader<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> page_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>pdf_reader<span class="token punctuation">.</span>numPages<span class="token punctuation">)</span><span class="token punctuation">:</span>
        pdf_writer<span class="token punctuation">.</span>addPage<span class="token punctuation">(</span>pdf_reader<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>page_num<span class="token punctuation">)</span><span class="token punctuation">)</span>
 
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'D:\\\\TJU\\\\merged_file.pdf'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> merged_file<span class="token punctuation">:</span>
    pdf_writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>merged_file<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.32,words:395},y:"a",t:"每日一问—02如何实现PDF合并？"},["/00Daily_Question/QandA/02","/00Daily_Question/QandA/02.md"]],["v-4cbf5c90","/00Daily_Question/QandA/03.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 每日一问—03如何拆分指定页码pdf</h1>
<p>​</p>
<h2> 一、各页码范围合成一个整体的pdf&nbsp;&nbsp;​</h2>
<h3> python版本</h3>
<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> PyPDF2 <span class="token comment">#导入PyPDF2模块</span>

<span class="token keyword">def</span> <span class="token function">merge_pdf_pages</span><span class="token punctuation">(</span>input_pdf<span class="token punctuation">,</span> page_ranges<span class="token punctuation">,</span> output_pdf<span class="token punctuation">)</span><span class="token punctuation">:</span>
    reader <span class="token operator">=</span> PyPDF2<span class="token punctuation">.</span>PdfFileReader<span class="token punctuation">(</span>input_pdf<span class="token punctuation">)</span> <span class="token comment">#读取PDF文件</span>
    writer <span class="token operator">=</span> PyPDF2<span class="token punctuation">.</span>PdfFileWriter<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#创建PDF文件写入对象</span>

    <span class="token keyword">for</span> page_range <span class="token keyword">in</span> page_ranges<span class="token punctuation">:</span> <span class="token comment">#遍历每个页码范围</span>
        start<span class="token punctuation">,</span> end <span class="token operator">=</span> page_range <span class="token comment">#获取页码范围的起始页码和结束页码</span>
        <span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#遍历页码范围内的每一页</span>
            writer<span class="token punctuation">.</span>addPage<span class="token punctuation">(</span>reader<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>page<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#将每一页添加到PDF文件写入对象中</span>

    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>output_pdf<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> output<span class="token punctuation">:</span> <span class="token comment">#打开输出PDF文件</span>
        writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token comment">#将PDF文件写入对象中的内容写入输出PDF文件</span>

input_pdf <span class="token operator">=</span> <span class="token string">"D:\\\\TJU\\\\3.pdf"</span> <span class="token comment">#输入PDF文件路径</span>
page_ranges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">#页码范围</span>
output_pdf <span class="token operator">=</span> <span class="token string">'D:\\\\TJU\\\\output.pdf'</span> <span class="token comment">#输出PDF文件路径</span>
merge_pdf_pages<span class="token punctuation">(</span>input_pdf<span class="token punctuation">,</span> page_ranges<span class="token punctuation">,</span> output_pdf<span class="token punctuation">)</span> <span class="token comment">#合并PDF文件</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'PDF files merged successfully!'</span><span class="token punctuation">)</span> <span class="token comment">#输出合并成功信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.52,words:756},y:"a",t:"每日一问—03如何拆分指定页码pdf"},["/00Daily_Question/QandA/03","/00Daily_Question/QandA/03.md"]],["v-4955ab52","/00Daily_Question/QandA/04.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>​</p>
<h1> 每日一问—04如何利用华为云和Frp进行内网穿透</h1>
<h2> 1、部署华为云安全组</h2>
<p></p>
<h2> 2、登陆服务器，部署服务器端</h2>
<p>(1)frp开源地址：<a href="https://github.com/fatedier/frp/releases" title="Releases · fatedier/frp (github.com)" target="_blank" rel="noopener noreferrer">Releases · fatedier/frp (github.com)</a></p>
<p>(2)下载解压</p>`,r:{minutes:1.19,words:358},y:"a",t:"每日一问—04如何利用华为云和Frp进行内网穿透"},["/00Daily_Question/QandA/04","/00Daily_Question/QandA/04.md"]],["v-45ebfa14","/00Daily_Question/QandA/05.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 每日一问—05将网络图的链接保存为本地链接</h1>
<figure><figcaption></figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>按shift+ctrl+p，输入local images，选择Download images locally，即可将网络图片保存到本地。然后将图片复制到当前文件的photo文件夹下，再将图片的链接替换为本地链接即可。</p>
</div>
<h1> Obsidian Local Images</h1>`,r:{minutes:1.3,words:390},y:"a",t:"每日一问—05将网络图的链接保存为本地链接"},["/00Daily_Question/QandA/05","/00Daily_Question/QandA/05.md"]],["v-428248d6","/00Daily_Question/QandA/06.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 每日一问—06如何将docx转化为markdown</h1>
<h2> 一、安装Writage</h2>
<p>下载并安装 Writage，下载地址：<a href="http://www.writage.com/" target="_blank" rel="noopener noreferrer">http://www.writage.com/</a>
安装完成后，检查是否安装成功
会在word标题栏看到其标签
随便打开一个文件，点另存为，在文件类型中能找到.md格式</p>
<h2> 二、安装panddoc</h2>
<p>下载并安装 pandoc，下载地址：<a href="https://github.com/jgm/pandoc/releases/tag/3.1.2" target="_blank" rel="noopener noreferrer">https://github.com/jgm/pandoc/releases/tag/3.1.2</a></p>`,r:{minutes:.42,words:125},y:"a",t:"每日一问—06如何将docx转化为markdown"},["/00Daily_Question/QandA/06","/00Daily_Question/QandA/06.md"]],["v-3f189798","/00Daily_Question/QandA/07.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 问题：</h1>
<p>为chrome添加infinity插件时提示无法从该网站添加应用、扩展程序和用户脚本</p>
<h1> 解决方法：</h1>
<p>1、在地址栏输入：chrome://flags/#extensions-on-chrome-urls并按回车键 2、在Extensions on chrome:// URLs选项选择Enabled</p>
<figure><figcaption></figcaption></figure>
<p>3、在弹出框选择relaunch重启即可</p>
<p>4、点击更多程序—扩展程序，开启开发者模块！！！</p>
<p>5、将下载的插件.crx文件拖至该页面，点击添加扩展程序即可</p>`,r:{minutes:.41,words:122},y:"a",t:"问题："},["/00Daily_Question/QandA/07","/00Daily_Question/QandA/07.md"]],["v-fcb74944","/01Sensor/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88%E6%A6%82%E8%BF%B0.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["传感器"],g:["传感器","算法","机器人"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>多传感器融合</p>
</div>
<h1> 一、多传感器融合主要内容</h1>
<p>多传感器融合已成为自动驾驶及机器人的主流定位方案，涉及内容广泛且繁杂，包括传感器的标定、数据处理、SLAM、滤波等。本文核心要解决一下三个问题：
3D激光里程计</p>
`,r:{minutes:.38,words:115},y:"a",t:"多传感器融合",i:"robotics",O:null},["/01Sensor/多传感器融合/多传感器融合概述.html","/01Sensor/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88%E6%A6%82%E8%BF%B0","/01Sensor/多传感器融合/多传感器融合概述.md","/01Sensor/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88%E6%A6%82%E8%BF%B0.md"]],["v-b6ed6200","/01Sensor/%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/IWI1843.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 数据格式</h2>
<p>根据数据存储格式将一帧数据分8路（IQ双通道，4个接收天线通道，一共8路），我的只有第1路（实部）和第5 路（虚部）有数据，然后进行序虚部实部相加，最后我们得到RX0。</p>
<figure><figcaption></figcaption></figure>
<p>分成8路后data1数据如下图所示：</p>
<figure><figcaption></figcaption></figure>
<p>虚部实部相加后，变成4路，第一路是一根接收天线的所有数据，其余三路数据为0，adcdata数据如下图所示：</p>
<figure><figcaption></figcaption></figure>`,r:{minutes:.45,words:136},y:"a",t:""},["/01Sensor/毫米波雷达/IWI1843.html","/01Sensor/%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/IWI1843","/01Sensor/毫米波雷达/IWI1843.md","/01Sensor/%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/IWI1843.md"]],["v-556d5707","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 目标</h2>
<p>将不同图像划分到预定义好的几个类别之一</p>
<h2> 难点</h2>
<ul>
<li>类内差异</li>
<li>北京干扰</li>
<li>相互遮挡</li>
<li>样本不均匀</li>
</ul>
<h2> 常用数据集</h2>
<ul>
<li>MNIST</li>
<li>CIFAR-10</li>
<li>CIFAR-100</li>
<li>ImageNet-1000</li>
</ul>
<h2> 评估准则</h2>
<p>

</p>
<h2> 常用分类网络</h2>
<p>

</p>
<p>




</p>
<h2> 发展方向</h2>`,r:{minutes:.55,words:166},y:"a",t:""},["/02Image_Processing/图像分类/图像分类.html","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB","/02Image_Processing/图像分类/图像分类.md","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB.md"]],["v-2dc68459","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/VIO%E9%87%8C%E7%A8%8B%E8%AE%A1.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["计算机视觉"],g:["算法","双目视觉","里程计"],e:`<p>::: tips
VIO里程计相关介绍
:::</p>
<h2> 一、VIO视觉里程计</h2>
<p>VIO算法和常规<a href="https://so.csdn.net/so/search?q=SLAM&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">SLAM</a>算法最大的不同在于两点：</p>
<ul>
<li>VIO在硬件上需要传感器的融合，包括相机和六轴陀螺仪，相机产生图片，六轴陀螺仪产生加速度和角速度。相机相对准但相对慢，六轴陀螺仪的原始加速度如果拿来直接积分会在很短的时间漂移（zero-drift），但六轴陀螺仪的频率很高，在手机上都有200Hz。</li>
<li>VIO实现的是一种比较复杂而有效的非线性优化或者卡尔曼滤波，比如MSCKF（Multi-State-Constraint-Kalman-Filter），侧重的是快速的姿态跟踪，而不花精力来维护全局地图，也不做keyframe based SLAM里面的针对地图的全局优化（bundle adjustment）。</li>
</ul>`,r:{minutes:16.02,words:4807},y:"a",t:"VIO里程计",i:"🧑",O:null},["/03Computer_Vision/3D_视觉/VIO里程计.html","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/VIO%E9%87%8C%E7%A8%8B%E8%AE%A1","/03Computer_Vision/3D_视觉/VIO里程计.md","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/VIO%E9%87%8C%E7%A8%8B%E8%AE%A1.md"]],["v-3b374fed","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/%E7%AB%8B%E4%BD%93%E8%A7%86%E8%A7%89.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["计算机视觉"],g:["算法","双目视觉","里程计"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>立体视觉</p>
</div>
<p>一个典型的双目结构图。</p>
<figure><figcaption></figcaption></figure>
<p>对于R和t，我们给出纯数学上的描述，假设空间点P在左相机相机坐标系下的坐标为$P$，在右相机相机坐标系下的坐标为$P'$，则满足：</p>
<p>$P'=R*P+t$</p>
<p>除此之外，还通常会<strong>将双目系统的世界坐标系放在左相机的中心</strong>，<strong>并和左相机坐标系完全重合</strong>，从这个角度来说，R , t R,tR,t就相当于是右相机在世界坐标系下的外参，而左相机在世界坐标系的外参则是$[I,0]$（$I$是单位矩阵）。</p>`,r:{minutes:4.77,words:1430},y:"a",t:"立体视觉",i:"🧑",O:null},["/03Computer_Vision/3D_视觉/立体视觉.html","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/%E7%AB%8B%E4%BD%93%E8%A7%86%E8%A7%89","/03Computer_Vision/3D_视觉/立体视觉.md","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/%E7%AB%8B%E4%BD%93%E8%A7%86%E8%A7%89.md"]],["v-458ac3fc","/03Computer_Vision/Opencv/opencv%E6%A6%82%E8%BF%B0.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["计算机视觉"],g:["Opencv","算法"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>opencv</p>
</div>
<ul>
<li>
<p><strong><strong>1.输入、显示和保存图像</strong></strong></p>
<ul>
<li>读取：imread()</li>
<li>显示：imshow()</li>
<li>保存：imwrite()</li>
<li>窗口：namedWindow()</li>
</ul>
</li>
<li>
<p><strong><strong>2.读取、显示、保存和处理视频</strong></strong></p>
<p>VideoCapture()，参数为0为读取摄像头，参数为文件名读取对应视频文件</p>
</li>
<li>
<p><strong>3.画线，画圆，画矩形，画多边形，显示文字</strong></p>
<ul>
<li>线：line()</li>
<li>矩形：rectangle()</li>
<li>圆：circle()</li>
<li>多边形：polylines()</li>
<li>显示文字：putText()</li>
</ul>
</li>
<li>
<p><strong><strong>4.框住并得到目标位置（获取鼠标消息）</strong></strong></p>
<p>• setMouseCallback()：回调函数，第一个参数为窗口名，需要自己设计；第二个参数为自己写的函数，在这里我写了一个可以对目标进行框定和位置获取的函数。</p>
</li>
<li>
<p>**<strong>6.图像基础操作：<a href="https://so.csdn.net/so/search?q=%E5%83%8F%E7%B4%A0&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">像素</a>、属性、ROI、通道、填充</strong></p>
<ul>
<li>像素：直接对原图数值进行更改</li>
<li>属性：size、dtype、shape</li>
<li>ROI：感兴趣区域</li>
<li>通道：img的第三维的数值</li>
<li>填充：四周填充copyMakeBorder()</li>
</ul>
</li>
<li>
<p><strong><strong>7.图像运算：加法、混合</strong></strong></p>
<ul>
<li>相加：add()</li>
<li>混合：addWeighted()，参数4和参数3表示参数3和参数1的混合比例</li>
</ul>
</li>
<li>
<p><strong><strong>9.颜色空间转换</strong></strong></p>
<ul>
<li>颜色空间转换：cvtColor()</li>
<li>判断像素值是否在某区间：inrange()</li>
</ul>
</li>
<li>
<p><strong><strong>10.图像几何变换：扩展缩放、平移、旋转、仿射变换、透视变换</strong></strong></p>
<ul>
<li>扩展缩放：resize()</li>
<li>仿射变换：warpAffine()</li>
<li>旋转辅助函数：getRotationMatrix2D()</li>
<li>透视变换：getPerspectiveTransform(),warpPerspective()</li>
</ul>
</li>
<li>
<p><strong><strong>11.图像二值化：简单阈值，自适应阈值，Otsu阈值</strong></strong></p>
<ul>
<li>阈值分割：threshold()</li>
<li>自适应阈值：adaptiveThreshold()</li>
</ul>
</li>
<li>
<p><strong><strong>12.图像平滑：平均、高斯、中值、双边滤波</strong></strong></p>
<ul>
<li>滤波：blur()</li>
<li>高斯滤波：GaussianBlur()</li>
<li>中值滤波：medianBlur()</li>
<li>双边滤波：bilateralFilter()</li>
</ul>
</li>
<li>
<p><strong><strong>13.图像形态学转换</strong></strong></p>
<p>腐蚀、膨胀、开闭、梯度、礼帽黑帽</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>img <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token char">'xxx.png'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
kernel <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
# 腐蚀
test1 <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">erode</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>kernel<span class="token operator">=</span>kernel<span class="token punctuation">)</span>
# 膨胀
test2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">dilate</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>kernel<span class="token operator">=</span>kernel<span class="token punctuation">)</span>
# 开运算
test3 <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">morphologyEx</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>MORPH_OPEN<span class="token punctuation">,</span>kernel<span class="token operator">=</span>kernel<span class="token punctuation">)</span>
# 闭运算
test4 <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">morphologyEx</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>MORPH_OPEN<span class="token punctuation">,</span>kernel<span class="token operator">=</span>kernel<span class="token punctuation">)</span>
# 形态学梯度 膨胀<span class="token operator">-</span>腐蚀
gradient <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">morphologyEx</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>MORPH_GRADIENT<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>
# 礼帽 原始图像与进行开运算之后得到的图像的差。
tophat <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">morphologyEx</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>MORPH_TOPHAT<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>
# 黑帽 进行闭运算之后得到的图像与原始图像的差
blackhat <span class="token operator">=</span> cv2<span class="token punctuation">.</span><span class="token function">morphologyEx</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>MORPH_BLACKHAT<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong><strong>14.图像梯度：各种算子</strong></strong></p>
<ul>
<li>拉普拉斯： Laplacian()</li>
<li>Sobel算子：Sobel()</li>
<li>Canny算子：Canny()</li>
</ul>
</li>
<li>
<p><strong><strong>15.图像金字塔</strong></strong></p>
<ul>
<li>pyrDown()</li>
<li>pyrUp()</li>
</ul>
</li>
<li>
<p><strong><strong>16.图像轮廓</strong></strong></p>
<ul>
<li>找轮廓 findContours</li>
<li>画轮廓 drawContours其他：重心、周长、面积、轮廓近似、凸包、矩阵、最小外接圆、椭圆和直线拟合</li>
</ul>
</li>
<li>
<p><strong><strong>17.直方图计算绘制、均衡化、反向投影、2D投影</strong></strong></p>
<ul>
<li>计算直方图：calcHist()</li>
<li>绘制直方图(pyplot)：hist()</li>
<li>直方图均衡化：equalizeHist()</li>
</ul>
</li>
<li>
<p><strong><strong>18.图像变换：傅里叶变换</strong></strong></p>
<ul>
<li>快速傅里叶变换（np）：fft()</li>
<li>傅里叶变换（opencv）:dft()</li>
</ul>
</li>
<li>
<p><strong><strong>19.图像模板匹配</strong></strong></p>
<p>• 模板匹配：matchTemplate()</p>
</li>
<li>
<p><strong><strong>20.Hough变换</strong></strong></p>
<p>****Hough 直线变换：****HoughLines() ****Hough 圆环变换：****HoughCircles()</p>
</li>
<li>
<p><strong><strong>22.GrabCut算法进行交互式前景提取</strong></strong></p>
<p>grabCut()</p>
</li>
<li>
<p><strong><strong>23.角点检测</strong></strong></p>
<ul>
<li>角点检测：cornerHarris()</li>
<li>获得n个最佳角点：goodFeaturesToTrack()</li>
</ul>
</li>
<li>
<p><strong><strong>24.SIFT算法</strong></strong></p>
<p>SIFT算法利用了尺度不变性来进行图像关键点的提取</p>
</li>
<li>
<p><strong><strong>25.ORB算法</strong></strong></p>
<p>利用SIFT，ORB算法等一般进行特征匹配</p>
</li>
</ul>`,r:{minutes:2.62,words:785},y:"a",t:"Opencv",i:"robotics",O:null},["/03Computer_Vision/Opencv/opencv概述.html","/03Computer_Vision/Opencv/opencv%E6%A6%82%E8%BF%B0","/03Computer_Vision/Opencv/opencv概述.md","/03Computer_Vision/Opencv/opencv%E6%A6%82%E8%BF%B0.md"]],["v-34aaaefc","/03Computer_Vision/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["计算机视觉"],g:["算法","双目视觉","机器视觉"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>机器视觉概述</p>
</div>
<h3> 硬件环境的搭建</h3>
<ul>
<li>
<p><strong>相机</strong></p>
<p>相机的主要参数：分辨率、像素尺寸、帧率、像素深度、数字接口</p>
<p>相机的种类：面阵相机和线阵相机、CMOS和CCD、黑白相机和彩色相机</p>
<p>相机的接口：GigE接口（网口）、USB3.0、Camera Link、Fireware</p>
<p>相机的选型：面阵相机和线阵相机</p>
</li>
<li>
<p><strong>图像采集卡</strong></p>
<p>根据支持的接口、支持的分辨率等</p>
</li>
<li>
<p><strong>镜头</strong></p>
<p>**接口：**C、F、CS、S</p>
<p>**最大靶面尺寸：**芯片尺寸</p>
<p><strong>物距和焦距：</strong></p>
<p>**光圈：**光圈越大，进光越多</p>
<p>**分辨率和成像质量：**分辨率越高成像越清晰</p>
<p><strong>镜头倍率与视场范围：</strong></p>
<ul>
<li>
<p><strong>选型步骤</strong></p>
<p>（1）确定相机连接的镜头接口类型，如C口或者F口，这个接口决定了镜头的接口。</p>
<p>（2）确定镜头的最大靶面尺寸和相机匹配。</p>
<p>（3）确定焦距。首先测量工作距离和目标物体大小，得到图像的宽或者高度；然后确定相机的安装位置，从相机的拍摄角度推测视角，最后根据几何关系计算相机焦距。</p>
<p>（4）根据现场拍摄要求，考虑光圈、价格等其它因素。</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:25.01,words:7502},y:"a",t:"机器视觉概述",i:"🧑",O:null},["/03Computer_Vision/机器视觉/机器视觉概述.html","/03Computer_Vision/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0","/03Computer_Vision/机器视觉/机器视觉概述.md","/03Computer_Vision/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0.md"]],["v-168d6ffc","/03Computer_Vision/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E6%A6%82%E8%BF%B0.html",{d:"2023-03-31T00:00:00.000Z",l:"2023年3月31日",c:["计算机视觉"],g:["算法","双目视觉","机器视觉"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>模式识别</p>
</div>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 最近邻</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 贝叶斯分类</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 隐士马尔可夫</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 决策树</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 支持向量机</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 多分类器组合</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 聚类方法</label></li>
</ul>`,r:{minutes:.23,words:69},y:"a",t:"模式识别概述",i:"🧑",O:null},["/03Computer_Vision/模式识别/模式识别概述.html","/03Computer_Vision/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E6%A6%82%E8%BF%B0","/03Computer_Vision/模式识别/模式识别概述.md","/03Computer_Vision/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E6%A6%82%E8%BF%B0.md"]],["v-ab6c903c","/03Computer_Vision/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E6%A6%82%E8%BF%B0.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 一、基本概念</h2>
<h3> 1. 什么是目标检测</h3>
<p>目标检测（Object Detection）的任务是找出图像中所有感兴趣的目标（物体），确定它们的类别和位置，是计算机视觉领域的核心问题之一。由于各类物体有不同的外观、形状和姿态，加上成像时光照、遮挡等因素的干扰，目标检测一直是计算机视觉领域最具有挑战性的问题。</p>
<p>计算机视觉中关于图像识别有四大类任务：</p>
<p>（1）分类-Classification：解决“是什么？”的问题，即给定一张图片或一段视频判断里面包含什么类别的目标。</p>
<p>（2）定位-Location：解决“在哪里？”的问题，即定位出这个目标的的位置。</p>`,r:{minutes:31.67,words:9500},y:"a",t:"目标检测概述"},["/03Computer_Vision/目标检测/目标检测概述.html","/03Computer_Vision/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E6%A6%82%E8%BF%B0","/03Computer_Vision/目标检测/目标检测概述.md","/03Computer_Vision/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E6%A6%82%E8%BF%B0.md"]],["v-f1cbec06","/03Computer_Vision/%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95/%E4%BC%81%E4%B8%9A%E8%A6%81%E6%B1%82.html",{d:"2023-04-26T10:25:41.000Z",e:`<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 图像增强-华为/蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 图像分割（可分为语义分割和实例分割）-华为/蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 图像匹配-华为</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 学习分类-华为</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 3D检测和测量-华为</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 图像和视频分类-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 目标检测-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 目标跟踪-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 多目标跟踪-商汤</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 图像表征学习-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> 图像生成-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> OCR-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> 视频关键帧检测-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> 视频摘要-蚂蚁</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> 点云处理、点云分割、MOT、位姿估计</label></li>
<li></li>
</ul>`,r:{minutes:.4,words:121},y:"a",t:""},["/03Computer_Vision/视觉算法/企业要求.html","/03Computer_Vision/%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95/%E4%BC%81%E4%B8%9A%E8%A6%81%E6%B1%82","/03Computer_Vision/视觉算法/企业要求.md","/03Computer_Vision/%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95/%E4%BC%81%E4%B8%9A%E8%A6%81%E6%B1%82.md"]],["v-469c82f9","/03Computer_Vision/%E9%A1%B9%E7%9B%AE/%E8%BD%A6%E9%81%93%E7%BA%BF%E6%A3%80%E6%B5%8B.html",{d:"2023-04-26T10:25:41.000Z",e:`<aside> 🪁 第一步：图像灰度化 第二步：高斯平滑，消除部分噪声 第三步：采用Canny进行边缘检测 第四步：ROI边缘过滤 第五步：Hough变换直线检测，通过最小二乘拟合确定车道线方程
</aside>
<p><a href="https://blog.csdn.net/stf1065716904/article/details/125716903" target="_blank" rel="noopener noreferrer"></a><a href="https://blog.csdn.net/stf1065716904/article/details/125716903" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/stf1065716904/article/details/125716903</a>

<a href="https://zhuanlan.zhihu.com/p/52623916?from_voters_page=true" target="_blank" rel="noopener noreferrer"></a><a href="https://zhuanlan.zhihu.com/p/52623916?from_voters_page=true" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/52623916?from_voters_page=true</a></p>`,r:{minutes:.42,words:127},y:"a",t:"车道线检测"},["/03Computer_Vision/项目/车道线检测.html","/03Computer_Vision/%E9%A1%B9%E7%9B%AE/%E8%BD%A6%E9%81%93%E7%BA%BF%E6%A3%80%E6%B5%8B","/03Computer_Vision/项目/车道线检测.md","/03Computer_Vision/%E9%A1%B9%E7%9B%AE/%E8%BD%A6%E9%81%93%E7%BA%BF%E6%A3%80%E6%B5%8B.md"]],["v-4561cc1a","/08AI_Machine_Learning_Deep_Learning/CNN/CNN.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>下面是一个简单的CNN的结构图，让我们来写代码实现它吧。</p>
<p>![[photo/1.png]]</p>
<p>上面的结构可以简化为:<br>
Convolutional layer-&gt;ReLU-&gt;Max Pooling-&gt;Flatten-&gt;Fully Connected layer -&gt;ReLU-&gt; Fully Connected</p>
<p>完整代码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fbigfishtwo%2FNeuralNetwork-python" target="_blank" rel="noopener noreferrer">https://github.com/bigfishtwo/NeuralNetwork-python</a><br>
先从简单的开始。</p>`,r:{minutes:13.94,words:4182},y:"a",t:"CNN"},["/08AI_Machine_Learning_Deep_Learning/CNN/CNN","/08AI_Machine_Learning_Deep_Learning/CNN/CNN.md"]],["v-4a0ba51f","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 机器平台学习清单</h1>
<table>
<thead>
<tr>
<th>name</th>
<th>link</th>
</tr>
</thead>
<tbody>
<tr>
<td>谷歌学术</td>
<td><a href="https://scholar.google.com/" target="_blank" rel="noopener noreferrer">https://scholar.google.com/</a></td>
</tr>
<tr>
<td>预印本</td>
<td><a href="https://arxiv.org/" target="_blank" rel="noopener noreferrer">https://arxiv.org/</a></td>
</tr>
<tr>
<td>paper with code</td>
<td><a href="https://paperswithcode.com/" target="_blank" rel="noopener noreferrer">https://paperswithcode.com/</a></td>
</tr>
<tr>
<td>天池</td>
<td><a href="https://tianchi.aliyun.com/" target="_blank" rel="noopener noreferrer">https://tianchi.aliyun.com/</a></td>
</tr>
<tr>
<td>DataFountain</td>
<td><a href="https://www.datafountain.cn/" target="_blank" rel="noopener noreferrer">https://www.datafountain.cn/</a></td>
</tr>
<tr>
<td>智源</td>
<td><a href="https://www.datafountain.cn/" target="_blank" rel="noopener noreferrer">https://www.datafountain.cn/</a></td>
</tr>
<tr>
<td>kesci</td>
<td><a href="https://www.kesci.com/" target="_blank" rel="noopener noreferrer">https://www.kesci.com/</a></td>
</tr>
<tr>
<td>DC竞赛</td>
<td><a href="https://www.dcjingsai.com/" target="_blank" rel="noopener noreferrer">https://www.dcjingsai.com/</a></td>
</tr>
<tr>
<td>京东jdata</td>
<td><a href="https://jdata.jd.com/" target="_blank" rel="noopener noreferrer">https://jdata.jd.com/</a></td>
</tr>
<tr>
<td>百度大脑</td>
<td><a href="https://aistudio.baidu.com/aistudio/index" target="_blank" rel="noopener noreferrer">https://aistudio.baidu.com/aistudio/index</a></td>
</tr>
<tr>
<td>百度点石</td>
<td><a href="https://dianshi.baidu.com/" target="_blank" rel="noopener noreferrer">https://dianshi.baidu.com/</a></td>
</tr>
<tr>
<td>华为云大赛</td>
<td><a href="https://competition.huaweicloud.com/" target="_blank" rel="noopener noreferrer">https://competition.huaweicloud.com/</a></td>
</tr>
<tr>
<td>讯飞开放平台</td>
<td><a href="http://challenge.xfyun.cn" target="_blank" rel="noopener noreferrer">http://challenge.xfyun.cn</a></td>
</tr>
</tbody>
</table>`,r:{minutes:13.17,words:3950},y:"a",t:"学习资源"},["/08AI_Machine_Learning_Deep_Learning/Machine_Learning/学习资源.html","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/学习资源.md","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90.md"]],["v-afccdf7a","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Download%20Machine%20Learning%20Algorithm%20Cheat%20Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Download: Machine Learning Algorithm Cheat Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Link: <a href="https://docs.microsoft.com/en-in/azure/machine-learning/algorithm-cheat-sheet" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-in/azure/machine-learning/algorithm-cheat-sheet</a>
Status: Current 👍</p>`,r:{minutes:.13,words:38},y:"a",t:"Download: Machine Learning Algorithm Cheat Sheet"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Download Machine Learning Algorithm Cheat Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Download%20Machine%20Learning%20Algorithm%20Cheat%20Sheet","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Download Machine Learning Algorithm Cheat Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Download%20Machine%20Learning%20Algorithm%20Cheat%20Sheet.md"]],["v-d4bc44f4","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Keras.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Keras</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.07,words:20},y:"a",t:"Keras"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Keras.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Keras","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Keras.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Keras.md"]],["v-0df8921e","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Matplotlib.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Matplotlib</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.07,words:20},y:"a",t:"Matplotlib"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Matplotlib.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Matplotlib","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Matplotlib.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Matplotlib.md"]],["v-2a5173cc","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Microsoft%20Azure%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98%E5%8D%95.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Microsoft Azure机器学习备忘单</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.1,words:30},y:"a",t:"Microsoft Azure机器学习备忘单"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Microsoft Azure机器学习备忘单.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Microsoft%20Azure%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98%E5%8D%95","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Microsoft Azure机器学习备忘单.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Microsoft%20Azure%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98%E5%8D%95.md"]],["v-59cc65be","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Numpy.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Numpy</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.07,words:20},y:"a",t:"Numpy"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Numpy.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Numpy","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Numpy.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Numpy.md"]],["v-58a92c3c","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> PySpark</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.07,words:20},y:"a",t:"PySpark"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/PySpark.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/PySpark.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark.md"]],["v-992e20ec","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python%203%20Cheat%20Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Python 3 Cheat Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Link: <a href="https://perso.limsi.fr/pointal/python:memento" target="_blank" rel="noopener noreferrer">https://perso.limsi.fr/pointal/python:memento</a></p>
<figure><figcaption>mementopython3-zh_cn-1.png</figcaption></figure>`,r:{minutes:.14,words:41},y:"a",t:"Python 3 Cheat Sheet"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Python 3 Cheat Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python%203%20Cheat%20Sheet","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Python 3 Cheat Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python%203%20Cheat%20Sheet.md"]],["v-973c7be4","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit-Learn.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Scikit-Learn</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.07,words:21},y:"a",t:"Scikit-Learn"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Scikit-Learn.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit-Learn","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Scikit-Learn.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit-Learn.md"]],["v-54d76c1e","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit-Learn%E7%AE%97%E6%B3%95.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Scikit-Learn算法</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.08,words:23},y:"a",t:"Scikit-Learn算法"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Scikit-Learn算法.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit-Learn%E7%AE%97%E6%B3%95","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Scikit-Learn算法.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit-Learn%E7%AE%97%E6%B3%95.md"]],["v-e796fda4","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scipy.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Scipy</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.07,words:20},y:"a",t:"Scipy"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Scipy.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scipy","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/Scipy.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scipy.md"]],["v-3a27e90a","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/TensorFlow.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> TensorFlow</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.07,words:20},y:"a",t:"TensorFlow"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/TensorFlow.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/TensorFlow","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/TensorFlow.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/TensorFlow.md"]],["v-b52aa0f6","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E4%BD%BF%E7%94%A8dplyr%E5%92%8Ctidyr%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 使用dplyr和tidyr进行数据整理</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.11,words:34},y:"a",t:"使用dplyr和tidyr进行数据整理"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/使用dplyr和tidyr进行数据整理.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E4%BD%BF%E7%94%A8dplyr%E5%92%8Ctidyr%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/使用dplyr和tidyr进行数据整理.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E4%BD%BF%E7%94%A8dplyr%E5%92%8Ctidyr%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86.md"]],["v-09aa8acc","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E5%A4%87%E5%BF%98%E5%8D%95.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 备忘单</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<h2> <strong>Python for Data Science Cheat Sheets</strong></h2>
<h2> <strong>1.<a href="https://www.analyticsvidhya.com/blog/2015/05/infographic-quick-guide-learn-python-data-science/" target="_blank" rel="noopener noreferrer">Quick Guide to learn Python for Data Science</a></strong></h2>`,r:{minutes:1.56,words:469},y:"a",t:"备忘单"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/备忘单.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E5%A4%87%E5%BF%98%E5%8D%95","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/备忘单.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E5%A4%87%E5%BF%98%E5%8D%95.md"]],["v-48bbaf63","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 数据可视化</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.09,words:28},y:"a",t:"数据可视化"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据可视化.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据可视化.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.md"]],["v-ae41da2c","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 数据整理</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.09,words:27},y:"a",t:"数据整理"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据整理.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据整理.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86.md"]],["v-4833ebdb","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6Python%E7%BC%96%E7%A8%8B.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 数据科学Python编程</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.1,words:30},y:"a",t:"数据科学Python编程"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据科学Python编程.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6Python%E7%BC%96%E7%A8%8B","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据科学Python编程.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6Python%E7%BC%96%E7%A8%8B.md"]],["v-6952f1b6","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6_Bokeh%E9%80%9F%E6%9F%A5%E8%A1%A8.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 数据科学：Bokeh速查表</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.09,words:27},y:"a",t:"数据科学：Bokeh速查表"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据科学_Bokeh速查表.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6_Bokeh%E9%80%9F%E6%9F%A5%E8%A1%A8","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/数据科学_Bokeh速查表.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6_Bokeh%E9%80%9F%E6%9F%A5%E8%A1%A8.md"]],["v-f0cbb6f6","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 机器学习算法概述</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Untitled</figcaption></figure>
`,r:{minutes:.1,words:29},y:"a",t:"机器学习算法概述"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/机器学习算法概述.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/机器学习算法概述.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0.md"]],["v-b1bf1050","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 神经网络</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Link: <a href="https://www.asimovinstitute.org/neural-network-zoo-prequel-cells-layers/#comments" target="_blank" rel="noopener noreferrer">https://www.asimovinstitute.org/neural-network-zoo-prequel-cells-layers/#comments</a></p>`,r:{minutes:.16,words:49},y:"a",t:"神经网络"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/神经网络.html","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C","/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/神经网络.md","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.md"]],["v-2d5994ec","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%9F%BA%E6%9C%AC%E7%AE%97%E6%B3%95.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>分类、回归、聚类、概率模型</p>
<p><a href="https://elitedatascience.com/machine-learning-algorithms#regression" target="_blank" rel="noopener noreferrer"></a><a href="https://elitedatascience.com/machine-learning-algorithms#regression" target="_blank" rel="noopener noreferrer">https://elitedatascience.com/machine-learning-algorithms#regression</a></p>`,r:{minutes:11.56,words:3468},y:"a",t:"一、回归算法"},["/08AI_Machine_Learning_Deep_Learning/机器学习/基本算法.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%9F%BA%E6%9C%AC%E7%AE%97%E6%B3%95","/08AI_Machine_Learning_Deep_Learning/机器学习/基本算法.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%9F%BA%E6%9C%AC%E7%AE%97%E6%B3%95.md"]],["v-2af9f3cf","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 一、概述</h1>
<p>在机器学习中所用到的主要有微积分、线性代数、概率论、最优化方法、信息论、随机过程、图论这几门数学课的知识。它们之间的关系如下图所示。</p>
<figure><img src="https://pic1.zhimg.com/v2-c06946f5e5025f1fc3dd14d8a56dbd58_b.jpg" alt="https://pic1.zhimg.com/v2-c06946f5e5025f1fc3dd14d8a56dbd58_b.jpg" tabindex="0" loading="lazy"><figcaption><a href="https://pic1.zhimg.com/v2-c06946f5e5025f1fc3dd14d8a56dbd58_b.jpg" target="_blank" rel="noopener noreferrer">https://pic1.zhimg.com/v2-c06946f5e5025f1fc3dd14d8a56dbd58_b.jpg</a></figcaption></figure>`,r:{minutes:9.13,words:2740},y:"a",t:"一、概述"},["/08AI_Machine_Learning_Deep_Learning/机器学习/数学知识.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86","/08AI_Machine_Learning_Deep_Learning/机器学习/数学知识.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86.md"]],["v-4d9679e6","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0100%E4%B8%AA%E9%97%AE%E9%A2%98.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 机器学习100个问题</h1>
<h2> <strong>基础知识</strong></h2>
<p><strong>1、什么是数据科学?列出监督学习和非监督学习的区别。</strong></p>
<p>数据科学是各种工具、算法和机器学习方法的混合，其目标是从原始数据中发现隐藏的模式。这与统计学家多年来一直在做的事情相似但是有什么不同?下图解释了数据分析和数据科学的区别：</p>
<figure><figcaption><a href="http://images.overfit.cn/upload/20220626/436dc6374098494cafbae43fe0c4c56a.png" target="_blank" rel="noopener noreferrer">http://images.overfit.cn/upload/20220626/436dc6374098494cafbae43fe0c4c56a.png</a></figcaption></figure>`,r:{minutes:49.52,words:14855},y:"a",t:"机器学习100个问题"},["/08AI_Machine_Learning_Deep_Learning/机器学习/机器学习100个问题.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0100%E4%B8%AA%E9%97%AE%E9%A2%98","/08AI_Machine_Learning_Deep_Learning/机器学习/机器学习100个问题.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0100%E4%B8%AA%E9%97%AE%E9%A2%98.md"]],["v-ec36b34c","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 机器学习重点知识</h1>
<h2> 一、防止过拟合的办法</h2>
<p>1、正则化：L1、L2、添加BN层</p>
<p>2、添加Dropout策略</p>
<p>3、降低模型复杂度</p>
<p>4、交叉验证</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>5、用更多的数据进行训练</p>
<p>6、早停  7、集成学习方法bagging(如随机森林）能有效防止过拟合</p>
<p>8、减少特征个数(不是太推荐)注意：降维不能解决过拟合。降维只是减小了特征的维度，并没有减小特征所有的信息。</p>
<h2> 二、CNN参数和尺寸计算</h2>`,r:{minutes:5.26,words:1578},y:"a",t:"机器学习重点知识"},["/08AI_Machine_Learning_Deep_Learning/机器学习/机器学习重点知识.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86","/08AI_Machine_Learning_Deep_Learning/机器学习/机器学习重点知识.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86.md"]],["v-2d03f0c6","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Data_Science_Cheat_Sheet_for_BusinessLeaders.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Data Science Cheat Sheet for Business Leaders</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Data Science Cheat Sheet for Business Leaders-1.png</figcaption></figure>
<figure><figcaption>Data Science Cheat Sheet for Business Leaders-2.png</figcaption></figure>`,r:{minutes:.16,words:48},y:"a",t:"Data Science Cheat Sheet for Business Leaders"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Data_Science_Cheat_Sheet_for_BusinessLeaders.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Data_Science_Cheat_Sheet_for_BusinessLeaders","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Data_Science_Cheat_Sheet_for_BusinessLeaders.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Data_Science_Cheat_Sheet_for_BusinessLeaders.md"]],["v-6805b4bb","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Data_Visualization_Cheat_Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Data Visualization Cheat Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Data Visualization Cheat Sheet.png</figcaption></figure>
`,r:{minutes:.09,words:28},y:"a",t:"Data Visualization Cheat Sheet"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Data_Visualization_Cheat_Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Data_Visualization_Cheat_Sheet","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Data_Visualization_Cheat_Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Data_Visualization_Cheat_Sheet.md"]],["v-336a38f6","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Importing_Datain_Python_Cheat_Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Importing Data in Python Cheat Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Importing Data in Python Cheat Sheet.png</figcaption></figure>
`,r:{minutes:.11,words:32},y:"a",t:"Importing Data in Python Cheat Sheet"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Importing_Datain_Python_Cheat_Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Importing_Datain_Python_Cheat_Sheet","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Importing_Datain_Python_Cheat_Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Importing_Datain_Python_Cheat_Sheet.md"]],["v-def94006","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Jupyter_Notebook_Cheat_Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Jupyter Notebook Cheat Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Jupyter Notebook Cheat Sheet.png</figcaption></figure>
`,r:{minutes:.09,words:28},y:"a",t:"Jupyter Notebook Cheat Sheet"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Jupyter_Notebook_Cheat_Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Jupyter_Notebook_Cheat_Sheet","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Jupyter_Notebook_Cheat_Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Jupyter_Notebook_Cheat_Sheet.md"]],["v-58116dc6","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Keras_Cheat_Sheet%20Neural_Networks_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Keras Cheat Sheet Neural Networks in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Keras Cheat Sheet Neural Networks in Python.png</figcaption></figure>
`,r:{minutes:.11,words:34},y:"a",t:"Keras Cheat Sheet Neural Networks in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Keras_Cheat_Sheet Neural_Networks_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Keras_Cheat_Sheet%20Neural_Networks_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Keras_Cheat_Sheet Neural_Networks_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Keras_Cheat_Sheet%20Neural_Networks_in_Python.md"]],["v-8dab9cb2","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Matplotlib_Cheat_Sheet_Plotting_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Matplotlib Cheat Sheet Plotting in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Matplotlib Cheat Sheet Plotting in Python.png</figcaption></figure>
`,r:{minutes:.11,words:32},y:"a",t:"Matplotlib Cheat Sheet Plotting in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Matplotlib_Cheat_Sheet_Plotting_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Matplotlib_Cheat_Sheet_Plotting_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Matplotlib_Cheat_Sheet_Plotting_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Matplotlib_Cheat_Sheet_Plotting_in_Python.md"]],["v-46da7670","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/NumPy_Cheat_Sheet_Data_Analysis_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> NumPy Cheat Sheet Data Analysis in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>NumPy Cheat Sheet Data Analysis in Python.png</figcaption></figure>
`,r:{minutes:.11,words:34},y:"a",t:"NumPy Cheat Sheet Data Analysis in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/NumPy_Cheat_Sheet_Data_Analysis_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/NumPy_Cheat_Sheet_Data_Analysis_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/NumPy_Cheat_Sheet_Data_Analysis_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/NumPy_Cheat_Sheet_Data_Analysis_in_Python.md"]],["v-5e173d0c","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Pandas%20Cheat%20Sheet%20for%20Data%20Science%20in%20Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Pandas Cheat Sheet for Data Science in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Pandas Cheat Sheet for Data Science in Python.png</figcaption></figure>
`,r:{minutes:.12,words:36},y:"a",t:"Pandas Cheat Sheet for Data Science in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Pandas Cheat Sheet for Data Science in Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Pandas%20Cheat%20Sheet%20for%20Data%20Science%20in%20Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Pandas Cheat Sheet for Data Science in Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Pandas%20Cheat%20Sheet%20for%20Data%20Science%20in%20Python.md"]],["v-3bd3ff2b","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Pandas_Cheat_Sheet_Data_Wrangling_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Pandas Cheat Sheet Data Wrangling in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Pandas Cheat Sheet Data Wrangling in Python.png</figcaption></figure>
`,r:{minutes:.11,words:34},y:"a",t:"Pandas Cheat Sheet Data Wrangling in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Pandas_Cheat_Sheet_Data_Wrangling_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Pandas_Cheat_Sheet_Data_Wrangling_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Pandas_Cheat_Sheet_Data_Wrangling_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Pandas_Cheat_Sheet_Data_Wrangling_in_Python.md"]],["v-7f5facd4","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Power_BI_for_Business_Intelligence_Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Power BI for Business Intelligence Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Power BI for Business Intelligence Sheet2.png</figcaption></figure>
`,r:{minutes:.11,words:32},y:"a",t:"Power BI for Business Intelligence Sheet"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Power_BI_for_Business_Intelligence_Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Power_BI_for_Business_Intelligence_Sheet","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Power_BI_for_Business_Intelligence_Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Power_BI_for_Business_Intelligence_Sheet.md"]],["v-f5428c04","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark_Cheat_Sheet_Spark_DataFrames_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> PySpark Cheat Sheet Spark DataFrames in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>PySpark Cheat Sheet Spark DataFrames in Python.png</figcaption></figure>
`,r:{minutes:.11,words:34},y:"a",t:"PySpark Cheat Sheet Spark DataFrames in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/PySpark_Cheat_Sheet_Spark_DataFrames_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark_Cheat_Sheet_Spark_DataFrames_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/PySpark_Cheat_Sheet_Spark_DataFrames_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark_Cheat_Sheet_Spark_DataFrames_in_Python.md"]],["v-dc7629d2","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark_Cheat_Sheet_Spark_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> PySpark Cheat Sheet Spark in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>PySpark Cheat Sheet Spark in Python.png</figcaption></figure>
`,r:{minutes:.11,words:32},y:"a",t:"PySpark Cheat Sheet Spark in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/PySpark_Cheat_Sheet_Spark_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark_Cheat_Sheet_Spark_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/PySpark_Cheat_Sheet_Spark_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/PySpark_Cheat_Sheet_Spark_in_Python.md"]],["v-23bbef8c","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python_Data_Visualization_Bokeh_Cheat_Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Python Data Visualization Bokeh Cheat Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Python Data Visualization Bokeh Cheat Sheet.png</figcaption></figure>
`,r:{minutes:.11,words:32},y:"a",t:"Python Data Visualization Bokeh Cheat Sheet"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Python_Data_Visualization_Bokeh_Cheat_Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python_Data_Visualization_Bokeh_Cheat_Sheet","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Python_Data_Visualization_Bokeh_Cheat_Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python_Data_Visualization_Bokeh_Cheat_Sheet.md"]],["v-4d72f195","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python_Seaborn_Cheat_Sheet.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Python Seaborn Cheat Sheet</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Python Seaborn Cheat Sheet.png</figcaption></figure>
`,r:{minutes:.09,words:28},y:"a",t:"Python Seaborn Cheat Sheet"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Python_Seaborn_Cheat_Sheet.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python_Seaborn_Cheat_Sheet","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Python_Seaborn_Cheat_Sheet.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Python_Seaborn_Cheat_Sheet.md"]],["v-1736b1a8","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/SQL_for_Data_Science.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> SQL for Data Science</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>SQL+for+Data+Science.png</figcaption></figure>
`,r:{minutes:.09,words:28},y:"a",t:"SQL for Data Science"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/SQL_for_Data_Science.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/SQL_for_Data_Science","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/SQL_for_Data_Science.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/SQL_for_Data_Science.md"]],["v-4ae7f9a0","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/SciPy_Cheat_Sheet_Linear_Algebra_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> SciPy Cheat Sheet Linear Algebra in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>SciPy Cheat Sheet Linear Algebra in Python.png</figcaption></figure>
`,r:{minutes:.11,words:34},y:"a",t:"SciPy Cheat Sheet Linear Algebra in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/SciPy_Cheat_Sheet_Linear_Algebra_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/SciPy_Cheat_Sheet_Linear_Algebra_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/SciPy_Cheat_Sheet_Linear_Algebra_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/SciPy_Cheat_Sheet_Linear_Algebra_in_Python.md"]],["v-e6e27064","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit_Learn_Cheat_Sheet_Python_Machine_Learning.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Scikit-Learn Cheat Sheet Python Machine Learning</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Scikit-Learn Cheat Sheet Python Machine Learning.png</figcaption></figure>
`,r:{minutes:.12,words:35},y:"a",t:"Scikit-Learn Cheat Sheet Python Machine Learning"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Scikit_Learn_Cheat_Sheet_Python_Machine_Learning.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit_Learn_Cheat_Sheet_Python_Machine_Learning","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Scikit_Learn_Cheat_Sheet_Python_Machine_Learning.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Scikit_Learn_Cheat_Sheet_Python_Machine_Learning.md"]],["v-5d588d29","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Tidyverse_Cheat_Sheet_For_Beginners.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Tidyverse Cheat Sheet For Beginners</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>Tidyverse Cheat Sheet For Beginners.png</figcaption></figure>
`,r:{minutes:.1,words:30},y:"a",t:"Tidyverse Cheat Sheet For Beginners"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Tidyverse_Cheat_Sheet_For_Beginners.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Tidyverse_Cheat_Sheet_For_Beginners","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Tidyverse_Cheat_Sheet_For_Beginners.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Tidyverse_Cheat_Sheet_For_Beginners.md"]],["v-41eb2fad","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Top_Machine_Learning_Algoritms.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Top Machine Learning Algoritms</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>ML+Cheat+Sheet_2.png</figcaption></figure>
`,r:{minutes:.09,words:27},y:"a",t:"Top Machine Learning Algoritms"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Top_Machine_Learning_Algoritms.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Top_Machine_Learning_Algoritms","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/Top_Machine_Learning_Algoritms.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/Top_Machine_Learning_Algoritms.md"]],["v-7aafd3e1","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/spaCy_Cheat_Sheet_Advanced_NLP_in_Python.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> spaCy Cheat Sheet Advanced NLP in Python</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>spaCy Cheat Sheet Advanced NLP in Python-1.png</figcaption></figure>
<figure><figcaption>spaCy Cheat Sheet Advanced NLP in Python-2.png</figcaption></figure>`,r:{minutes:.16,words:48},y:"a",t:"spaCy Cheat Sheet Advanced NLP in Python"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/spaCy_Cheat_Sheet_Advanced_NLP_in_Python.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/spaCy_Cheat_Sheet_Advanced_NLP_in_Python","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/spaCy_Cheat_Sheet_Advanced_NLP_in_Python.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/spaCy_Cheat_Sheet_Advanced_NLP_in_Python.md"]],["v-a36af388","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/xts_Cheat_Sheet_Time_Series_in_R.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> xts Cheat Sheet Time Series in R</h1>
<p>Created: September 2, 2022 1:06 PM
Last Updated: September 2, 2022 1:06 PM
Status: Current 👍</p>
<figure><figcaption>xts Cheat Sheet Time Series in R.png</figcaption></figure>
`,r:{minutes:.11,words:34},y:"a",t:"xts Cheat Sheet Time Series in R"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/xts_Cheat_Sheet_Time_Series_in_R.html","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/xts_Cheat_Sheet_Time_Series_in_R","/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/xts_Cheat_Sheet_Time_Series_in_R.md","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/xts_Cheat_Sheet_Time_Series_in_R.md"]],["v-8811a470","/11Automatic_Driving/%E6%84%9F%E7%9F%A5/%E6%84%9F%E7%9F%A5%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["自动驾驶"],g:["算法","感知"],e:`<p>::: tips
感知算法概述
:::</p>
<aside> 🪁 框架：感知、定位、决策、控制
<ul>
<li>
<p>关于传感器</p>
<figure><figcaption></figcaption></figure>
<aside> 🪁 1）激光雷达的测距精度、测距范围及对温度和光照的适应性都很厉害，缺点就是太贵；
<p>2）相机对环境细节信息的提取能力吊炸天，但是光照影响太大，晚上就瞎了；</p>
<p>3）<a href="https://www.zhihu.com/search?q=%E6%AF%AB%E7%B1%B3%E6%B3%A2&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1851149672%7D" target="_blank" rel="noopener noreferrer">毫米波</a>最大优点探测角度比较大，抗干扰性强，性能比较稳定，另外也不贵，缺点就是分辨率和精度跟不上。</p>
<p>4）<a href="https://www.zhihu.com/search?q=%E8%B6%85%E5%A3%B0%E6%B3%A2%E9%9B%B7%E8%BE%BE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1851149672%7D" target="_blank" rel="noopener noreferrer">超声波雷达</a>最牛逼的地方是便宜，倒车防撞提醒用的一般是这个，一台车上装十个成本才一百块钱，精度也是最差的，不过低速倒车3m左右足够了。</p>
<p>5）红外优点不是很明显，主要就是晚上比较好用，智驾方案里不算标配，很多传感器方案都没有这个，这里就不过多提了。</p>
</aside>
<p>车载相机：<strong>信息提取最全</strong>，无论哪个方案，都要用这个；</p>
<p>激光雷达：<strong>精度最高，价格最贵</strong>；</p>
<p>毫米波：性能没激光雷达好，但是<strong>抗干扰能力最强</strong>，价格上实现整车量产没问题；</p>
<p>超声波：<strong>最便宜，感知范围最窄</strong>，但是5m以内测距问题不大，倒车防撞最经典应用。</p>
</li>
<li>
<p>传感器的标定</p>
<ul>
<li>
<p>1、相机标定：</p>
<p>建立图像坐标系与世界坐标系的关系，张正友标定法</p>
</li>
<li>
<p>2、激光雷达标定</p>
<p>建立激光雷达和车身坐标系的位置关系，通常需要将激光雷达与惯性导航单元IMU融合标定，粗略的可以通过直接测量得到。了解到一种方法叫做****最小方差标定法，****将激光雷达标定到了车身，那么地面这个平面上所有点云的高度值一定相等，激光雷达的pitch和roll角（俯仰和横滚）会影响这个高度值，因此我们可以求出地面点云的高度方差，通过角度补偿的方式找出一个pitch和roll角使得地面上的点云的方差最小，接近为0，此时这个pitch和roll就是我们当前激光雷达相对与车身坐标系的误差角。假定我们将激光雷达标定到了车身，那么墙面这个平面上所有点云的X值（纵向距离）一定相等，激光雷达的yaw角（航向）会影响这个距离度值，因此我们可以求出墙面点云的纵向距离方差，通过角度补偿的方式找出一个yaw角使得墙面上点云的方差最小，接近为0，此时这个yaw角就是我们当前激光雷达相对与车身坐标系的误差角。</p>
</li>
<li>
<p>3、多激光雷达之间标定</p>
<p>可以通过不同激光雷达与车体之间的位置关系进行转换</p>
</li>
<li>
<p>4、激光雷达与相机的标定</p>
<p>激光雷达与相机的联合标定，可以通过提取标定物在单线激光雷达和图像上对应的特征点，完成单线激光雷达、相机坐标系、图像坐标系之间的统一。一般有两种方法：使用标定板和自标定方法，</p>
</li>
<li>
<p>5、联合标定</p>
<p>百度的阿波罗联合标定工具箱，我认为很多工具，你只需要知道它能够拿来干什么就足够了，并不一定要完全知道其中的具体原理。</p>
</li>
</ul>
</li>
<li>
<p>计算机视觉的应用</p>
<ul>
<li>
<p>图像分割</p>
<ul>
<li>
<p>基于阈值分割</p>
<p>通过设定不同的特征阈值，吧像素点分为具有不同灰度等级的目标区域和背景区域。</p>
<ul>
<li>
<p>关键在于确定阈值</p>
<p>利用灰度直方图的峰谷法、最小误差法、基于过渡区法、利用像素点空间位置信息的变化阈值法、结合连通信息的阈值法、最大相关性原则和最大熵原则的自动阈值法。</p>
</li>
</ul>
</li>
<li>
<p>基于区域分割</p>
<p>1、基于区域生长，从单个像素出发，逐步合并所需要的分割区域</p>
<p>2、区域分裂合并，从全局出发，逐步分割所需要分割的区域</p>
</li>
<li>
<p>基于边缘检测</p>
<p>通过检测包含不同区域的边缘来解决分割方法，是最常用的方法，通常来说，不同区域之间的边缘像素灰度的变化比较剧烈。 <strong>基本方法</strong>：图像一阶导数极大值，二阶导数过零点信息作为基本判据。</p>
<p>一阶算子：Robert算子，Prewitt算子，Sobel算子 二阶算子：拉普拉斯算子 优点:边缘定位准确、速度快 难点：单纯的边缘检测无法保证边缘的连续性和封闭性，二是边缘检测在高细节区存在大量的碎片边缘。</p>
</li>
<li>
<p>基于深度模型</p>
<figure><figcaption></figcaption></figure>
</li>
</ul>
</li>
<li>
<p>应用</p>
<p>1、双目视觉获得深度信息</p>
<p>2、点云数据检测</p>
<p>3、运动估计</p>
<p>4、物体检测、识别、跟踪</p>
<p>5、场景分割</p>
<p>6、同步地图构建和自身定位</p>
</li>
</ul>
</li>
<li>
<p>环境感知与识别</p>
<ul>
<li>
<p>障碍物检测</p>
<ul>
<li>
<p>1、基于图像的障碍物检测</p>
<p>一阶算法：YOLO和SSD；二阶算法：RCNN系列</p>
</li>
<li>
<p>2、基于激光雷达检测</p>
</li>
<li>
<p>3、图像和激光雷达融合检测</p>
</li>
</ul>
</li>
<li>
<p>车道线识别</p>
</li>
</ul>
</li>
</ul>
</aside>`,r:{minutes:4.88,words:1464},y:"a",t:"感知算法概述",i:"🧑",O:null},["/11Automatic_Driving/感知/感知算法概述.html","/11Automatic_Driving/%E6%84%9F%E7%9F%A5/%E6%84%9F%E7%9F%A5%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0","/11Automatic_Driving/感知/感知算法概述.md","/11Automatic_Driving/%E6%84%9F%E7%9F%A5/%E6%84%9F%E7%9F%A5%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0.md"]],["v-080b3415","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Algorithms.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["Cplus"],g:["算法","Cplus"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>STL Algorithms</p>
</div>
<h1> STL Algorithms</h1>
<h1> for_each()</h1>
<p>🪁 <strong>The simplest algorithm is for_each(), which just applies an operation to each element of a sequence:</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>f<span class="token operator">=</span><span class="token function">for_each</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>e <span class="token punctuation">,</span>f<span class="token punctuation">)</span> Do <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">for</span> each x in <span class="token punctuation">[</span>b<span class="token operator">:</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> f
<span class="token char">''</span>'
		<span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">void</span> <span class="token function">increment_all</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span> v<span class="token punctuation">)</span> <span class="token comment">// increment each element of v</span>
		<span class="token punctuation">{</span>
		<span class="token function">for_each</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">++</span>x<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
<span class="token char">''</span>'
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.79,words:3838},y:"a",t:"STL Algorithms",i:"🧑",O:null},["/12C_plus_plus/Cplus函数/STL Algorithms.html","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Algorithms","/12C_plus_plus/Cplus函数/STL Algorithms.md","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Algorithms.md"]],["v-fd0c12b2","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Containers.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C++"],g:["算法","C++"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>STL Containers</p>
</div>
<h1> STL Containers</h1>
<p><a href="https://en.cppreference.com/w/cpp/container" target="_blank" rel="noopener noreferrer">Containers library</a></p>
<figure><figcaption></figcaption></figure>
<p>有Multi和没Multi的区别：元素是否可以重复</p>`,r:{minutes:5.69,words:1707},y:"a",t:"STL Containers",i:"🧑",O:null},["/12C_plus_plus/Cplus函数/STL Containers.html","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Containers","/12C_plus_plus/Cplus函数/STL Containers.md","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Containers.md"]],["v-683f08d8","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Iterators.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C plus"],g:["算法","C plus"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>STL Iterators</p>
</div>
<h1> STL Iterators</h1>
<h1> 迭代器定义</h1>
<p>**迭代器（iterator）是一种可以遍历容器元素的数据类型。迭代器是一个变量，相当于容器和操纵容器的算法之间的中介。**C++更趋向于使用迭代器而不是数组下标操作，因为标准库为每一种标准容器（如vector、map和list等）定义了一种迭代器类型，而只有少数容器（如vector）支持数组下标操作访问容器元素。可以通过迭代器指向你想访问容器的元素地址，通过*x打印出元素值。</p>`,r:{minutes:1.71,words:513},y:"a",t:"STL Iterators",i:"🧑",O:null},["/12C_plus_plus/Cplus函数/STL Iterators.html","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Iterators","/12C_plus_plus/Cplus函数/STL Iterators.md","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Iterators.md"]],["v-68ce8cab","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/string%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C plus"],g:["算法","C plus"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>string相关函数</p>
</div>
<h1> string相关函数</h1>
<h1> C++ 标准库一共包含 33 个C++ 头文件：</h1>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><strong>&lt; algorithm &gt;</strong>, &lt; bitset &gt;, &lt; complex &gt;, <strong>&lt; deque &gt;</strong>, &lt; exception &gt;,&nbsp;&nbsp;&lt; fstream &gt;,&nbsp;&nbsp;&lt; functional &gt;,&nbsp;&lt; iomanip &gt;, &lt; ios &gt;, &lt; iosfwd &gt;, &lt; iostream &gt;, &lt; istream &gt;, &lt; iterator &gt;,&nbsp;&nbsp;&lt; limits &gt;,&nbsp;&nbsp;<strong>&lt; list &gt;</strong>,&nbsp;&lt; locale &gt;, <strong>&lt; map &gt;</strong>, &lt; memory &gt;, &lt; new &gt;, &lt; numeric &gt;, &lt; ostream &gt;, <strong>&lt; queue &gt;, &lt; set &gt;,</strong> &lt; sstream &gt;,&nbsp;&lt; stack &gt;, &lt; stdexcept &gt;, &lt; streambuf &gt;, <strong>&lt; string &gt;</strong>, &lt; strstream &gt;,&nbsp;&nbsp;&lt; typeinfo &gt;,&nbsp;&nbsp;&lt; utility &gt;,&nbsp;&lt; valarray &gt;, <strong>&lt; vector &gt;</strong></p>
</div>`,r:{minutes:5.56,words:1669},y:"a",t:"string相关函数",i:"🧑",O:null},["/12C_plus_plus/Cplus函数/string相关函数.html","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/string%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0","/12C_plus_plus/Cplus函数/string相关函数.md","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/string%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0.md"]],["v-282370f6","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/vs%E4%BD%BF%E7%94%A8leetcode.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> vs使用leetcode</h1>
<p><a href="https://blog.csdn.net/weixin_43935696/article/details/124673282" target="_blank" rel="noopener noreferrer">解决Vscode使用LeetCode报错Failed to test the solution. Please open the output channel for details._Better Bench的博客-CSDN博客_vscode无法提交leetcode</a></p>
<p><a href="https://blog.csdn.net/qq_45359288/article/details/124351804" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_45359288/article/details/124351804</a></p>`,r:{minutes:.18,words:55},y:"a",t:"vs使用leetcode"},["/12C_plus_plus/算法学习/vs使用leetcode.html","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/vs%E4%BD%BF%E7%94%A8leetcode","/12C_plus_plus/算法学习/vs使用leetcode.md","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/vs%E4%BD%BF%E7%94%A8leetcode.md"]],["v-35992c28","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["C++"],g:["算法","C++"],e:`<p>::: tips
二叉树手动构建
:::</p>
<ul>
<li>
<p>二叉树手动构建</p>
<p>已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 已知后序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。 但是已知前序遍历序列和后序遍历序列，是不能确定一棵二叉树的。 下面例子通过前序遍历和中序遍历确定唯一的一棵二叉树。</p>
<p>前序遍历：EACBDGF</p>
<p>中序遍历：ABCDEFG</p>
<p>1、首先根据前序遍历找出根节点是E，然后根据中序遍历可以知道ABCD是E的左子树，FG是E的右子树。</p>
</li>
</ul>
<figure><figcaption></figcaption></figure>`,r:{minutes:1.29,words:387},y:"a",t:"二叉树手动构建",i:"🧑",O:null},["/12C_plus_plus/算法学习/手动构建二叉树.html","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91","/12C_plus_plus/算法学习/手动构建二叉树.md","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.md"]],["v-14eff5b4","/15Linux/ubuntu/Ubuntu%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.html",{d:"2023-04-26T10:25:41.000Z",e:`<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> ubuntu20.04 命令行打开:Ctrl+shift+T</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> ubuntu20.04 复制粘贴:Ctrl+shift+C、Ctrl+shift+V</label></li>
</ul>`,r:{minutes:2.53,words:760},y:"a",t:""},["/15Linux/ubuntu/Ubuntu使用经验.html","/15Linux/ubuntu/Ubuntu%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C","/15Linux/ubuntu/Ubuntu使用经验.md","/15Linux/ubuntu/Ubuntu%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.md"]],["v-2508f406","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/leetcode%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 算法学习</h1>
<ul>
<li>
<p><strong>二分查找：给定升序数组和目标值，求目标值下标</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">while</span><span class="token punctuation">(</span>letf<span class="token operator">&lt;=</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> mid<span class="token operator">=</span>left<span class="token operator">+</span><span class="token punctuation">(</span>right<span class="token operator">-</span>left<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">&gt;</span>target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        right<span class="token operator">=</span>mind<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">&lt;</span>target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        left<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> mid<span class="token punctuation">;</span><span class="token comment">//找到了</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>移除元素：给定一个数组和移除的val,求数组新长度</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//1.</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 发现需要移除的元素，就将数组集体向前移动一位</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    nums<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                i<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// 因为下标i以后的数值都向前移动了一位，所以i也向前移动一位</span>
                size<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// 此时数组的大小-1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token keyword">return</span> size<span class="token punctuation">;</span>
<span class="token comment">//2.</span>
<span class="token keyword">int</span> slowIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//用于表示有多少个不是目标值</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> fastIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> fastIndex <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> fastIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//快指针持续往前走，慢指针只有和目标值不相等才往前走  </span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!=</span> nums<span class="token punctuation">[</span>fastIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//如果不等于，那么</span>
                nums<span class="token punctuation">[</span>slowIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>fastIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> slowIndex<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>有序数组平方和：给定一个非递减数组，求每个数字平方和形成的非递减新数组</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//1.</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*=</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//先求平方</span>
<span class="token punctuation">}</span>
<span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后排序</span>

<span class="token comment">//2.</span>
<span class="token keyword">int</span> k <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> j<span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 注意这里要i &lt;= j，因为最后要处理两个元素</span>
	<span class="token comment">//边平方边排序,左边比右边小</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">*</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			result<span class="token punctuation">[</span>k<span class="token operator">--</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token comment">//说明最大值右边的</span>
			j<span class="token operator">--</span><span class="token punctuation">;</span>右边往前移动
	<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			result<span class="token punctuation">[</span>k<span class="token operator">--</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token comment">//说明大值是左边的</span>
			i<span class="token operator">++</span><span class="token punctuation">;</span>右边往前移动
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>长度最小的子数组：给定一个正整数s和一个正整数数组，求大于s的长度最小的子数组</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> result<span class="token operator">=</span>INT32_MAX<span class="token punctuation">;</span><span class="token comment">//由于要比较谁更小，所以要拿一个最大值进行比较</span>
<span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//子序列的和</span>
<span class="token keyword">int</span> sublength<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//子序列长度</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 设置子序列起点为i</span>
	sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 设置子序列终止位置为j</span>
		sum<span class="token operator">+=</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//把起点和终点的值都加起来</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>sum<span class="token operator">&gt;</span>s<span class="token punctuation">)</span><span class="token punctuation">{</span>
			sublength<span class="token operator">=</span>j<span class="token operator">-</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
			result<span class="token operator">=</span>result<span class="token operator">&lt;</span>sublength<span class="token operator">?</span>result<span class="token operator">:</span>sublength<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> result<span class="token operator">==</span>INT_MAX32<span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span>result<span class="token punctuation">;</span><span class="token comment">//如果还是最大值，那说明没找到，一个循环都没进，所以返回0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>螺旋数组：给定一个正整数n，生成一个包含 1 到 n^2 所有元素</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> <span class="token function">res</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">vector</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用vector定义一个二维数组</span>
<span class="token keyword">int</span> startx<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>starty<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//每次循环的起点</span>
<span class="token keyword">int</span> loop<span class="token operator">=</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//确定循环的次数：3--1（中间剩下一个点最后加），4--2</span>
<span class="token keyword">int</span> mid<span class="token operator">=</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//给矩阵赋值的函数</span>
<span class="token keyword">int</span> offset<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//控制每一圈遍历的长度</span>
<span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>loop <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    i <span class="token operator">=</span> startx<span class="token punctuation">;</span>
    j <span class="token operator">=</span> starty<span class="token punctuation">;</span>
    <span class="token comment">// 模拟填充上行从左到右(左闭右开)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> starty<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n <span class="token operator">-</span> offset<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	     res<span class="token punctuation">[</span>startx<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> count<span class="token operator">++</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
   <span class="token comment">// 模拟填充右侧从上到下(左闭右开)</span>
   <span class="token comment">// 模拟填充下行从右到左(左闭右开)</span>
   <span class="token comment">// 模拟填充左侧从下到上(左闭右开)</span>
   <span class="token comment">// 第二圈开始的时候，起始位置要各自加1， 例如：第一圈起始位置是(0, 0)，第二圈起始位置是(1, 1)</span>
   startx<span class="token operator">++</span><span class="token punctuation">;</span>
   starty<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token comment">// offset 控制每一圈里每一条边遍历的长度</span>
  offset <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span> res<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">=</span>count<span class="token punctuation">;</span><span class="token comment">//奇数，把中间的值给填上</span>
<span class="token keyword">return</span> res<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>反转字符串：将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">,</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">swap</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">&amp;</span>s1<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">&amp;</span>s2<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">char</span> tmp<span class="token operator">=</span>s1<span class="token punctuation">;</span>
	s1<span class="token operator">=</span>s2<span class="token punctuation">;</span>
  s2<span class="token operator">=</span>tmp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>反转字符串：给定一个字符串 s 和一个整数 k,每隔 2k 个字符的前 k 个字符进行反转</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>string <span class="token function">reverseStr</span><span class="token punctuation">(</span>string s<span class="token punctuation">,</span><span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">+=</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span>k<span class="token operator">&lt;=</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>i<span class="token operator">+</span>k<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
				<span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>替换空格：把字符串 s 中的每个空格替换成"%20"</strong></p>
<p><strong>扩充数组到每个空格替换成"%20"之后的大小。然后从后向前替换空格，也就是双指针法</strong></p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//统计空格个数</span>
<span class="token keyword">int</span> s_oldsize<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">" "</span><span class="token punctuation">)</span> count<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 扩充字符串s的大小，也就是每个空格替换成"%20"之后的大小</span>
s<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//因为之前有一个空格，所以加2*count就够了</span>
<span class="token keyword">int</span> s_newsize<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//j&lt;i说明，空格补满了，前面都是字符了</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>s_newsize<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token operator">=</span>s_oldsize<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">,</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">" "</span><span class="token punctuation">)</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
	<span class="token keyword">else</span><span class="token punctuation">{</span>
		s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"2"</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"%"</span><span class="token punctuation">;</span>
		i<span class="token operator">=</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//因为还有i--，所以-2就够了</span>
	<span class="token punctuation">}</span>		
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>****翻转字符串里的单词：****输入: "the sky is blue"，输出:&nbsp;"blue is sky the"</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//移除多余的空格</span>
<span class="token keyword">void</span> <span class="token function">removeExtraSpaces</span><span class="token punctuation">(</span>string<span class="token operator">&amp;</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 删除字符串最后面的空格</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 删除字符串最前面的空格</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
	<span class="token comment">//反转字符串</span>
 <span class="token keyword">void</span> <span class="token function">reverse</span><span class="token punctuation">(</span>string<span class="token operator">&amp;</span>s<span class="token punctuation">,</span><span class="token keyword">int</span> start<span class="token punctuation">,</span><span class="token keyword">int</span> end<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token operator">=</span>end<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>j<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">,</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		 <span class="token function">swap</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

string <span class="token function">reverseWords</span><span class="token punctuation">(</span>string s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">removeExtraSpaces</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//去除多余空格，保证单词之间之只有一个空格，且字符串首尾没空格。</span>
        <span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//removeExtraSpaces后保证第一个单词的开始下标一定是0。</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//到达空格或者串尾，说明一个单词结束。进行翻转。</span>
                <span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> start<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//翻转，注意是左闭右闭 []的翻转。</span>
                start <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//更新下一个单词的开始下标start</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>左旋转字符串：给定字符串和数字k，把前k个字符串放到末尾：</strong> 输入: s = "abcdefg", k = 2，输出:&nbsp;"cdefgab"</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>
string <span class="token function">reverseLeftWords</span><span class="token punctuation">(</span>string s<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//s = "bacdefg"</span>
	<span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//s="bagfedc"</span>
	<span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//s="cdefgab"</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>深度优先遍历和广度优先遍历的区别</p>
<p>（1）深度优先遍历：对<strong>每一个可能的分支路径深入到不能再深入为止</strong>，而且每个结点只能访问一次。要特别注意的是，二叉树的深度优先遍历比较特殊，可以细分为先序遍历、中序遍历、后序遍历。具体说明如下：</p>
<ul>
<li>先序遍历：对任一子树，先访问根，然后遍历其左子树，最后遍历其右子树。</li>
<li>中序遍历：对任一子树，先遍历其左子树，然后访问根，最后遍历其右子树。</li>
<li>后序遍历：对任一子树，先遍历其左子树，然后遍历其右子树，最后访问根。</li>
</ul>
<p>（2）广度优先遍历：又叫层次遍历，从上往下对每一层依次访问，在每一层中，从左往右（也可以从右往左）访问结点，访问完一层就进入下一层，直到没有结点可以访问为止。</p>
</li>
</ul>`,r:{minutes:5.64,words:1691},y:"a",t:"面试问题"},["/18Data_Structure/数据结构编程练习/leetcode算法学习.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/leetcode%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0","/18Data_Structure/数据结构编程练习/leetcode算法学习.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/leetcode%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0.md"]],["v-16d7eae4","/23SoftWare/Conda%E5%B7%A5%E5%85%B7/Conda%E5%AE%89%E8%A3%85.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 更改Vscode镜像源</h2>
<p>第一步：创建如下路劲和文件：pip需要自己创建，pip.ini也需要自己创建。

第二步：添加镜像源：</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token punctuation">[</span>global<span class="token punctuation">]</span>
index<span class="token operator">-</span>url <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>https<span class="token operator">:</span><span class="token comment">//pypi.tuna.tsinghua.edu.cn/simple&gt;](&lt;https://pypi.tuna.tsinghua.edu.cn/simple&gt;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.77,words:831},y:"a",t:""},["/23SoftWare/Conda工具/Conda安装.html","/23SoftWare/Conda%E5%B7%A5%E5%85%B7/Conda%E5%AE%89%E8%A3%85","/23SoftWare/Conda工具/Conda安装.md","/23SoftWare/Conda%E5%B7%A5%E5%85%B7/Conda%E5%AE%89%E8%A3%85.md"]],["v-06b354bd","/23SoftWare/Git%E5%B7%A5%E5%85%B7/git%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> GIT</h1>
<figure><figcaption>Untitled</figcaption></figure>
<h1> <strong>0. 前言</strong></h1>
<p><a href="https://p6-tt.byteimg.com/origin/pgc-image/5949c013686e4d2c9ed529197676d08c?from=pc" target="_blank" rel="noopener noreferrer">https://p6-tt.byteimg.com/origin/pgc-image/5949c013686e4d2c9ed529197676d08c?from=pc</a></p>`,r:{minutes:6.13,words:1838},y:"a",t:"GIT"},["/23SoftWare/Git工具/git安装及使用.html","/23SoftWare/Git%E5%B7%A5%E5%85%B7/git%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8","/23SoftWare/Git工具/git安装及使用.md","/23SoftWare/Git%E5%B7%A5%E5%85%B7/git%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8.md"]],["v-fcd49ea4","/23SoftWare/Graphic%20Design%E8%BD%AF%E4%BB%B6/PS%E7%B3%BB%E5%88%97.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> Adobe CC Cheat Sheet</h1>
<p><a href="https://link.jianshu.com/?t=http://makeawebsitehub.com/adobe-creative-cloud-cheat-sheet/" target="_blank" rel="noopener noreferrer">THE ULTIMATE ADOBE CREATIVE CLOUD KEYBOARD SHORTCUTS CHEAT SHEET</a>包含了Adobe CC系列中所有产品的快捷键Cheat Sheet.（由于图片非常大，完整版请参考底部提供的资源连接）</p>`,r:{minutes:.25,words:74},y:"a",t:"Adobe CC Cheat Sheet"},["/23SoftWare/Graphic Design软件/PS系列.html","/23SoftWare/Graphic%20Design%E8%BD%AF%E4%BB%B6/PS%E7%B3%BB%E5%88%97","/23SoftWare/Graphic Design软件/PS系列.md","/23SoftWare/Graphic%20Design%E8%BD%AF%E4%BB%B6/PS%E7%B3%BB%E5%88%97.md"]],["v-090c59bd","/23SoftWare/Pycharm%E8%BD%AF%E4%BB%B6/%E6%BF%80%E6%B4%BB%E5%92%8C%E5%AE%89%E8%A3%85.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["软件"],g:["算法","vscode"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>激活和安装</p>
</div>
<h1> 激活</h1>
<p>
</p>
<hr>
<h1> 更改Pycharm镜像源</h1>
<h2> pip镜像源地址</h2>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>源地址：<span class="token operator">&lt;</span>https<span class="token operator">:</span><span class="token comment">//pypi.python.org/simple&gt;](&lt;https://pypi.python.org/simple&gt;)</span>

清华：<span class="token operator">&lt;</span>https<span class="token operator">:</span><span class="token comment">//pypi.tuna.tsinghua.edu.cn/simple&gt;](&lt;https://pypi.tuna.tsinghua.edu.cn/simple&gt;)</span>

阿里云：<span class="token operator">&lt;</span>http<span class="token operator">:</span><span class="token comment">//mirrors.aliyun.com/pypi/simple/&gt;](&lt;http://mirrors.aliyun.com/pypi/simple/&gt;)</span>

中国科技大学 <span class="token operator">&lt;</span>https<span class="token operator">:</span><span class="token comment">//pypi.mirrors.ustc.edu.cn/simple/&gt;](&lt;https://pypi.mirrors.ustc.edu.cn/simple/&gt;)</span>

华中理工大学：<span class="token operator">&lt;</span>http<span class="token operator">:</span><span class="token comment">//pypi.hustunique.com/&gt;](&lt;http://pypi.hustunique.com/&gt;)</span>

山东理工大学：<span class="token operator">&lt;</span>http<span class="token operator">:</span><span class="token comment">//pypi.sdutlinux.org/&gt;](&lt;http://pypi.sdutlinux.org/&gt;)</span>

豆瓣：<span class="token operator">&lt;</span>http<span class="token operator">:</span><span class="token comment">//pypi.douban.com/simple/&gt;](&lt;http://pypi.douban.com/simple/&gt;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.12,words:336},y:"a",t:"激活和安装",i:"🧑",O:null},["/23SoftWare/Pycharm软件/激活和安装.html","/23SoftWare/Pycharm%E8%BD%AF%E4%BB%B6/%E6%BF%80%E6%B4%BB%E5%92%8C%E5%AE%89%E8%A3%85","/23SoftWare/Pycharm软件/激活和安装.md","/23SoftWare/Pycharm%E8%BD%AF%E4%BB%B6/%E6%BF%80%E6%B4%BB%E5%92%8C%E5%AE%89%E8%A3%85.md"]],["v-60368e60","/23SoftWare/Pytorch/Pytorch.html",{d:"2023-04-26T10:25:41.000Z",e:`<figure><figcaption></figcaption></figure>
<p>


</p>
<figure><figcaption></figcaption></figure>
<p>

</p>
<p>
</p>
<figure><figcaption></figcaption></figure>
<p>





</p>
`,r:{minutes:.19,words:57},y:"a",t:""},["/23SoftWare/Pytorch/Pytorch","/23SoftWare/Pytorch/Pytorch.md"]],["v-cc837190","/23SoftWare/Tensorflow/tensorflow.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>




</p>
<p>



</p>
`,r:{minutes:.11,words:33},y:"a",t:""},["/23SoftWare/Tensorflow/tensorflow","/23SoftWare/Tensorflow/tensorflow.md"]],["v-49fdddb7","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/Vscode%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["软件"],g:["算法","vscode"],e:`<p>::: tips
Vscode常见问题</p>
<p>:::</p>
<h1> 更改Vscode镜像源</h1>
<p>第一步：创建如下路劲和文件：pip需要自己创建，pip.ini也需要自己创建。

第二步：添加镜像源：</p>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token punctuation">[</span>global<span class="token punctuation">]</span>
index<span class="token operator">-</span>url <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>https<span class="token operator">:</span><span class="token comment">//pypi.tuna.tsinghua.edu.cn/simple&gt;](&lt;https://pypi.tuna.tsinghua.edu.cn/simple&gt;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.45,words:135},y:"a",t:"Vscode常见问题",i:"🧑",O:null},["/23SoftWare/VsCode软件/Vscode常见问题.html","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/Vscode%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98","/23SoftWare/VsCode软件/Vscode常见问题.md","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/Vscode%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md"]],["v-267bd09c","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/%E9%85%8D%E7%BD%AEvscode%E4%BB%A3%E7%90%86.html",{d:"2023-04-27T03:33:46.000Z",e:`<p><strong>问题描述</strong></p>
<ul>
<li>git push 时，连接失败</li>
</ul>
<p><strong>需求</strong>
vscode使用代理，进行push</p>
<p><strong>步骤</strong></p>
<ul class="task-list-container">
<li>
<p>requiements:</p>
</li>
<li class="task-list-item">
<p><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 有clash</label></p>
</li>
<li class="task-list-item">
<p><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 有vscode</label></p>
</li>
<li>
<p>step</p>
</li>
<li class="task-list-item">
<p><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 打开vscode左下角的小齿轮，找到setting</label></p>
</li>
<li class="task-list-item">
<p><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> </label></p>
</li>
<li class="task-list-item">
<p><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 打开clash的常规界面</label></p>
</li>
<li class="task-list-item">
<p><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 把clash 的地址和端口填在上面</label></p>
</li>
<li class="task-list-item">
<p><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 完毕！</label></p>
</li>
</ul>`,r:{minutes:.23,words:70},y:"a",t:""},["/23SoftWare/VsCode软件/配置vscode代理.html","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/%E9%85%8D%E7%BD%AEvscode%E4%BB%A3%E7%90%86","/23SoftWare/VsCode软件/配置vscode代理.md","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/%E9%85%8D%E7%BD%AEvscode%E4%BB%A3%E7%90%86.md"]],["v-0f95e42c","/25apps/livestreaming/0_live_equipments.html",{d:"2023-04-26T10:25:41.000Z",c:["工具"],g:["直播"],e:`<p>直播已经成为一种主流的传播方式，几乎所有的行业都会使用它。经过两年的持续直播，我总结出了一套直播入门攻略，从设备、软件和技巧三个方面，帮助你快速入门直播，开始自己的直播之旅。</p>
<p>本文是直播入门攻略的前置篇，主要介绍直播所需的设备，以及如何避免购买不必要的高价设备。直播设备可分为电脑、补光灯、稳定器（三脚架）、音频采集（收音器）和视频采集（摄像头）。</p>
<h2> 电脑</h2>
<p>OBS 直播对电脑配置要求较高，建议使用三年内购买的主流配置台式机。台机推荐预算在一万元以上，显卡为 3060 以上，内存为 32G。</p>
<h2> 补光灯</h2>
<p>露脸主播一定要配柔光灯或环形灯，可以提升颜值。如果带眼镜的话，可以用小型补光灯代替环形灯，以免反射出光圈影响视觉。补光灯可以放在正面 45 度成蝴蝶光（派拉蒙光），可以显瘦显轮廓；背后可以使用辅助光或一张白纸反光，以防止正面灯光太亮。</p>`,r:{minutes:4.89,words:1467},y:"a",t:"直播入门攻略零 | 硬件篇：直播设备",O:.1},["/25apps/livestreaming/0_live_equipments","/25apps/livestreaming/0_live_equipments.md"]],["v-2a6722dc","/25apps/livestreaming/1_obs_basic.html",{d:"2023-04-26T10:25:41.000Z",c:["工具"],g:["OBS","直播"],e:`<p><a href="https://obsproject.com/" target="_blank" rel="noopener noreferrer">Open Broadcaster Software</a>（OBS）是一款免费开源的视频录制和直播应用，支持 Windows、Mac 和 Linux 平台。大部分直播软件都是基于 OBS 内核开发的。无论你准备在哪个平台直播，OBS 都是最推荐的直播入门软件。本文将从基础开始，为新手介绍 OBS 的界面、设置和直播使用方法。</p>
<h2> 主界面</h2>
<p>OBS 界面看起来有些复杂，但可以分为菜单栏、预览区、主按钮区和运行状态四个区块。日常使用中，我们只需要接触主按钮区，它包括场景、来源、混音器、转场特效和控制按钮。</p>`,r:{minutes:8.63,words:2588},y:"a",t:"直播入门攻略一 | OBS 篇：OBS 29 新手指南",O:1},["/25apps/livestreaming/1_obs_basic","/25apps/livestreaming/1_obs_basic.md"]],["v-d42be1fe","/25apps/livestreaming/2_obs_streamfx.html",{d:"2023-04-26T10:25:41.000Z",c:["工具"],g:["OBS","直播"],e:`<p>StreamFX 提供了来源镜像、模糊滤镜、着色器滤镜等多种效果，是 OBS 必装的效果插件。本文将介绍 StreamFX 的 28 种滤镜效果。</p>
<h2> 安装 StreamFX</h2>
<p>在 <a href="https://github.com/Xaymar/obs-StreamFX/releases" target="_blank" rel="noopener noreferrer">StreamFX 发布页</a>上按平台选择安装包。StreamFX for OBS 29 处于测试阶段，在升级此插件前，请按照<a href="https://github.com/Xaymar/obs-StreamFX/wiki/Uninstallation" target="_blank" rel="noopener noreferrer">卸载教程</a>执行旧版清理。</p>`,r:{minutes:5.1,words:1529},y:"a",t:"直播入门攻略二 | StreamFX 篇：最强大的 OBS 插件",O:2},["/25apps/livestreaming/2_obs_streamfx","/25apps/livestreaming/2_obs_streamfx.md"]],["v-3be238de","/25apps/livestreaming/3_obs_plugins.html",{d:"2023-04-26T10:25:41.000Z",c:["工具"],g:["OBS","直播"],e:`<p>OBS 与其他直播/录制应用最大的区别在于 OBS 社区，它给 OBS 带来了强大的扩展性。下文中我会介绍除 StreamFX 外的 15 款流行插件。（本文未完成，待填充）</p>
<h2> 插件安装与卸载</h2>
<p>OBS 插件的安装模式有 Install（注册配置）和 Protable（便携）两种。便携模式的插件配置可以复制到其他电脑上使用。</p>
<p>若要卸载 Windows 下的 OBS 便携模式插件，可以进入 <code>%ProgramFiles%\\obs-studio\\data\\obs-plugins</code> 和 <code>%ProgramFiles%\\obs-studio\\obs-plugins\\64bit</code>，搜索插件名，然后删除相关文件。</p>`,r:{minutes:3.47,words:1040},y:"a",t:"直播入门攻略三 | 插件篇：OBS 进阶插件",O:3},["/25apps/livestreaming/3_obs_plugins","/25apps/livestreaming/3_obs_plugins.md"]],["v-7577c576","/25apps/livestreaming/4_live_effects.html",{d:"2023-04-26T10:25:41.000Z",c:["工具"],g:["直播"],e:`<p>虽然 OBS 的功能已经非常强大，但通过第三方软件可以更简单地给我们带来美颜、变声、虚拟主播等特效。</p>
<h2> 美颜</h2>
<p>推荐使用 <a href="https://v.yy.com/" target="_blank" rel="noopener noreferrer">YY 开播</a>来实现直播美颜功能。</p>
<p>打开 YY 开播，调用摄像头摄像，开启美颜功能。然后，在 OBS 中调用 YY 开播，如果有绿幕，可以添加「色度值」滤镜进行视频抠图。一旦配置好，下次启动 OBS 时，软件会自动调用 YY 开播开启美颜，无需重复配置。但是，「美颜 + 直播」对电脑配置的要求较高，如果直播画面出现明显卡顿，建议关闭 YY 开播。</p>`,r:{minutes:4.51,words:1352},y:"a",t:"直播入门攻略四 | 特效篇：美颜、变声、多开、虚拟主播",O:4},["/25apps/livestreaming/4_live_effects","/25apps/livestreaming/4_live_effects.md"]],["v-13093ca8","/25apps/livestreaming/5_live_platforms.html",{d:"2023-04-26T10:25:41.000Z",c:["工具"],g:["直播"],e:`<p>主流直播平台有淘宝、京东、抖音、快手、视频号、哔哩哔哩、小红书、微博直播、斗鱼、虎牙和 YouTube。接下来，我将逐一介绍如何使用 PC 端的 OBS 在这些平台上进行直播。</p>
<h2> 淘宝直播</h2>
<ol>
<li>
<p>下载<a href="https://market.m.taobao.com/app/mtb/live-portal/download/index.html" target="_blank" rel="noopener noreferrer">淘宝直播客户端</a>，打开后点击「我要开播」，进入直播间界面。</p>
<figure><img src="https://tc.seoipo.com/2022-06-29-22-23-26.png" alt="" tabindex="0" loading="lazy"><figcaption>淘宝直播设置</figcaption></figure>
</li>
<li>
<p>在左侧点击「添加元素」&gt;「摄像头」，选择「OBS-Camera」，即可同步 OBS 直播画面。淘宝直播客户端也是基于 OBS，但不支持推流直播，只能通过虚拟摄像头同步画面。</p>
</li>
</ol>`,r:{minutes:3.8,words:1139},y:"a",t:"直播入门攻略五 | 平台篇：主流直播平台介绍",O:5},["/25apps/livestreaming/5_live_platforms","/25apps/livestreaming/5_live_platforms.md"]],["v-3a5c1610","/25apps/livestreaming/6_live_positioning.html",{d:"2023-04-26T10:25:41.000Z",c:["工具"],g:["直播"],e:`<p>直播过几次了，但是你的直播间总是没有人看，偶尔来了人也不知道说什么。作为直播新手，遇到这种情况是很正常的。建议按照本文的章节，逐一比对，对你的直播进行定位和策划。</p>
<h2> 直播定位</h2>
<p>开设直播前，从你的兴趣、能力和直播目的出发，确定直播定位。</p>
<ul>
<li>我是谁：我的职业/身份是什么。</li>
<li>面向谁：目标用户画像：性别、年龄、兴趣、收入、消费能力、性格特征等。</li>
<li>我能提供什么：核心竞争力：陪伴？专业知识？丰富经验？渠道资源？</li>
<li>解决目标用户什么问题：排遣寂寞？选购答疑？</li>
</ul>
<p>定位完成后，把自己放在目标观众角度进行换位思考，调整直播定位。</p>`,r:{minutes:4.68,words:1405},y:"a",t:"直播入门攻略六 | 技巧篇：直播定位与策划",O:6},["/25apps/livestreaming/6_live_positioning","/25apps/livestreaming/6_live_positioning.md"]],["v-428ff05c","/30web/%E5%89%8D%E7%AB%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%AE%BE%E8%AE%A1.html",{d:"2023-04-14T00:00:00.000Z",l:"2023年4月14日",c:["前端开发"],g:["算法","web"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>前端开发与设计</p>
</div>
<h1> 前端开发与设计</h1>
<h2> HTML5 &amp; CSS</h2>
<h3> CSS Cheatsheet</h3>
<p>这张Cheat Sheet 包含了CSS中常见的选择器、盒模型、背景、色彩、字体等语法，以及使用说明。</p>
<figure><figcaption>Untitled</figcaption></figure>
<hr>
<h3> HTML5 Cheet Sheet [TAGS]</h3>`,r:{minutes:3.52,words:1056},y:"a",t:"前端开发与设计",i:"🧑",O:null},["/30web/前端设计与开发知识图谱/前端开发与设计.html","/30web/%E5%89%8D%E7%AB%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%AE%BE%E8%AE%A1","/30web/前端设计与开发知识图谱/前端开发与设计.md","/30web/%E5%89%8D%E7%AB%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%AE%BE%E8%AE%A1.md"]],["v-ccaa603c","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%90%83%E6%8E%89%E9%82%A3%E5%8F%AA%E9%9D%92%E8%9B%99.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 吃掉那只青蛙</h1>
<p>《<a href="https://book.douban.com/subject/27130739/" target="_blank" rel="noopener noreferrer">吃掉那只青蛙</a>》的核心是每天先完成重要的工作、吃掉丑陋的青蛙。</p>
<h2> 明确目标</h2>
<p>明确目标：确定自己究竟想要什么。目标清晰至关重要。在每天开始工作之前，把你的目标全部写下来。</p>
<ol>
<li>现在就拿出一张纸来，列出你明年最想实现的 10 个目标。在写下这些目标的时候，设想着明年已经过去，这些目标已经实现。
用第一人称、现在时、积极的语气来写，这些目标就能立即进入你的潜意识。例如，你可能会写，「我每年赚 X 美元」，「我的体重 X 斤」，或者「我开哪个品牌/哪一款车」。</li>
<li>然后，检查你前面列出的 10 个目标，并从中挑出一个，设想一下如果这个目标实现了，就会对你的生活产生最大程度的积极影响。无论这个目标是什么，都把它写在另外一张纸上，给这个目标设定一个实现的最后期限，然后制订一份计划，并针对计划采取相应的行动，而且坚持每天都做一些有助于你实现这一计划的事情。坚持去做，这项练习会改变你的生活。</li>
</ol>`,r:{minutes:15.22,words:4565},y:"a",t:"吃掉那只青蛙"},["/31reading/0_自我提升/吃掉那只青蛙.html","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%90%83%E6%8E%89%E9%82%A3%E5%8F%AA%E9%9D%92%E8%9B%99","/31reading/0_自我提升/吃掉那只青蛙.md","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%90%83%E6%8E%89%E9%82%A3%E5%8F%AA%E9%9D%92%E8%9B%99.md"]],["v-5077b2a8","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%8F%90%E5%8D%87%E6%80%9D%E7%BB%B4.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 提升思维</h1>
<h2> 成长的边界</h2>
<p>《<a href="https://book.douban.com/subject/35410754/" target="_blank" rel="noopener noreferrer">成长的边界</a>》是探索更多的可能性，从外部视角审视自己。</p>
<ul>
<li>尝试新的活动、建立新的网络、寻找新的榜样——来发现这些可能性。</li>
<li>不要纠结于执行细节，从外部视角去审视项目。多从其他案例来类比，这样更容易理解，也可以检查自己的项目是否靠谱。</li>
<li>公正 P56：遵守传统可能将一个人引入令人满意的生活状态，并使他远离伤害。“可是他作为一个人所具有的相对价值是什么呢？”</li>
</ul>`,r:{minutes:2.24,words:673},y:"a",t:"提升思维"},["/31reading/0_自我提升/提升思维.html","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%8F%90%E5%8D%87%E6%80%9D%E7%BB%B4","/31reading/0_自我提升/提升思维.md","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%8F%90%E5%8D%87%E6%80%9D%E7%BB%B4.md"]],["v-0fb6d2aa","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E5%BD%B1%E5%93%8D%E5%8A%9B.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 影响力</h1>
<p>《<a href="https://book.douban.com/subject/1786387/" target="_blank" rel="noopener noreferrer">影响力</a>》让其他人按你的想法行为。</p>
<h2> 固定行为模式</h2>
<p><strong>当我们请别人帮忙时，如果能够讲出一个理由，那我们得到别人帮助的可能性就更大</strong>。原因很简单，人们就是喜欢为自己所做的事找一个理由。</p>
<h2> 对比原理</h2>
<p>对比原理会影响我们对前后两件事情之间的差异的判断。简单地说，如果两件东西很不一样，我们往往会认为它们之间的差别比实际的更大。所以，如果我们先拿起一样轻的东西，然后再拿起一样重的东西，就会觉得后者比单独拿起来时还要沉。销售时，**先将比较贵重的商品展示给顾客可以赚到更多的钱。**人们可能不会去买一件 500 元的毛衣。但他如果刚刚花了 4500 元买了一套西装，那 500 元的毛衣看起来就没那么贵了。</p>`,r:{minutes:8.81,words:2643},y:"a",t:"影响力"},["/31reading/1_心理学/影响力.html","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E5%BD%B1%E5%93%8D%E5%8A%9B","/31reading/1_心理学/影响力.md","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E5%BD%B1%E5%93%8D%E5%8A%9B.md"]],["v-5941f6a8","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E7%A4%BE%E4%BC%9A%E8%AE%A4%E7%9F%A5.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 社会认知</h1>
<h2> 巴拉巴西成功定律</h2>
<p>《<a href="https://book.douban.com/subject/34901765/" target="_blank" rel="noopener noreferrer">巴拉巴西成功定律</a>》并不是成功鸡汤，而是通过一些现象让你了解成功的部分规律。</p>
<ul>
<li>
<p>能给人留下印象：朗朗为什么动作特别浮夸？观看无声视频的那些人，他们需要在激情洋溢、但听不到任何声音的音乐演奏者中做出选择。在这一组中，新手和专家在预测的准确性上都达到当次比赛的 50％。换句话说，那些完全听不见音乐的人预测的准确率是能够听见音乐的人的两倍。</p>
</li>
<li>
<p>面试/比赛越靠后越能成功。</p>
</li>
</ul>`,r:{minutes:1.74,words:521},y:"a",t:"社会认知"},["/31reading/1_心理学/社会认知.html","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E7%A4%BE%E4%BC%9A%E8%AE%A4%E7%9F%A5","/31reading/1_心理学/社会认知.md","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E7%A4%BE%E4%BC%9A%E8%AE%A4%E7%9F%A5.md"]],["v-7652e8ab","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E8%87%AA%E6%88%91%E8%AE%A4%E7%9F%A5.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 自我认知</h1>
<h2> 人性的弱点</h2>
<p>《<a href="https://book.douban.com/subject/25985683/" target="_blank" rel="noopener noreferrer">人性的弱点</a>》的副标题是如何赢取友谊与影响他人。</p>
<ul>
<li>不应该看到优点，而是要看到对方的需求、心里缺失。</li>
<li>代入感、共鸣：连问自己三次为什么，找到对方真实的原因。挖掘深层次精神需求，作为开场。</li>
<li>刺激性言语：让对方想吐槽，想反馈。没心眼&gt;真诚。例：一不小心一眼看成 XXX 了，然后把它给引导偏了。</li>
</ul>`,r:{minutes:2.81,words:843},y:"a",t:"自我认知"},["/31reading/1_心理学/自我认知.html","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E8%87%AA%E6%88%91%E8%AE%A4%E7%9F%A5","/31reading/1_心理学/自我认知.md","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/%E8%87%AA%E6%88%91%E8%AE%A4%E7%9F%A5.md"]],["v-193410a6","/31reading/2_%E6%8A%80%E8%83%BD/%E5%86%99%E4%BD%9C.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 写作</h1>
<h2> 吴军阅读与写作讲义</h2>
<p>《<a href="https://book.douban.com/subject/35426741/" target="_blank" rel="noopener noreferrer">吴军阅读与写作讲义</a>》的前半部分涵盖了很多实用技巧，帮助我澄清了对听、说、读、写的认识。而后半部分则是一些阅读范例，类似于语文书中的阅读理解，我准备将其当作工具书，等待无聊时慢慢阅读。</p>
<p>部分记录：</p>
<ul>
<li>在古希腊，奴隶也接受教育，但是他们所学的是谋生技能，相当于现在的白领工作。只有自由民才能学习通识教育，例如语文、历史等。</li>
<li>中美教育差别：阅读理解并非只是简单理解一段话，而是从整体结构上出发，甚至是考卷上没出现的内容。</li>
<li>人工智能在阅读理解方面有着卓越的表现，可以发现文章中的细节。但是在处理宏观问题方面却不如人类。</li>
</ul>`,r:{minutes:2.28,words:685},y:"a",t:"写作"},["/31reading/2_技能/写作.html","/31reading/2_%E6%8A%80%E8%83%BD/%E5%86%99%E4%BD%9C","/31reading/2_技能/写作.md","/31reading/2_%E6%8A%80%E8%83%BD/%E5%86%99%E4%BD%9C.md"]],["v-5bda9b9c","/31reading/3_%E7%AE%A1%E7%90%86/%E5%95%86%E4%B8%9A%E4%BC%A0%E8%AE%B0.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 商业传记</h1>
<h2> 苏世民：我的经验与教训</h2>
<p>《<a href="https://book.douban.com/subject/34952676/" target="_blank" rel="noopener noreferrer">苏世民：我的经验与教训</a>》阅读体验不错，其中故事化的情节让本书更有趣，比如：「第一份工作是为了获取比同班同学更高的工资 (一万)，强行跟对方招聘人员，说我要 10500 美元」，「工作初期的工作是审核对方公司报告，作者判断公司 A 不行，可是公司没有接受。过了几年话，公司 A 倒闭，证券公司被告。原告将作者形容成一个天才，而自己公司就把作者形容成白痴，最后原告赢了」。</p>`,r:{minutes:1.13,words:339},y:"a",t:"商业传记"},["/31reading/3_管理/商业传记.html","/31reading/3_%E7%AE%A1%E7%90%86/%E5%95%86%E4%B8%9A%E4%BC%A0%E8%AE%B0","/31reading/3_管理/商业传记.md","/31reading/3_%E7%AE%A1%E7%90%86/%E5%95%86%E4%B8%9A%E4%BC%A0%E8%AE%B0.md"]],["v-954c8e4e","/31reading/3_%E7%AE%A1%E7%90%86/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 市场营销</h1>
<h2> 你的顾客需要一个好故事</h2>
<p>《<a href="https://book.douban.com/subject/30242424/" target="_blank" rel="noopener noreferrer">你的顾客需要一个好故事</a>》教你把主人公的位置留给顾客，而把你的品牌放到向导的位置上。作者提出的故事品牌框架（SB7），能让你清晰有效地阐明品牌信息。</p>
<p>这本书很适合品牌故事构建和反思，需要经常翻阅以检查。例如，公司网站的主人公应该是客户，你的角色是向导，需要减少文字，增加图片权重，思考客户需要什么，以确保行动明确和有力。</p>`,r:{minutes:2.57,words:771},y:"a",t:"市场营销"},["/31reading/3_管理/市场营销.html","/31reading/3_%E7%AE%A1%E7%90%86/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80","/31reading/3_管理/市场营销.md","/31reading/3_%E7%AE%A1%E7%90%86/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80.md"]],["v-2fa3514c","/31reading/3_%E7%AE%A1%E7%90%86/%E7%A4%BE%E4%BC%9A%E7%BB%8F%E6%B5%8E.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 社会经济</h1>
<h2> 置身事内</h2>
<p>《<a href="https://book.douban.com/subject/35546622/" target="_blank" rel="noopener noreferrer">置身事内</a>》基本是概念介绍，对于问题浅尝则止，想通盘理解政府的税制变革和运作模式可以略读。不能明白评分为什么那么高。</p>
`,r:{minutes:.21,words:64},y:"a",t:"社会经济"},["/31reading/3_管理/社会经济.html","/31reading/3_%E7%AE%A1%E7%90%86/%E7%A4%BE%E4%BC%9A%E7%BB%8F%E6%B5%8E","/31reading/3_管理/社会经济.md","/31reading/3_%E7%AE%A1%E7%90%86/%E7%A4%BE%E4%BC%9A%E7%BB%8F%E6%B5%8E.md"]],["v-cfd7a768","/soph%E5%BC%80%E5%8F%91/docker/doker.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>![] (./photo/1.png)
![] (./photo/2.png)
![] (./photo/3.png)
<a href="https://hub.docker.com/search?q=" target="_blank" rel="noopener noreferrer">Explore Docker's Container Image Repository | Docker Hub</a></p>
<h1> 使用教程</h1>
<p><a href="https://www.coonote.com/docker/docker-image-usage.html" target="_blank" rel="noopener noreferrer">Docker 镜像使用-菜鸟笔记 (coonote.com)</a></p>`,r:{minutes:.35,words:106},y:"a",t:"使用教程"},["/soph开发/docker/doker.html","/soph%E5%BC%80%E5%8F%91/docker/doker","/soph开发/docker/doker.md","/soph%E5%BC%80%E5%8F%91/docker/doker.md"]],["v-09974639","/soph%E5%BC%80%E5%8F%91/mlib/mlib.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 概念</h1>
<p>算能也对外开源了其自研的 TPU 编译工具— TPU-MLIR（Multi-Level Intermediate Representation）。TPU-MLIR 是一款主打 AI 芯片的 TPU 编译器开源工程。工程提供了完整的工具链，将预先训练好的各类框架下的神经网络，在其中进行转化，最终转化为能在 TPU 中高效运算的 二进制文件bmodel，以实现更高效的推理。</p>
<h1> 优势</h1>
<p>TPU-MLIR已经支持TFLite以及onnx格式，这两种格式的模型可以直接转化为TPU可用的bmodel。如果不是这两种格式呢？实际上onnx提供了一套转换工具，可以将现在市面上主流深度学习框架编写的模型转为onnx格式，然后就能继续转为bmodel了</p>`,r:{minutes:.67,words:201},y:"a",t:"概念"},["/soph开发/mlib/mlib.html","/soph%E5%BC%80%E5%8F%91/mlib/mlib","/soph开发/mlib/mlib.md","/soph%E5%BC%80%E5%8F%91/mlib/mlib.md"]],["v-5da217d9","/soph%E5%BC%80%E5%8F%91/nntc/nntc.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>nntc是一个神经网络编译器，可以将神经网络模型转换为特定硬件平台上可执行的代码。</p>
<p>你需要熟悉nntc支持的模型格式（如ONNX、TensorFlow、PyTorch等），以及如何将模型转换为特定硬件的指令集。</p>
`,r:{minutes:.24,words:72},y:"a",t:""},["/soph开发/nntc/nntc.html","/soph%E5%BC%80%E5%8F%91/nntc/nntc","/soph开发/nntc/nntc.md","/soph%E5%BC%80%E5%8F%91/nntc/nntc.md"]],["v-063e92f9","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E5%9F%BA%E4%BA%8ELeNet-5%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>


</p>
`,r:{minutes:.04,words:12},y:"a",t:""},["/02Image_Processing/图像分类/项目实战/基于LeNet-5的手写数字识别.html","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E5%9F%BA%E4%BA%8ELeNet-5%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB","/02Image_Processing/图像分类/项目实战/基于LeNet-5的手写数字识别.md","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E5%9F%BA%E4%BA%8ELeNet-5%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB.md"]],["v-54376779","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/Machine_Vision/READEME.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 一、<strong>常用的图像处理算法：</strong></h1>
<p><strong>1，图像变换</strong>：（空域与频域、几何变换、色度变换、尺度变换）</p>
<p>几何变换：图像平移、旋转、镜像、转置；</p>
<p>尺度变换：图像缩放、插值算法（最近邻插值、线性插值、双三次插值）；</p>
<p>空间域与频域间变换：由于图像阵列很大，直接在空间域中进行处理，涉及计算量很大。因此，有时候需要将空间域变换到频域进行处理。例如：傅立叶变换、沃尔什变换、离散余弦变换等间接处理技术，将空间域的处理转换为频域处理，不仅可减少计算量，而且可获得更有效的处理（如傅立叶变换可在频域中进行数字滤波处理）。</p>`,r:{minutes:5.69,words:1708},y:"a",t:"机器学习"},["/08AI_Machine_Learning_Deep_Learning/Machine_Learning/Machine_Vision/READEME","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/Machine_Vision/READEME.md"]],["v-0c2cc5c3","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20mmultimap.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> std:mmultimap</h1>
<p>增删效率: $O(logn)$
底层实现: 红黑树
数值是否重复: 是
是否有序: 有序
查询效率: $O(logn)$
能否更改数值: 否</p>
`,r:{minutes:.14,words:41},y:"a",t:"std:mmultimap"},["/18Data_Structure/数据结构编程练习/代码随想录/std mmultimap.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20mmultimap","/18Data_Structure/数据结构编程练习/代码随想录/std mmultimap.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20mmultimap.md"]],["v-55e0227d","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20mmultiset.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> std:mmultiset</h1>
<p>增删效率: $O(logn)$
底层实现: 红黑树
数值是否重复: 是
是否有序: 有序
查询效率: $O(logn)$
能否更改数值: 否</p>
`,r:{minutes:.14,words:41},y:"a",t:"std:mmultiset"},["/18Data_Structure/数据结构编程练习/代码随想录/std mmultiset.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20mmultiset","/18Data_Structure/数据结构编程练习/代码随想录/std mmultiset.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20mmultiset.md"]],["v-c391adde","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20set.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> std:set</h1>
<p>增删效率: $O(logn)$
底层实现: 红黑树
数值是否重复: 否
是否有序: 有序
查询效率: $O(logn)$
能否更改数值: 否</p>
`,r:{minutes:.14,words:41},y:"a",t:"std:set"},["/18Data_Structure/数据结构编程练习/代码随想录/std set.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20set","/18Data_Structure/数据结构编程练习/代码随想录/std set.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20set.md"]],["v-decc39fe","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20unorder_map.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> std:unorder_map</h1>
<p>增删效率: $O(1)$
底层实现: 哈希表
数值是否重复: 否
是否有序: 无序
查询效率: $O(1)$
能否更改数值: 否</p>
`,r:{minutes:.14,words:41},y:"a",t:"std:unorder_map"},["/18Data_Structure/数据结构编程练习/代码随想录/std unorder_map.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20unorder_map","/18Data_Structure/数据结构编程练习/代码随想录/std unorder_map.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20unorder_map.md"]],["v-4b65808a","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20unorder_set.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> std:unorder_set</h1>
<p>增删效率: $O(1)$
底层实现: 哈希表
数值是否重复: 否
是否有序: 无序
查询效率: $O(1)$
能否更改数值: 否</p>
`,r:{minutes:.14,words:41},y:"a",t:"std:unorder_set"},["/18Data_Structure/数据结构编程练习/代码随想录/std unorder_set.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20unorder_set","/18Data_Structure/数据结构编程练习/代码随想录/std unorder_set.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/std%20unorder_set.md"]],["v-30fe8b7c","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>看如下中间节点的顺序，就可以发现，中间节点的顺序就是所谓的遍历方式</p>
<ul>
<li>前序遍历：中左右</li>
<li>中序遍历：左中右</li>
<li>后序遍历：左右中</li>
</ul>
<p>大家可以对着如下图，看看自己理解的前后中序有没有问题。</p>
<figure><img src="https://img-blog.csdnimg.cn/20200806191109896.png" alt="https://img-blog.csdnimg.cn/20200806191109896.png" tabindex="0" loading="lazy"><figcaption><a href="https://img-blog.csdnimg.cn/20200806191109896.png" target="_blank" rel="noopener noreferrer">https://img-blog.csdnimg.cn/20200806191109896.png</a></figcaption></figure>`,r:{minutes:10.75,words:3225},y:"a",t:"二叉树的递归遍历"},["/18Data_Structure/数据结构编程练习/代码随想录/二叉树.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91","/18Data_Structure/数据结构编程练习/代码随想录/二叉树.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91.md"]],["v-29cabcf7","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91%20.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——二叉树</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<figure><figcaption>Untitled</figcaption></figure>
<h2> <strong>二叉树的理论基础</strong></h2>
<ul>
<li><strong><a href="https://programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html" target="_blank" rel="noopener noreferrer">关于二叉树，你该了解这些！&nbsp;(opens new window)</a></strong>：二叉树的种类、存储方式、遍历方式、定义方式</li>
</ul>`,r:{minutes:65.22,words:19565},y:"a",t:"代码随想录算法总结(C++)版本——二叉树"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——二叉树 .html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91%20","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——二叉树 .html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91%20.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——二叉树 .md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91%20.md"]],["v-0cef7c3e","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%80%EF%BC%89.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——动态规划（一）</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> 概述</h1>
<figure><figcaption>Untitled</figcaption></figure>
<p><strong>对于动态规划问题，我将拆解为如下五步曲，这五步都搞清楚了，才能说把动态规划真的掌握了！</strong></p>
<ol>
<li>确定dp数组（dp table）以及下标的含义</li>
<li>确定递推公式</li>
<li>dp数组如何初始化</li>
<li>确定遍历顺序</li>
<li>举例推导dp数组</li>
</ol>`,r:{minutes:12.41,words:3723},y:"a",t:"代码随想录算法总结(C++)版本——动态规划（一）"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——动态规划（一）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%80%EF%BC%89","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——动态规划（一）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%80%EF%BC%89.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——动态规划（一）.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%80%EF%BC%89.md"]],["v-35a63887","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%89%EF%BC%89.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——动态规划（三）</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> 打家劫舍问题</h1>
<h2> 打家劫舍</h2>
<p><strong><a href="https://leetcode-cn.com/problems/house-robber/" target="_blank" rel="noopener noreferrer">力扣题目链接(opens new window)</a></strong></p>
<p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</p>`,r:{minutes:42.92,words:12876},y:"a",t:"代码随想录算法总结(C++)版本——动态规划（三）"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——动态规划（三）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%89%EF%BC%89","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——动态规划（三）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%89%EF%BC%89.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——动态规划（三）.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%89%EF%BC%89.md"]],["v-904008be","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%BA%8C%EF%BC%89%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——动态规划（二）背包问题</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> 概述</h1>
<p>我这里画了一个图，如下：</p>
<figure><img src="https://img-blog.csdnimg.cn/20210117171307407.png" alt="https://img-blog.csdnimg.cn/20210117171307407.png" tabindex="0" loading="lazy"><figcaption><a href="https://img-blog.csdnimg.cn/20210117171307407.png" target="_blank" rel="noopener noreferrer">https://img-blog.csdnimg.cn/20210117171307407.png</a></figcaption></figure>`,r:{minutes:24.68,words:7403},y:"a",t:"代码随想录算法总结(C++)版本——动态规划（二）背包问题"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——动态规划（二）背包问题.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%BA%8C%EF%BC%89%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——动态规划（二）背包问题.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%BA%8C%EF%BC%89%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——动态规划（二）背包问题.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E4%BA%8C%EF%BC%89%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98.md"]],["v-3dffc5f0","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8D%95%E8%B0%83%E6%A0%88.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——单调栈</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> <strong>739. 每日温度</strong></h1>
<p><strong><a href="https://leetcode-cn.com/problems/daily-temperatures/" target="_blank" rel="noopener noreferrer">力扣题目链接(opens new window)</a></strong></p>
<p>请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用&nbsp;0 来代替。</p>`,r:{minutes:8.54,words:2561},y:"a",t:"代码随想录算法总结(C++)版本——单调栈"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——单调栈.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8D%95%E8%B0%83%E6%A0%88","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——单调栈.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8D%95%E8%B0%83%E6%A0%88.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——单调栈.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8D%95%E8%B0%83%E6%A0%88.md"]],["v-1141bba7","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8F%8C%E6%8C%87%E9%92%88.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——双指针</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> <strong><strong>27. 移除元素</strong></strong></h1>
<p>给你一个数组 nums&nbsp;和一个值 val，你需要 原地 移除所有数值等于&nbsp;val&nbsp;的元素，并返回移除后数组的新长度。</p>
<p>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并<strong>原地</strong>修改输入数组。</p>
<p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p>`,r:{minutes:19.46,words:5837},y:"a",t:"代码随想录算法总结(C++)版本——双指针"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——双指针.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8F%8C%E6%8C%87%E9%92%88","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——双指针.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8F%8C%E6%8C%87%E9%92%88.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——双指针.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%8F%8C%E6%8C%87%E9%92%88.md"]],["v-0251d77a","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%80).html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——哈希、字符串</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> 哈希</h1>
<h3> 常见的三种哈希结构</h3>
<p>当我们想使用哈希法来解决问题的时候，我们一般会选择如下三种数据结构。</p>
<ul>
<li>数组</li>
<li>set （集合）</li>
<li>map(映射)</li>
</ul>
<p>在C++中，set 和 map 分别提供以下三种数据结构，其底层实现以及优劣如下表所示：</p>
<table>
<thead>
<tr>
<th>集合</th>
<th>底层实现</th>
<th>是否有序</th>
<th>数值可否重复</th>
<th>能否更改数值</th>
<th>查询效率</th>
<th>增删效率</th>
</tr>
</thead>
<tbody>
<tr>
<td>set</td>
<td>红黑树</td>
<td>有序</td>
<td>不可重复</td>
<td>不可更改</td>
<td>O(logn)</td>
<td>O(logn)</td>
</tr>
<tr>
<td>unordered_set</td>
<td>哈希表</td>
<td>无序</td>
<td>不可重复</td>
<td>不可更改</td>
<td>O(1)</td>
<td>O(1)</td>
</tr>
<tr>
<td>multiset</td>
<td>红黑树</td>
<td>有序</td>
<td>可重复</td>
<td>不可更改</td>
<td>O(logn)</td>
<td>O(logn)</td>
</tr>
</tbody>
</table>`,r:{minutes:17.7,words:5310},y:"a",t:"代码随想录算法总结(C++)版本——哈希、字符串"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——哈希、字符串(一).html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%80)","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——哈希、字符串(一).html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%80).html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——哈希、字符串(一).md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%80).md"]],["v-b416d81a","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E4%BA%8C%EF%BC%89.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 哈希</h1>
<h3> 常见的三种哈希结构</h3>
<p>当我们想使用哈希法来解决问题的时候，我们一般会选择如下三种数据结构。</p>
<ul>
<li>数组</li>
<li>set （集合）</li>
<li>map(映射)</li>
</ul>
<p>在C++中，set 和 map 分别提供以下三种数据结构，其底层实现以及优劣如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">集合</th>
<th style="text-align:center">底层实现</th>
<th style="text-align:center">是否有序</th>
<th style="text-align:center">数值是否重复</th>
<th style="text-align:center">能否更改数值</th>
<th style="text-align:center">查询效率</th>
<th style="text-align:center">增删效率</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">std:set</td>
<td style="text-align:center">红黑树</td>
<td style="text-align:center">有序</td>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">$O(logn)$</td>
<td style="text-align:center">$O(logn)$</td>
</tr>
<tr>
<td style="text-align:center">std:mmultiset</td>
<td style="text-align:center">红黑树</td>
<td style="text-align:center">有序</td>
<td style="text-align:center">是</td>
<td style="text-align:center">否</td>
<td style="text-align:center">$O(logn)$</td>
<td style="text-align:center">$O(logn)$</td>
</tr>
<tr>
<td style="text-align:center">std:unorder_set</td>
<td style="text-align:center">哈希表</td>
<td style="text-align:center">无序</td>
<td style="text-align:center">否</td>
<td style="text-align:center">否</td>
<td style="text-align:center">$O(1)$</td>
<td style="text-align:center">$O(1)$</td>
</tr>
</tbody>
</table>`,r:{minutes:17.66,words:5298},y:"a",t:"哈希"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——哈希、字符串（二）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E4%BA%8C%EF%BC%89","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——哈希、字符串（二）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E4%BA%8C%EF%BC%89.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——哈希、字符串（二）.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%93%88%E5%B8%8C%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E4%BA%8C%EF%BC%89.md"]],["v-769589df","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%9B%9E%E6%BA%AF.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——回溯</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> 模板</h1>
<figure><img src="https://img-blog.csdnimg.cn/20210130173631174.png" alt="https://img-blog.csdnimg.cn/20210130173631174.png" tabindex="0" loading="lazy"><figcaption><a href="https://img-blog.csdnimg.cn/20210130173631174.png" target="_blank" rel="noopener noreferrer">https://img-blog.csdnimg.cn/20210130173631174.png</a></figcaption></figure>`,r:{minutes:21.57,words:6472},y:"a",t:"代码随想录算法总结(C++)版本——回溯"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——回溯.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%9B%9E%E6%BA%AF","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——回溯.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%9B%9E%E6%BA%AF.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——回溯.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E5%9B%9E%E6%BA%AF.md"]],["v-375de289","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 数组</h2>
<h3> 704. 二分查找</h3>
<p>给定一个&nbsp;n&nbsp;个元素有序的（升序）整型数组&nbsp;nums 和一个目标值&nbsp;target &nbsp;，写一个函数搜索&nbsp;nums&nbsp;中的 target，如果目标值存在返回下标，否则返回 -1。</p>
<p>示例 1:</p>
<div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="language-c++"><code>输入: nums = [-1,0,3,5,9,12], target = 9     
输出: 4       
解释: 9 出现在 nums 中并且下标为 4     
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:17.3,words:5189},y:"a",t:""},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——数组、链表.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——数组、链表.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——数组、链表.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8.md"]],["v-9b426004","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8%EF%BC%88%E4%BA%8C%EF%BC%89.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——数组、链表</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h2> 数组</h2>
<h3> 704. 二分查找</h3>
<p>给定一个&nbsp;n&nbsp;个元素有序的（升序）整型数组&nbsp;nums 和一个目标值&nbsp;target &nbsp;，写一个函数搜索&nbsp;nums&nbsp;中的 target，如果目标值存在返回下标，否则返回 -1。</p>
<p>示例 1:</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [-1,0,3,5,9,12], target = 9
输出: 4
解释: 9 出现在 nums 中并且下标为 4

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:17.74,words:5321},y:"a",t:"代码随想录算法总结(C++)版本——数组、链表"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——数组、链表（二）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8%EF%BC%88%E4%BA%8C%EF%BC%89","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——数组、链表（二）.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8%EF%BC%88%E4%BA%8C%EF%BC%89.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——数组、链表（二）.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%95%B0%E7%BB%84%E3%80%81%E9%93%BE%E8%A1%A8%EF%BC%88%E4%BA%8C%EF%BC%89.md"]],["v-3fc2abd2","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——栈和队列</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> <strong><strong>232.用栈实现队列</strong></strong></h1>
<p>使用栈实现队列的下列操作：</p>
<p>push(x) -- 将一个元素放入队列的尾部。pop() -- 从队列首部移除元素。peek() -- 返回队列首部的元素。empty() -- 返回队列是否为空。</p>
<p>示例:</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>MyQueue queue = new MyQueue();
queue.push(1);
queue.push(2);
queue.peek();  // 返回 1
queue.pop();   // 返回 1
queue.empty(); // 返回 false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.7,words:3811},y:"a",t:"代码随想录算法总结(C++)版本——栈和队列"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——栈和队列.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——栈和队列.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——栈和队列.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97.md"]],["v-c4b5c206","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E8%B4%AA%E5%BF%83.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 代码随想录算法总结(C++)版本——贪心</h1>
<p>Created: September 2, 2022 1:06 PM</p>
<h1> 贪心算法概述</h1>
<p>贪心算法一般分为如下四步：</p>
<ul>
<li>将问题分解为若干个子问题</li>
<li>找出适合的贪心策略</li>
<li>求解每一个子问题的最优解</li>
<li>将局部最优解堆叠成全局最优解</li>
</ul>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>`,r:{minutes:28.54,words:8563},y:"a",t:"代码随想录算法总结(C++)版本——贪心"},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C__)版本——贪心.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C__)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E8%B4%AA%E5%BF%83","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——贪心.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E8%B4%AA%E5%BF%83.html","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(C++)版本——贪心.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(C++)%E7%89%88%E6%9C%AC%E2%80%94%E2%80%94%E8%B4%AA%E5%BF%83.md"]],["v-4eb7a968","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(python)%E7%89%88%E6%9C%AC.html",{d:"2023-04-26T10:25:41.000Z",e:`<h2> 数组</h2>
<h3> [[算法学习/代码随想录算法总结(C++)版本——数组、链表#704 二分查找]]</h3>
<p>版本一）左闭右闭区间</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>class Solution:
    def search(self, nums: List[int], target: int) -&gt; int:
        left, right = 0, len(nums) - 1
        
        while left &lt;= right:
            middle = (left + right) // 2

            if nums[middle] &lt; target:
                left = middle + 1
            elif nums[middle] &gt; target:
                right = middle - 1
            else:
                return middle
        return -1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.61,words:183},y:"a",t:""},["/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(python)版本.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(python)%E7%89%88%E6%9C%AC","/18Data_Structure/数据结构编程练习/代码随想录/代码随想录算法总结(python)版本.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(python)%E7%89%88%E6%9C%AC.md"]],["v-23ff6a91","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%BE%E7%9F%A5%E8%AF%86.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 图知识</h1>
<p>Created: October 9, 2022 3:29 PM</p>
<ul>
<li>
<p><strong><strong>一、图的基本知识</strong></strong></p>
<p>图就就是下面这种由节点和连接每对节点的边所构成的图形。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>1、如果给边加<strong>上一个值表示权重</strong>，这种图就是<strong>加权图</strong>，没有权重的图就是非加权图，没有权重的边只能表示两个节点的连接状态，而有权重的边就可以表示节点之间的“连接程度”。</p>
<p>2、如果给边加上<strong>表示方向的箭头</strong>，即表示节点之间的传递方向，这种图就是<strong>有向图</strong>，而边上没有箭头的图就是无向图。</p>
<p>3、如果图中<strong>任意两个节点都能找到路径</strong>可以将它们进行连接，则称该图为<strong>连通图</strong>，上面这个图就是连通图，反之则为非连通图。</p>
<p>下面两个图分别为加权图和有向图：</p>
<figure><img src="https://pic3.zhimg.com/80/v2-9b940fc1dfc1a9e2e9a49bdb328d96b6_720w.webp" alt="https://pic3.zhimg.com/80/v2-9b940fc1dfc1a9e2e9a49bdb328d96b6_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic3.zhimg.com/80/v2-9b940fc1dfc1a9e2e9a49bdb328d96b6_720w.webp" target="_blank" rel="noopener noreferrer">https://pic3.zhimg.com/80/v2-9b940fc1dfc1a9e2e9a49bdb328d96b6_720w.webp</a></figcaption></figure>
<p>非连通图如下所示：</p>
<figure><img src="https://pic2.zhimg.com/80/v2-ddf3adcef6bfac7f3eb5b0339ae1dd95_720w.webp" alt="https://pic2.zhimg.com/80/v2-ddf3adcef6bfac7f3eb5b0339ae1dd95_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic2.zhimg.com/80/v2-ddf3adcef6bfac7f3eb5b0339ae1dd95_720w.webp" target="_blank" rel="noopener noreferrer">https://pic2.zhimg.com/80/v2-ddf3adcef6bfac7f3eb5b0339ae1dd95_720w.webp</a></figcaption></figure>
<p><strong>图的搜索算法</strong>：图的搜索指的就是<strong>从图的某一节点开始</strong>，<strong>通过边到达不同的节点</strong>，最终找到<strong>目标节点的过程</strong>。根据搜索的顺序不同，图的搜索算法可分为**“广度优先搜索”<strong>和</strong>“深度优先搜索”**两种。</p>
<p><strong>图的最短路径问题</strong>：最短路径问题就是要在两个节点的所有路径中，找到一条所经过的边的权重总和最小的路径。相关算法有**“贝尔曼-福特算法”<strong>，</strong>“狄克斯特拉算法”<strong>和</strong>“A* 算法”**三种。</p>
</li>
<li>
<p><strong><strong>二、广度优先搜索</strong></strong></p>
<p>广度优先搜索和深度优先搜索一样，都是<strong>对图进行搜索的算法</strong>，都是<strong>从起点开始顺着边搜索</strong>，此时并不知道图的整体结构，<strong>直到找到指定节点(即终点)</strong>。在此过程中每<strong>走到一个节点</strong>，就会判断一次它是否为终点。</p>
<p><strong>广度优先搜索</strong>会根据<strong>离起点的距离</strong>，按照从<strong>近到远的顺序对各节点进行搜索</strong>。
而<strong>深度优先搜索</strong>会沿着一条路径<strong>不断往下搜索</strong>直到不能再继续为止，然后再折返，开始搜索下一条路径。</p>
<p>下图中红色表示当前所在的节点**（节点A）**，终点设为节点G，将与节点A直连的三个节点B, C, D放入存放候补节点的队列中（<strong>与节点A直连的三个节点放入时可以没有顺序</strong>，这里的放入顺序为B, C, D），用绿色表示。</p>
<figure><img src="https://pic3.zhimg.com/80/v2-9458dcee63cd08a55f3f2f73ff0d9c3e_720w.webp" alt="https://pic3.zhimg.com/80/v2-9458dcee63cd08a55f3f2f73ff0d9c3e_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic3.zhimg.com/80/v2-9458dcee63cd08a55f3f2f73ff0d9c3e_720w.webp" target="_blank" rel="noopener noreferrer">https://pic3.zhimg.com/80/v2-9458dcee63cd08a55f3f2f73ff0d9c3e_720w.webp</a></figcaption></figure>
<p>此时队列中有B, C, D三个节点，我们来看看广度优先搜索是如何对各节点进行搜索的。</p>
<figure><img src="https://pic2.zhimg.com/80/v2-2301f101a860070f705540ac9c4c5609_720w.webp" alt="https://pic2.zhimg.com/80/v2-2301f101a860070f705540ac9c4c5609_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic2.zhimg.com/80/v2-2301f101a860070f705540ac9c4c5609_720w.webp" target="_blank" rel="noopener noreferrer">https://pic2.zhimg.com/80/v2-2301f101a860070f705540ac9c4c5609_720w.webp</a></figcaption></figure>
<p>1、上面左图：此时从队列中选出一个节点，优先选择最早放入队列的那个节点，这里选择最<strong>左边的节点B</strong>。将<strong>已经搜索过的节点变为橙色（节点A）</strong>，搜索到节点B时，将与节点B直连的两个<strong>节点E和F</strong>放入队列中，此时队列为 [C, D, E, F]。</p>
<p>2、上面中图：对节点B搜索完毕，节点B不是要找的终点，再搜索节点C，将与节点C直连的节点H放入队列中，此时队列为 [D, E, F, H]。</p>
<p>3、然后对节点D进行同样的操作，此时队列为 [E, F, H, I, J]。</p>
<p>4、上面右图：对与节点A直连的节点搜索完毕，再对与节点B直连的节点进行搜索（因为剩下的点中它们最先放入队列），这里选择节点E，将与节点E直连的节点K放入队列中，此时队列为 [F, H, I, J, K]。</p>
<p>然后一直按照这个规则进行搜索，直到到达目标节点G为止，搜索结束。</p>
<figure><img src="https://pic4.zhimg.com/80/v2-e081ff21ef214954d87c8f1a32d4c2b3_720w.webp" alt="https://pic4.zhimg.com/80/v2-e081ff21ef214954d87c8f1a32d4c2b3_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic4.zhimg.com/80/v2-e081ff21ef214954d87c8f1a32d4c2b3_720w.webp" target="_blank" rel="noopener noreferrer">https://pic4.zhimg.com/80/v2-e081ff21ef214954d87c8f1a32d4c2b3_720w.webp</a></figcaption></figure>
<p>广度优先搜索为<strong>从起点开始</strong>，由<strong>近及远进行广泛的搜索</strong>。因此，<strong>目标节点离起点越近</strong>，搜索结束得就越快。</p>
</li>
<li>
<p><strong><strong>三、深度优先搜索</strong></strong></p>
<p>在深度优先搜索中，保存候补节点是<strong>栈</strong>，栈的性质就是<strong>先进后出</strong>，即最先进入该栈的候补节点就最后进行搜索。</p>
<p>还是将起点设为节点A，终点设为节点G，还是先将与节点A直连的三个节点B, C, D放入存放候补节点的栈中（这里的放入顺序为D, C, B）。到这里和广度优先搜索似乎没什么区别。</p>
<p>因为节点B是最后放入，则先从节点B开始搜索，将与节点B直连的两个节点E和F放入栈中，此时栈为 [D, C, F, E]。</p>
<figure><img src="https://pic1.zhimg.com/80/v2-881d99e3b36b6a478421b164ddac0c0c_720w.webp" alt="https://pic1.zhimg.com/80/v2-881d99e3b36b6a478421b164ddac0c0c_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic1.zhimg.com/80/v2-881d99e3b36b6a478421b164ddac0c0c_720w.webp" target="_blank" rel="noopener noreferrer">https://pic1.zhimg.com/80/v2-881d99e3b36b6a478421b164ddac0c0c_720w.webp</a></figcaption></figure>
<p>接下来就可以看出深度优先搜索和广度优先搜索存在的区别了。</p>
<figure><img src="https://pic3.zhimg.com/80/v2-413618ec9352d2984d25ac28cb9506aa_720w.webp" alt="https://pic3.zhimg.com/80/v2-413618ec9352d2984d25ac28cb9506aa_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic3.zhimg.com/80/v2-413618ec9352d2984d25ac28cb9506aa_720w.webp" target="_blank" rel="noopener noreferrer">https://pic3.zhimg.com/80/v2-413618ec9352d2984d25ac28cb9506aa_720w.webp</a></figcaption></figure>
<p>1、上面左图：然后再对节点E进行搜索，将与节点E直连的节点K放入栈中，此时栈为 [D, C, F, K]。</p>
<p>2、此时节点K在栈的最后，所以先对节点K进行搜索，节点K不是终点，而且节点K没有其他直连的节点，所以此时栈为 [D, C, F]。</p>
<p>3、上面中图：然后再对节点F进行搜索，节点F也不是终点，而且节点F也没有其他直连的节点，所以此时栈为 [D, C]。</p>
<p>3、上面右图：接下来就对节点C进行搜索，将与节点C直连的节点H放入栈中，此时栈为 [D, H]。</p>
<p>然后一直按照这个规则进行搜索，直到到达目标节点G为止，搜索结束。</p>
<figure><img src="https://pic4.zhimg.com/80/v2-59dd43bdb3d9c315eb5db71e0b72df6b_720w.webp" alt="https://pic4.zhimg.com/80/v2-59dd43bdb3d9c315eb5db71e0b72df6b_720w.webp" tabindex="0" loading="lazy"><figcaption><a href="https://pic4.zhimg.com/80/v2-59dd43bdb3d9c315eb5db71e0b72df6b_720w.webp" target="_blank" rel="noopener noreferrer">https://pic4.zhimg.com/80/v2-59dd43bdb3d9c315eb5db71e0b72df6b_720w.webp</a></figcaption></figure>
<blockquote>
<p><strong>深度优先搜索</strong>会沿着一<strong>条路径不断往下</strong>，<strong>搜索直到不能再继续为止</strong>，到了路径的尽头，再折返，再对另一条路径进行搜索。</p>
</blockquote>
</li>
<li>
<p><strong>四、总结</strong></p>
<p>在操作步骤上却只有一点不同，那就是<strong>选择哪一个候补节点作为下一个节点的基准不同。</strong></p>
<p>广度优先搜索选择的是<strong>最早成为候补的节点</strong>，因为<strong>节点离起点越近就越早成为候补</strong>，所以会从离起点近的地方开始按顺序搜索；</p>
<p>深度优先搜索选择的则是<strong>最新成为候补的节点</strong>，所以<strong>会一路往下</strong>，沿着新发现的路径不断深入搜索。</p>
<p>通过<strong>深度优先搜索</strong>可以<strong>判断图是否是连通图</strong>。具体实现为：在图中<strong>任意选择一个节点</strong>，从该节点<strong>开始进行深度优先搜索</strong>，如果在这个搜索过程中所有的<strong>节点都被搜索到</strong>，则该图为连通；反之，若存在没有被搜索到的节点，则说明该图是非连通的。</p>
<p>在广度优先搜索的执行过程中，搜索范围从起点开始逐渐向外延伸，所以<strong>不但可以判断两个节点之间是否有路径</strong>，还可以<strong>找出这两个节点的最短路径</strong>，即可以解决最短路径问题。</p>
<p>广度优先搜索可以用于找到<strong>两个节点的最短路径问题</strong>，这里的最短路径其实是针对于<strong>非加权图</strong>，寻找段数最少的路径。但是对于加权图，<strong>段数最少的路径并不代表路径中的权重总和也最小</strong>。</p>
<p>对于加权图，计算最短路径可以如下三个算法：</p>
<ol>
<li>贝尔曼-福特算法（(Bellman-Ford）</li>
<li>狄克斯特拉算法（Dijkstra）</li>
<li>A* 算法（A-Star）</li>
</ol>
</li>
<li>
<p><em><em>A</em> 算法（A-Star）</em>*</p>
<p>A*（A-star）算法是一种<strong>静态网路中求解最短路径最有效</strong>的直接搜索算法。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>为了便于理解，本文将以正方形网格地图为例进行讲解。如图，蓝色格子是障碍物，灰色格子是可通过区域，绿色格子是起点（S），红色格子是终点（D）。我们要做的是找到一条从起点到终点的最佳路线。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>为了顺利地解决问题，我们先要设定一些约束条件：</p>
<p>1.&nbsp;从一个格子可以朝周围 8 个方向移动。其中朝上、下、左、右移动的成本为 1，朝左上、右上、左下、右下移动的成本为 1.4（√2 近似值）；</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>2.&nbsp;不能朝障碍物所在格子移动（显然啦！）；</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>3.&nbsp;如果右边和上边两个格子都是障碍物，则不能朝右上方的格子移动（如图：不能朝右上和右下两个格子移动，太窄挤不过去呀～）。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>首先，我们把起点 S 加入一个待检查节点的列表（Open List）。接下来，找出 S 周围所有可移动的格子（邻居），算出从 <strong>S 移动到该格子的总成本（记为 G）</strong>，并将 S 设为其父节点。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>好，这样我们已经完成了对 S 的检查。把上一步找到的<strong>邻居都加入 Open List</strong>。从 Open List 中移除 S，并将其加入另一个<strong>已检查节点的列表（Closed List）</strong>。如图，橙色边框代表待检查节点，黑色边框代表已检查节点。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>Open List 一下有了 8 个待检查节点，先检查哪一个呢？每一个待检查节点都有一个 <strong>G 值</strong>，代表从<strong>起点 S 移动到这个节点的成本</strong>。我们再计算出<strong>每一个待检查节点</strong>与<strong>终点 D 之间的曼哈顿距离</strong>（只通过朝上、下、左、右四个方向的移动，抵达终点 D 的最短距离。例如，在平面上，坐标(x1, y1)的i点与坐标(x2, y2)的j点的曼哈顿距离为d(i,j)=|x1-x2|+|y1-y2|），作为从<strong>该节点移动到终点 D 的估算成本（记为 H）</strong>。注意！这里计算曼哈顿距离时要<strong>忽略所有障碍物</strong>。最后把 G 和 H 相加（记为 F）。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>现在，从 <strong>Open List</strong> 中选出 F 值最小的节点（上图中应该是 S 右边 F 值为 4 的格子），对它执行前面的检查。不过这一次搜索邻居时需要注意以下几点：</p>
<ol>
<li>如果邻居已经在 <strong>Closed List</strong> 中，直接忽略；</li>
<li>如果邻居不在 Open List 中，计算 G、H、F，设置父节点，并将其加入 Open List；</li>
<li>这一点非常重要！<strong>如果邻居已经在 Open List</strong> 中（即该邻居已有父节点），计算从<strong>当前节点移动</strong>到<strong>该邻居</strong>是否能使其<strong>得到更小的 G 值</strong>。如果能，则把该邻居的父节点重设为当前节点，并更新其 G 和 F 值。</li>
</ol>
<p>完成检查后，把当前节点从 Open List 中移除，放入 Closed List。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>继续处理其他待检查节点。</p>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
<p>注意！在下面这一次检查中，S 下方两格的节点（星标）更新了 G 值和父节点。</p>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
<figure><figcaption>Untitled</figcaption></figure>
<p>在下面这一步中，我们注意到终点 D 已经进入了 Open List，并且是其中 F 值最小的。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>我们从 Open List 取出的 F 值最小的节点后，发现它的 H 值为 0，这意味着我们已经找到了终点 D，搜索到此就可以告一段落。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>从终点 D 开始，依次向父节点移动，直到回到起点 S，途经即最佳路线，总长 5.6。</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>补充几点：</p>
<ol>
<li>最佳路线可能有多条，比如本文的示例，下图也是一条总长为 5.6 的路线。这取决于当 Open List 存在多个 F 值最小的节点时，先选取哪一个进行搜索；</li>
</ol>
<figure><figcaption>Untitled</figcaption></figure>
<ol>
<li>曼哈顿距离只是估算 H 值最简单的一种方法，常用的方法还有欧几里德距离、切比雪夫距离等。估算方法的优劣是影响算法效率的重要因素；</li>
<li>Open List 的数据结构也是算法实现的改良点。通常为了从中取出 F 值最小的节点，我们需要遍历整个 Open List，对其排序。因此，维护一个好的 Open List 结构，减少遍历，也能够提高算法的效率；</li>
<li>实际应用中，为提高效率，还可以进行双向搜索。**从起点和终点分别发起搜索，一方搜索到另一方的已检查节点时，即找到最佳路线。**地图较复杂时，双向搜索可以显著减少寻路过程中检查的节点数量。</li>
<li>除了正方形网格地图，A* 算法也能处理其他正多边形镶嵌和复杂甚至不规则多边形镶嵌的地图。其区别在于对邻居的处理和计算；</li>
<li>*<em>A</em> 算法并不保证得到的路线是平滑的。**为了解决这个问题，我们可以对转向进行惩罚。即当移动方向发生变化时，增加额外的 G 值，以此提高转向的成本，从而得到更平滑（转向少、转角小）的最佳路线；</li>
<li>A* 算法的在游戏中的实际应用可能会复杂得多。比如不同种族或技能的单位在同一地形上的移动成本各有差异，同一单位在草地、泥地、砂石、沼泽等各种地形上移动的成本也不尽相同（对应不同的 G 值增量），甚至允许以较高的成本翻越障碍（翻墙、过河等）；</li>
<li>在机器人路径规划中，你可能还需要处理与障碍物和其他移动物体的碰撞。</li>
</ol>
</li>
<li>
<p><strong>狄克斯特拉算法（Dijkstra）</strong></p>
<p>Dijkstra算法算是<strong>贪心思想</strong>实现的，首先把<strong>起点</strong>到<strong>所有点</strong>的<strong>距离</strong>存下来找个最短的，然后松弛一次再找出最短的，所谓的松弛操作就是，<strong>遍历一遍看通过刚刚找到的距离最短的点</strong>作为中转站会不会更近，如果<strong>更近了就更新距离</strong>，这样把所有的点找遍之后就存下了<strong>起点到其他所有点的最短距离。</strong></p>
<p><strong>单源</strong>什么意思？</p>
<ul>
<li>从一个顶点出发，<strong>Dijkstra算法</strong>只能求<strong>一个顶点</strong>到<strong>其他点</strong>的<strong>最短距离</strong>而不能任意两点。</li>
</ul>
<p><code>bfs</code>求的最短路径有什么区别？</p>
<ul>
<li><code>bfs</code>求的与其说是<strong>路径</strong>，不如说是<strong>次数</strong>。因为bfs他是按照队列<strong>一次一次进行加入相邻的点</strong>，而<strong>两点之间没有权值</strong>或者<strong>权值相等</strong>(代价相同)。处理的更多是<strong>偏向迷宫类</strong>的这种都是只能走邻居(不排除特例)。</li>
</ul>
<p>对于一个Dijkstra算法而言，前提是它的前提条件和环境：</p>
<ul>
<li>一个<strong>连通图</strong>，<strong>若干节点</strong>，节点可能有数值，但是<code>**路径**</code>一定有<code>**权值**</code>。并且路径<strong>不能为负</strong>。否则Dijkstra就不适用。</li>
</ul>
<p><strong>Dijkstra的核心思想是贪心算法的思想:</strong></p>
<p>贪心算法（又称贪婪算法）是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的是在某种意义上的局部最优解。</p>
<p>贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择，选择的贪心策略必须具备无后效性，即某个状态以前的过程不会影响以后的状态，只与当前状态有关。</p>
<p>对于贪心问题大部分都需要<strong>排序</strong>,还可能会遇到类排序。并且一个物体可能有多个属性，不同问题需要按照不同属性进行排序，操作。</p>
<p>那么我们的<code>Dijkstra</code>是如何贪心的呢？</p>
<p><strong>Dijkstra算法的前提</strong>：</p>
<ol>
<li>首先，Dijkstra处理的是<strong>带正权值</strong>的<code>有权图</code>，那么，就需要一个<strong>二维数组</strong>（如果空间大用list数组）存储各个点到达(<code>边</code>)的权值大小。<strong>(邻接矩阵或者邻接表存储)</strong></li>
<li>其次，还需要一个<strong>boolean数组</strong>判断那些点<strong>已经确定最短长度</strong>，那些点没有确定。<strong>int数组</strong>记录距离(<strong>在算法执行过程可能被多次更新</strong>)。</li>
<li>需要<strong>优先队列</strong>加入<strong>已经确定点的周围点</strong>。每次抛出确定最短路径的那个并且确定最短，直到所有点路径确定最短为止。</li>
</ol>
<p><strong>算法流程：</strong></p>
<p>1、一般从选定点开始抛入优先队列。（路径一般为0），<code>boolean数组</code>标记0的位置(最短为0) , 然后0<code>周围连通的点</code>抛入优先队列中（可能是node类），并把各个点的距离记录到对应数组内(<strong>如果小于就更新，大于就不动，初始第一次是无穷肯定会更新</strong>)，第一次就结束了！</p>
<p>2、从队列中抛出<code>距离最近</code>的那个点<code>B</code>（<strong>第一次就是0周围邻居</strong>）。这个点距离一定是最近的（所有权值都是正的，点的距离只能越来越长。）标记这个点为<code>true</code>，<strong>并且将这个点的邻居加入队列</strong>(下一次确定的最短点在前面未确定和这个点邻居中产生),并更新通过<code>B</code>点计算各个位置的长度，如果小于则更新！</p>
<figure><figcaption>Untitled</figcaption></figure>
<p>重复二的操作，直到所有点都确定。</p>
<figure><figcaption>Untitled</figcaption></figure>
</li>
</ul>`,r:{minutes:14.98,words:4494},y:"a",t:"图知识"},["/18Data_Structure/数据结构编程练习/代码随想录/图知识.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%BE%E7%9F%A5%E8%AF%86","/18Data_Structure/数据结构编程练习/代码随想录/图知识.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%BE%E7%9F%A5%E8%AF%86.md"]],["v-f98b864a","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%951-15.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> HJ1 字符串最后一个单词的长度</h1>
<h2> 描述</h2>
<p>计算字符串最后一个单词的长度，单词以空格隔开，字符串长度小于5000。（注：字符串末尾不以空格为结尾）</p>
<h3> 输入描述：</h3>
<p>输入一行，代表要计算的字符串，非空，长度小于5000。</p>
<h3> 输出描述：</h3>
<p>输出一个整数，表示输入字符串最后一个单词的长度。</p>
<h2> 方法一</h2>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string&gt;</span></span>
 
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token char">' '</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        i<span class="token operator">--</span><span class="token punctuation">;</span>
        ans<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:17.84,words:5351},y:"a",t:"HJ1 字符串最后一个单词的长度"},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试1-15.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%951-15","/18Data_Structure/数据结构编程练习/华为机试108/华为机试1-15.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%951-15.md"]],["v-11571ff2","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9516-30.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> HJ16&nbsp;购物单</h1>
<h2> 描述</h2>
<p>王强决定把年终奖用于购物，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的，下表就是一些主件与附件的例子：
![[../photo/9.png]]</p>
<p>如果要买归类为附件的物品，必须先买该附件所属的主件，且每件物品只能购买一次。</p>
<p>每个主件可以有&nbsp;0&nbsp;个、&nbsp;1&nbsp;个或&nbsp;2&nbsp;个附件。附件不再有从属于自己的附件。</p>
<p>王强查到了每件物品的价格（都是&nbsp;10&nbsp;元的整数倍），而他只有 N 元的预算。除此之外，他给每件物品规定了一个重要度，用整数&nbsp;1 <strong>~</strong> 5&nbsp;表示。他希望在花费不超过&nbsp;N&nbsp;元的前提下，使自己的满意度达到最大。</p>`,r:{minutes:44.18,words:13254},y:"a",t:"HJ16 购物单"},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试16-30.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9516-30","/18Data_Structure/数据结构编程练习/华为机试108/华为机试16-30.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9516-30.md"]],["v-52024d87","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9531-45.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> HJ31&nbsp;单词倒排</h1>
<h2> 描述</h2>
<p>对字符串中的所有单词进行倒排。</p>
<p>说明：</p>
<p>1、构成单词的字符只有26个大写或小写英文字母；</p>
<p>2、非构成单词的字符均视为单词间隔符；</p>
<p>3、要求倒排后的单词间隔符以一个空格表示；如果原字符串中相邻单词间有多个间隔符时，倒排转换后也只允许出现一个空格间隔符；</p>
<p>4、每个单词最长20个字母；</p>
<p>数据范围：字符串长度满足&nbsp;1≤n≤10000</p>
<h3> 输入描述：</h3>
<p>输入一行，表示用来倒排的句子</p>
<h3> 输出描述：</h3>`,r:{minutes:36.58,words:10975},y:"a",t:"HJ31 单词倒排"},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试31-45.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9531-45","/18Data_Structure/数据结构编程练习/华为机试108/华为机试31-45.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9531-45.md"]],["v-e633b5dc","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9546-60.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> HJ46&nbsp;截取字符串</h1>
<h2> 描述</h2>
<p>输入一个字符串和一个整数 k ，截取字符串的前k个字符并输出</p>
<p>数据范围：字符串长度满足 1≤n≤1000&nbsp;&nbsp;， 1≤k≤n</p>
<h3> 输入描述：</h3>
<p>1.输入待截取的字符串</p>
<p>2.输入一个正整数k，代表截取的长度</p>
<h3> 输出描述：</h3>
<p>截取后的字符串</p>
<h2> 方法一：substr（）</h2>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    string str<span class="token punctuation">;</span>
    <span class="token keyword">int</span> k<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>cin<span class="token operator">&gt;&gt;</span>str<span class="token operator">&gt;&gt;</span>k<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//输入字符串和k</span>
        string sub_str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cout<span class="token operator">&lt;&lt;</span>sub_str<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//输出前k个字符</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:22.22,words:6666},y:"a",t:"HJ46 截取字符串"},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试46-60.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9546-60","/18Data_Structure/数据结构编程练习/华为机试108/华为机试46-60.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9546-60.md"]],["v-64dd5ab2","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9561-75.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> HJ61&nbsp;放苹果</h1>
<h2> 描述</h2>
<p>把m个<strong>同样</strong>的苹果放在n个<strong>同样</strong>的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？</p>
<p>注意：如果有7个苹果和3个盘子，（5，1，1）和（1，5，1）被视为是同一种分法。</p>
<p>数据范围：0≤m≤10&nbsp;，1≤n≤10&nbsp;。</p>
<h3> 输入描述：</h3>
<p>输入两个int整数</p>
<h3> 输出描述：</h3>
<p>输出结果，int型</p>
<h2> 解法一：dfs</h2>
<p><img src="https://img-blog.csdnimg.cn/img_convert/e5c93dbed82348f2e6b3f5619ff51b94.png" alt="" loading="lazy">​</p>`,r:{minutes:34.34,words:10303},y:"a",t:"HJ61 放苹果"},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试61-75.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9561-75","/18Data_Structure/数据结构编程练习/华为机试108/华为机试61-75.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9561-75.md"]],["v-08752a32","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9576-90.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> HJ76&nbsp;尼科彻斯定理</h1>
<h2> 描述</h2>
<p>验证尼科彻斯定理，即：任何一个整数m的立方都可以写成m个连续奇数之和。</p>
<p>例如：</p>
<p>1^3=1</p>
<p>2^3=3+5</p>
<p>3^3=7+9+11</p>
<p>4^3=13+15+17+19</p>
<p>输入一个正整数m（m≤100），将m的立方写成m个连续奇数之和的形式输出。</p>
<p>数据范围：1≤m≤100</p>
<p>进阶：时间复杂度：O(m)&nbsp;，空间复杂度：O(1)</p>
<h3> 输入描述：</h3>
<p>输入一个int整数</p>
<h3> 输出描述：</h3>`,r:{minutes:29.66,words:8898},y:"a",t:"HJ76 尼科彻斯定理"},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试76-90.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9576-90","/18Data_Structure/数据结构编程练习/华为机试108/华为机试76-90.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9576-90.md"]],["v-395aae57","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9591-108.html",{d:"2023-04-26T10:25:41.000Z",e:`<p>​</p>
<h1> HJ91 走方格的方案数</h1>
<h2> 描述</h2>
<p>请计算n*m的棋盘格子（n为横向的格子数，m为竖向的格子数）从棋盘左上角出发沿着边缘线从左上角走到右下角，总共有多少种走法，要求不能走回头路，即：只能往右和往下走，不能往左和往上走。</p>
<p>注：沿棋盘格之间的边缘线行走</p>
<p>数据范围： 1≤n,m≤8</p>
<h3> 输入描述：</h3>
<p>输入两个正整数n和m，用空格隔开。(1≤n,m≤8)</p>
<h3> 输出描述：</h3>
<p>输出一行结果</p>
<h2> 方法一：递归</h2>
<p><img src="https://img-blog.csdnimg.cn/img_convert/876146466bb6d0304991f9b1410dcc54.gif" alt="" loading="lazy">​</p>`,r:{minutes:41.48,words:12444},y:"a",t:"HJ91 走方格的方案数"},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试91-108.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9591-108","/18Data_Structure/数据结构编程练习/华为机试108/华为机试91-108.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%9591-108.md"]],["v-740cffbe","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E7%9B%AE%E5%BD%95.html",{d:"2023-04-26T10:25:41.000Z",e:`<div class="language-dataview line-numbers-mode" data-ext="dataview"><pre class="language-dataview"><code>list
from "算法学习"
where contains(file.name,"华为")
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.04,words:12},y:"a",t:""},["/18Data_Structure/数据结构编程练习/华为机试108/华为机试目录.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E7%9B%AE%E5%BD%95","/18Data_Structure/数据结构编程练习/华为机试108/华为机试目录.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E7%9B%AE%E5%BD%95.md"]],["v-82e57f90","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%AD%97%E7%AC%A6%E4%B8%B2.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> HJ1 字符串最后一个单词的长度# HJ11&nbsp;数字颠倒</h1>
<h2> 描述</h2>
<p>输入一个整数，将这个整数以字符串的形式逆序输出</p>
<p>程序不考虑负数的情况，若数字含有0，则逆序形式也含有0，如输入为100，则输出为001</p>
<p>数据范围： 0≤n≤2^30−1</p>
<h3> 输入描述：</h3>
<p>输入一个int整数</p>
<h3> 输出描述：</h3>
<p>将这个整数以字符串的形式逆序输出</p>
<h2> 方法一：转换为字符串</h2>
<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>                         <span class="token comment">// 以字符串格式输入</span>
    <span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// reverse来倒序原有的字符串</span>
    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.34,words:402},y:"a",t:"HJ1 字符串最后一个单词的长度# HJ11 数字颠倒"},["/18Data_Structure/数据结构编程练习/华为机试108/字符串.html","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%AD%97%E7%AC%A6%E4%B8%B2","/18Data_Structure/数据结构编程练习/华为机试108/字符串.md","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/%E5%AD%97%E7%AC%A6%E4%B8%B2.md"]],["v-2d1ff9b6","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/python/VSCODE%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83%E7%9A%84%E9%97%AE%E9%A2%98.html",{d:"2023-04-26T10:25:41.000Z",e:`<h1> 在vscode中激活conda虚拟环境报错或者打不开虚拟环境的问题：</h1>
<p>CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
If using 'conda activate' from a batch script, change your
invocation to 'CALL conda.bat activate'.
在网上找了好多方法都没成功，也不知道到底是什么问题。最后找到了这个解决方法，解决了我的问题。</p>
<p>解决方法：
1、在VScode terminal powershell 中执行conda init后重启vscode，此时会有标红的错误信息出现，不用管，直接忽略错误信息进行下一步。</p>`,r:{minutes:1.81,words:543},y:"a",t:"在vscode中激活conda虚拟环境报错或者打不开虚拟环境的问题："},["/23SoftWare/VsCode软件/python/VSCODE配置python环境的问题.html","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/python/VSCODE%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83%E7%9A%84%E9%97%AE%E9%A2%98","/23SoftWare/VsCode软件/python/VSCODE配置python环境的问题.md","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/python/VSCODE%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83%E7%9A%84%E9%97%AE%E9%A2%98.md"]],["v-3706649a","/404.html",{y:"p",t:""},["/404"]],["v-c0fd436c","/00Daily_Question/",{y:"p",t:"00 Daily Question"},["/00Daily_Question/index.html"]],["v-6c2440fd","/02Image_Processing/",{y:"p",t:"02 Image Processing"},["/02Image_Processing/index.html"]],["v-7dedfedf","/03Computer_Vision/",{y:"p",t:"03 Computer Vision"},["/03Computer_Vision/index.html"]],["v-3e63b855","/04Optimization_Algorithm/",{y:"p",t:"04 Optimization Algorithm"},["/04Optimization_Algorithm/index.html"]],["v-fcb5a2b6","/05Point_Cloud_Processing/",{y:"p",t:"05 Point Cloud Processing"},["/05Point_Cloud_Processing/index.html"]],["v-93e92daa","/06SLAM/",{y:"p",t:"06 S L A M"},["/06SLAM/index.html"]],["v-f24c27d0","/07Math_Basic/",{y:"p",t:"07 Math Basic"},["/07Math_Basic/index.html"]],["v-6d1a129e","/08AI_Machine_Learning_Deep_Learning/",{y:"p",t:"08 A I Machine Learning Deep Learning"},["/08AI_Machine_Learning_Deep_Learning/index.html"]],["v-d8980732","/09Embedded_Development/",{y:"p",t:"09 Embedded Development"},["/09Embedded_Development/index.html"]],["v-0ced9628","/10Robotics/",{y:"p",t:"10 Robotics"},["/10Robotics/index.html"]],["v-76e3d7b5","/11Automatic_Driving/",{y:"p",t:"11 Automatic Driving"},["/11Automatic_Driving/index.html"]],["v-be857f74","/12C_plus_plus/",{y:"p",t:"12 C Plus Plus"},["/12C_plus_plus/index.html"]],["v-6e6a0778","/13Python/",{y:"p",t:"13 Python"},["/13Python/index.html"]],["v-0ea5cf26","/14Matlab/",{y:"p",t:"14 Matlab"},["/14Matlab/index.html"]],["v-34187ef8","/15Linux/",{y:"p",t:"15 Linux"},["/15Linux/index.html"]],["v-2059f917","/16ROS/",{y:"p",t:"16 R O S"},["/16ROS/index.html"]],["v-5583c685","/17Computer_Basics/",{y:"p",t:"17 Computer Basics"},["/17Computer_Basics/index.html"]],["v-d43d9c1e","/18Data_Structure/",{y:"p",t:"18 Data Structure"},["/18Data_Structure/index.html"]],["v-13beb188","/19Network_Programming/",{y:"p",t:"19 Network Programming"},["/19Network_Programming/index.html"]],["v-c3a82396","/20Mechanical_Engineering/",{y:"p",t:"20 Mechanical Engineering"},["/20Mechanical_Engineering/index.html"]],["v-5bdef966","/21Circuit_Electronics/",{y:"p",t:"21 Circuit Electronics"},["/21Circuit_Electronics/index.html"]],["v-6f99db1e","/22Signal_Processing/",{y:"p",t:"22 Signal Processing"},["/22Signal_Processing/index.html"]],["v-250fc524","/23SoftWare/",{y:"p",t:"23 Soft Ware"},["/23SoftWare/index.html"]],["v-65b40627","/24Windows/",{y:"p",t:"24 Windows"},["/24Windows/index.html"]],["v-1ef96281","/25apps/",{y:"p",t:"25apps"},["/25apps/index.html"]],["v-bc4f592c","/27deploy/",{y:"p",t:"27deploy"},["/27deploy/index.html"]],["v-5a538009","/28LifeNotes/",{y:"p",t:"28 Life Notes"},["/28LifeNotes/index.html"]],["v-6bd118f4","/29Personal_Experience/",{y:"p",t:"29 Personal Experience"},["/29Personal_Experience/index.html"]],["v-23804371","/30web/",{y:"p",t:"30web"},["/30web/index.html"]],["v-145ac574","/blog/",{y:"p",t:"Blog"},["/blog/index.html"]],["v-c1f8ec22","/soph%E5%BC%80%E5%8F%91/",{y:"p",t:"Soph开发"},["/soph开发/","/soph%E5%BC%80%E5%8F%91/index.html"]],["v-c25a1d84","/00Daily_Question/QandA/",{y:"p",t:"Qand A"},["/00Daily_Question/QandA/index.html"]],["v-10fcf391","/01Sensor/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88/",{y:"p",t:"多传感器融合"},["/01Sensor/多传感器融合/","/01Sensor/%E5%A4%9A%E4%BC%A0%E6%84%9F%E5%99%A8%E8%9E%8D%E5%90%88/index.html"]],["v-51cde070","/01Sensor/%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/",{y:"p",t:"毫米波雷达"},["/01Sensor/毫米波雷达/","/01Sensor/%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/index.html"]],["v-343c5b24","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/",{y:"p",t:"图像分类"},["/02Image_Processing/图像分类/","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/index.html"]],["v-fe15c146","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/",{y:"p",t:"3 D 视觉"},["/03Computer_Vision/3D_视觉/","/03Computer_Vision/3D_%E8%A7%86%E8%A7%89/index.html"]],["v-6d0c2fb3","/03Computer_Vision/Opencv/",{y:"p",t:"Opencv"},["/03Computer_Vision/Opencv/index.html"]],["v-0d75c62c","/03Computer_Vision/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/",{y:"p",t:"机器视觉"},["/03Computer_Vision/机器视觉/","/03Computer_Vision/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/index.html"]],["v-7cfaf478","/03Computer_Vision/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/",{y:"p",t:"模式识别"},["/03Computer_Vision/模式识别/","/03Computer_Vision/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/index.html"]],["v-0985594b","/03Computer_Vision/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/",{y:"p",t:"目标检测"},["/03Computer_Vision/目标检测/","/03Computer_Vision/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/index.html"]],["v-39b2b91d","/03Computer_Vision/%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95/",{y:"p",t:"视觉算法"},["/03Computer_Vision/视觉算法/","/03Computer_Vision/%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95/index.html"]],["v-820dd504","/03Computer_Vision/%E9%A1%B9%E7%9B%AE/",{y:"p",t:"项目"},["/03Computer_Vision/项目/","/03Computer_Vision/%E9%A1%B9%E7%9B%AE/index.html"]],["v-54e5d97d","/08AI_Machine_Learning_Deep_Learning/CNN/",{y:"p",t:"C N N"},["/08AI_Machine_Learning_Deep_Learning/CNN/index.html"]],["v-8bff77f0","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/",{y:"p",t:"Machine Learning"},["/08AI_Machine_Learning_Deep_Learning/Machine_Learning/index.html"]],["v-40423f97","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/",{y:"p",t:"人工智能知识图谱"},["/08AI_Machine_Learning_Deep_Learning/人工智能知识图谱/","/08AI_Machine_Learning_Deep_Learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/index.html"]],["v-1d2491d8","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/",{y:"p",t:"机器学习"},["/08AI_Machine_Learning_Deep_Learning/机器学习/","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.html"]],["v-f71f574a","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/",{y:"p",t:"机器学习知识图谱"},["/08AI_Machine_Learning_Deep_Learning/机器学习知识图谱/","/08AI_Machine_Learning_Deep_Learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/index.html"]],["v-18edd1fa","/11Automatic_Driving/%E6%84%9F%E7%9F%A5/",{y:"p",t:"感知"},["/11Automatic_Driving/感知/","/11Automatic_Driving/%E6%84%9F%E7%9F%A5/index.html"]],["v-16bde808","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/",{y:"p",t:"Cplus函数"},["/12C_plus_plus/Cplus函数/","/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/index.html"]],["v-30a064d8","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/",{y:"p",t:"算法学习"},["/12C_plus_plus/算法学习/","/12C_plus_plus/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/index.html"]],["v-5b8c87a0","/15Linux/ubuntu/",{y:"p",t:"Ubuntu"},["/15Linux/ubuntu/index.html"]],["v-4b695752","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/",{y:"p",t:"数据结构编程练习"},["/18Data_Structure/数据结构编程练习/","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/index.html"]],["v-aa9b67b6","/23SoftWare/Conda%E5%B7%A5%E5%85%B7/",{y:"p",t:"Conda工具"},["/23SoftWare/Conda工具/","/23SoftWare/Conda%E5%B7%A5%E5%85%B7/index.html"]],["v-96ca831c","/23SoftWare/Git%E5%B7%A5%E5%85%B7/",{y:"p",t:"Git工具"},["/23SoftWare/Git工具/","/23SoftWare/Git%E5%B7%A5%E5%85%B7/index.html"]],["v-18da1d4a","/23SoftWare/Graphic%20Design%E8%BD%AF%E4%BB%B6/",{y:"p",t:"Graphic Design软件"},["/23SoftWare/Graphic Design软件/","/23SoftWare/Graphic%20Design%E8%BD%AF%E4%BB%B6/index.html"]],["v-25ef39fc","/23SoftWare/Pycharm%E8%BD%AF%E4%BB%B6/",{y:"p",t:"Pycharm软件"},["/23SoftWare/Pycharm软件/","/23SoftWare/Pycharm%E8%BD%AF%E4%BB%B6/index.html"]],["v-a232faec","/23SoftWare/Pytorch/",{y:"p",t:"Pytorch"},["/23SoftWare/Pytorch/index.html"]],["v-395841ba","/23SoftWare/Tensorflow/",{y:"p",t:"Tensorflow"},["/23SoftWare/Tensorflow/index.html"]],["v-7776e8ca","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/",{y:"p",t:"Vs Code软件"},["/23SoftWare/VsCode软件/","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/index.html"]],["v-5db4daba","/25apps/livestreaming/",{y:"p",t:"Livestreaming"},["/25apps/livestreaming/index.html"]],["v-282e9bed","/30web/%E5%89%8D%E7%AB%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/",{y:"p",t:"前端设计与开发知识图谱"},["/30web/前端设计与开发知识图谱/","/30web/%E5%89%8D%E7%AB%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/index.html"]],["v-2c85be28","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/",{y:"p",t:"0 自我提升"},["/31reading/0_自我提升/","/31reading/0_%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/index.html"]],["v-1eaa3342","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/",{y:"p",t:"1 心理学"},["/31reading/1_心理学/","/31reading/1_%E5%BF%83%E7%90%86%E5%AD%A6/index.html"]],["v-8475bea4","/31reading/2_%E6%8A%80%E8%83%BD/",{y:"p",t:"2 技能"},["/31reading/2_技能/","/31reading/2_%E6%8A%80%E8%83%BD/index.html"]],["v-3f02980e","/31reading/3_%E7%AE%A1%E7%90%86/",{y:"p",t:"3 管理"},["/31reading/3_管理/","/31reading/3_%E7%AE%A1%E7%90%86/index.html"]],["v-1e50dd80","/soph%E5%BC%80%E5%8F%91/docker/",{y:"p",t:"Docker"},["/soph开发/docker/","/soph%E5%BC%80%E5%8F%91/docker/index.html"]],["v-9e59f8b0","/soph%E5%BC%80%E5%8F%91/mlib/",{y:"p",t:"Mlib"},["/soph开发/mlib/","/soph%E5%BC%80%E5%8F%91/mlib/index.html"]],["v-9e3ba55e","/soph%E5%BC%80%E5%8F%91/nntc/",{y:"p",t:"Nntc"},["/soph开发/nntc/","/soph%E5%BC%80%E5%8F%91/nntc/index.html"]],["v-a4a38bbe","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/",{y:"p",t:"项目实战"},["/02Image_Processing/图像分类/项目实战/","/02Image_Processing/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/index.html"]],["v-5e535007","/08AI_Machine_Learning_Deep_Learning/Machine_Learning/Machine_Vision/",{y:"p",t:"Machine Vision"},["/08AI_Machine_Learning_Deep_Learning/Machine_Learning/Machine_Vision/index.html"]],["v-286a28ba","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/",{y:"p",t:"代码随想录"},["/18Data_Structure/数据结构编程练习/代码随想录/","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/index.html"]],["v-68af4193","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/",{y:"p",t:"华为机试108"},["/18Data_Structure/数据结构编程练习/华为机试108/","/18Data_Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95108/index.html"]],["v-59e96ac9","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/python/",{y:"p",t:"Python"},["/23SoftWare/VsCode软件/python/","/23SoftWare/VsCode%E8%BD%AF%E4%BB%B6/python/index.html"]],["v-5bc93818","/category/",{y:"p",t:"分类",I:0},["/category/index.html"]],["v-744d024e","/tag/",{y:"p",t:"标签",I:0},["/tag/index.html"]],["v-e52c881c","/article/",{y:"p",t:"文章",I:0},["/article/index.html"]],["v-154dc4c4","/star/",{y:"p",t:"收藏",I:0},["/star/index.html"]],["v-01560935","/timeline/",{y:"p",t:"时间轴",I:0},["/timeline/index.html"]],["v-150ab774","/category/%E5%A4%B4%E8%84%91%E9%A9%BF%E7%AB%99/",{y:"p",t:"头脑驿站 分类",I:0},["/category/头脑驿站/","/category/%E5%A4%B4%E8%84%91%E9%A9%BF%E7%AB%99/index.html"]],["v-b7d62b20","/tag/%E6%8A%80%E5%B7%A7/",{y:"p",t:"技巧 标签",I:0},["/tag/技巧/","/tag/%E6%8A%80%E5%B7%A7/index.html"]],["v-6232e040","/category/%E4%BC%A0%E6%84%9F%E5%99%A8/",{y:"p",t:"传感器 分类",I:0},["/category/传感器/","/category/%E4%BC%A0%E6%84%9F%E5%99%A8/index.html"]],["v-36ced019","/tag/%E9%97%AE%E9%A2%98/",{y:"p",t:"问题 标签",I:0},["/tag/问题/","/tag/%E9%97%AE%E9%A2%98/index.html"]],["v-5bf89d1e","/category/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/",{y:"p",t:"图像处理 分类",I:0},["/category/图像处理/","/category/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/index.html"]],["v-7dbcb65a","/tag/%E7%9B%B8%E6%9C%BA/",{y:"p",t:"相机 标签",I:0},["/tag/相机/","/tag/%E7%9B%B8%E6%9C%BA/index.html"]],["v-98ba1434","/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/",{y:"p",t:"计算机视觉 分类",I:0},["/category/计算机视觉/","/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/index.html"]],["v-2aea4e7c","/tag/%E7%A1%AC%E4%BB%B6/",{y:"p",t:"硬件 标签",I:0},["/tag/硬件/","/tag/%E7%A1%AC%E4%BB%B6/index.html"]],["v-58b53772","/category/slam/",{y:"p",t:"SLAM 分类",I:0},["/category/slam/index.html"]],["v-20581ca8","/tag/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/",{y:"p",t:"图像处理 标签",I:0},["/tag/图像处理/","/tag/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/index.html"]],["v-72c4ce0d","/category/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/",{y:"p",t:"人工智能 分类",I:0},["/category/人工智能/","/category/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/index.html"]],["v-2687e471","/tag/%E7%AE%97%E6%B3%95/",{y:"p",t:"算法 标签",I:0},["/tag/算法/","/tag/%E7%AE%97%E6%B3%95/index.html"]],["v-21ee427c","/category/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/",{y:"p",t:"自动驾驶 分类",I:0},["/category/自动驾驶/","/category/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/index.html"]],["v-58d23f98","/tag/%E6%B1%82%E8%81%8C/",{y:"p",t:"求职 标签",I:0},["/tag/求职/","/tag/%E6%B1%82%E8%81%8C/index.html"]],["v-473420d3","/category/c-plus/",{y:"p",t:"C plus 分类",I:0},["/category/c-plus/index.html"]],["v-315ef24a","/tag/%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/",{y:"p",t:"优化方法 标签",I:0},["/tag/优化方法/","/tag/%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/index.html"]],["v-65eddd24","/category/c__/",{y:"p",t:"C++ 分类",I:0},["/category/c__/index.html"]],["v-29255efc","/tag/slam/",{y:"p",t:"SLAM 标签",I:0},["/tag/slam/index.html"]],["v-78cbe7bb","/category/python/",{y:"p",t:"Python 分类",I:0},["/category/python/index.html"]],["v-229aed01","/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/",{y:"p",t:"深度学习 标签",I:0},["/tag/深度学习/","/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/index.html"]],["v-9db2faec","/category/matlab/",{y:"p",t:"Matlab 分类",I:0},["/category/matlab/index.html"]],["v-7f36686c","/tag/%E6%84%9F%E7%9F%A5/",{y:"p",t:"感知 标签",I:0},["/tag/感知/","/tag/%E6%84%9F%E7%9F%A5/index.html"]],["v-2565fbec","/category/%E8%BD%AF%E4%BB%B6/",{y:"p",t:"软件 分类",I:0},["/category/软件/","/category/%E8%BD%AF%E4%BB%B6/index.html"]],["v-878ee446","/tag/c-plus/",{y:"p",t:"C plus 标签",I:0},["/tag/c-plus/index.html"]],["v-1b3d947c","/category/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C/",{y:"p",t:"个人经验 分类",I:0},["/category/个人经验/","/category/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C/index.html"]],["v-b314c74c","/tag/c__/",{y:"p",t:"C++ 标签",I:0},["/tag/c__/index.html"]],["v-9c48d85a","/category/linux/",{y:"p",t:"linux 分类",I:0},["/category/linux/index.html"]],["v-245f5676","/tag/python/",{y:"p",t:"Python 标签",I:0},["/tag/python/index.html"]],["v-895a84ee","/category/%E7%AE%97%E8%83%BD/",{y:"p",t:"算能 分类",I:0},["/category/算能/","/category/%E7%AE%97%E8%83%BD/index.html"]],["v-262aef94","/tag/matlab/",{y:"p",t:"Matlab 标签",I:0},["/tag/matlab/index.html"]],["v-ba3c9d2c","/category/cplus/",{y:"p",t:"Cplus 分类",I:0},["/category/cplus/index.html"]],["v-211f44ee","/tag/linux/",{y:"p",t:"linux 标签",I:0},["/tag/linux/index.html"]],["v-14145d44","/category/%E5%B7%A5%E5%85%B7/",{y:"p",t:"工具 分类",I:0},["/category/工具/","/category/%E5%B7%A5%E5%85%B7/index.html"]],["v-200c1937","/tag/vscode/",{y:"p",t:"vscode 标签",I:0},["/tag/vscode/index.html"]],["v-006f9769","/category/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/",{y:"p",t:"前端开发 分类",I:0},["/category/前端开发/","/category/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/index.html"]],["v-7f234e30","/tag/%E8%BD%AF%E5%BC%80/",{y:"p",t:"软开 标签",I:0},["/tag/软开/","/tag/%E8%BD%AF%E5%BC%80/index.html"]],["v-6106c001","/tag/docker/",{y:"p",t:"docker 标签",I:0},["/tag/docker/index.html"]],["v-3f71e568","/tag/cmake/",{y:"p",t:"cmake 标签",I:0},["/tag/cmake/index.html"]],["v-28cbf673","/tag/make/",{y:"p",t:"make 标签",I:0},["/tag/make/index.html"]],["v-60d861aa","/tag/%E5%88%86%E5%8C%BA/",{y:"p",t:"分区 标签",I:0},["/tag/分区/","/tag/%E5%88%86%E5%8C%BA/index.html"]],["v-7cc75969","/tag/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/",{y:"p",t:"交叉编译 标签",I:0},["/tag/交叉编译/","/tag/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/index.html"]],["v-0da0cada","/tag/ip/",{y:"p",t:"ip 标签",I:0},["/tag/ip/index.html"]],["v-c27e0a54","/tag/anaconda/",{y:"p",t:"anaconda 标签",I:0},["/tag/anaconda/index.html"]],["v-295ddd76","/tag/%E4%BC%A0%E6%84%9F%E5%99%A8/",{y:"p",t:"传感器 标签",I:0},["/tag/传感器/","/tag/%E4%BC%A0%E6%84%9F%E5%99%A8/index.html"]],["v-1a507bec","/tag/%E6%9C%BA%E5%99%A8%E4%BA%BA/",{y:"p",t:"机器人 标签",I:0},["/tag/机器人/","/tag/%E6%9C%BA%E5%99%A8%E4%BA%BA/index.html"]],["v-f8ee5dc4","/tag/%E5%8F%8C%E7%9B%AE%E8%A7%86%E8%A7%89/",{y:"p",t:"双目视觉 标签",I:0},["/tag/双目视觉/","/tag/%E5%8F%8C%E7%9B%AE%E8%A7%86%E8%A7%89/index.html"]],["v-e93a9404","/tag/%E9%87%8C%E7%A8%8B%E8%AE%A1/",{y:"p",t:"里程计 标签",I:0},["/tag/里程计/","/tag/%E9%87%8C%E7%A8%8B%E8%AE%A1/index.html"]],["v-ae84acf8","/tag/opencv/",{y:"p",t:"Opencv 标签",I:0},["/tag/opencv/index.html"]],["v-211e8c1d","/tag/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/",{y:"p",t:"机器视觉 标签",I:0},["/tag/机器视觉/","/tag/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/index.html"]],["v-3f1309c0","/tag/cplus/",{y:"p",t:"Cplus 标签",I:0},["/tag/cplus/index.html"]],["v-293a5861","/tag/%E7%9B%B4%E6%92%AD/",{y:"p",t:"直播 标签",I:0},["/tag/直播/","/tag/%E7%9B%B4%E6%92%AD/index.html"]],["v-b309c306","/tag/obs/",{y:"p",t:"OBS 标签",I:0},["/tag/obs/index.html"]],["v-b3026aae","/tag/web/",{y:"p",t:"web 标签",I:0},["/tag/web/index.html"]]];var da=T({name:"Vuepress",setup(){const n=Mo();return()=>s(n.value)}}),yc=()=>Dc.reduce((n,[e,a,o,i])=>(n.push({name:e,path:a,component:da,meta:o},...i.map(r=>({path:r,redirect:a}))),n),[{name:"404",path:"/:catchAll(.*)",component:da}]),Lc=Lo,Cc=()=>{const n=bo({history:Lc(nt("/")),routes:yc(),scrollBehavior:(e,a,o)=>o||(e.hash?{el:e.hash}:{top:0})});return n.beforeResolve(async(e,a)=>{var o;(e.path!==a.path||a===Do)&&([Pn.value]=await Promise.all([yn.resolvePageData(e.name),(o=va[e.name])==null?void 0:o.__asyncLoader()]))}),n},Pc=n=>{n.component("ClientOnly",ke),n.component("Content",ya)},wc=(n,e,a)=>{const o=V(e.currentRoute.value.path);Y(()=>e.currentRoute.value.path,m=>o.value=m);const i=g(()=>yn.resolveLayouts(a)),r=g(()=>yn.resolveRouteLocale($n.value.locales,o.value)),l=g(()=>yn.resolveSiteLocaleData($n.value,r.value)),c=g(()=>yn.resolvePageFrontmatter(Pn.value)),u=g(()=>yn.resolvePageHeadTitle(Pn.value,l.value)),d=g(()=>yn.resolvePageHead(u.value,c.value,l.value)),_=g(()=>yn.resolvePageLang(Pn.value)),h=g(()=>yn.resolvePageLayout(Pn.value,i.value));return n.provide(To,i),n.provide(Aa,c),n.provide(Ba,u),n.provide(ga,d),n.provide(ka,_),n.provide(fa,h),n.provide(et,r),n.provide(Da,l),Object.defineProperties(n.config.globalProperties,{$frontmatter:{get:()=>c.value},$head:{get:()=>d.value},$headTitle:{get:()=>u.value},$lang:{get:()=>_.value},$page:{get:()=>Pn.value},$routeLocale:{get:()=>r.value},$site:{get:()=>$n.value},$siteLocale:{get:()=>l.value},$withBase:{get:()=>rn}}),{layouts:i,pageData:Pn,pageFrontmatter:c,pageHead:d,pageHeadTitle:u,pageLang:_,pageLayout:h,routeLocale:r,siteData:$n,siteLocaleData:l}},Ic=()=>{const n=Fo(),e=Xn(),a=V([]),o=()=>{n.value.forEach(r=>{const l=Sc(r);l&&a.value.push(l)})},i=()=>{document.documentElement.lang=e.value,a.value.forEach(r=>{r.parentNode===document.head&&document.head.removeChild(r)}),a.value.splice(0,a.value.length),n.value.forEach(r=>{const l=Tc(r);l!==null&&(document.head.appendChild(l),a.value.push(l))})};In(xo,i),J(()=>{o(),i(),Y(()=>n.value,()=>i())})},Sc=([n,e,a=""])=>{const o=Object.entries(e).map(([c,u])=>pn(u)?`[${c}=${JSON.stringify(u)}]`:u===!0?`[${c}]`:"").join(""),i=`head > ${n}${o}`;return Array.from(document.querySelectorAll(i)).find(c=>c.innerText===a)||null},Tc=([n,e,a])=>{if(!pn(n))return null;const o=document.createElement(n);return Xe(e)&&Object.entries(e).forEach(([i,r])=>{pn(r)?o.setAttribute(i,r):r===!0&&o.setAttribute(i,"")}),pn(a)&&o.appendChild(document.createTextNode(a)),o},Oc=yo,Fc=async()=>{var a;const n=Oc({name:"VuepressApp",setup(){var o;Ic();for(const i of Ee)(o=i.setup)==null||o.call(i);return()=>[s(Co),...Ee.flatMap(({rootComponents:i=[]})=>i.map(r=>s(r)))]}}),e=Cc();Pc(n),wc(n,e,Ee);for(const o of Ee)await((a=o.enhance)==null?void 0:a.call(o,{app:n,router:e,siteData:$n}));return n.use(e),{app:n,router:e}};Fc().then(({app:n,router:e})=>{e.isReady().then(()=>{n.mount("#app")})});export{xc as H,lc as L,hn as a,tn as b,oo as c,Fc as createVueApp,oc as d,q as e,Mc as f,sc as h,wr as i,ac as l,ic as m,kt as n,io as r,$i as u,bt as v,rc as y};
