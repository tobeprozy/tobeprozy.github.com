const t=JSON.parse('{"key":"v-683f08d8","path":"/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Iterators.html","title":"STL Iterators","lang":"zh-CN","frontmatter":{"title":"STL Iterators","article":true,"date":"2023-04-14T00:00:00.000Z","category":["C plus"],"tag":["算法","C plus"],"order":null,"icon":"🧑","description":"提示 STL Iterators STL Iterators 迭代器定义 **迭代器（iterator）是一种可以遍历容器元素的数据类型。迭代器是一个变量，相当于容器和操纵容器的算法之间的中介。**C++更趋向于使用迭代器而不是数组下标操作，因为标准库为每一种标准容器（如vector、map和list等）定义了一种迭代器类型，而只有少数容器（如vector）支持数组下标操作访问容器元素。可以通过迭代器指向你想访问容器的元素地址，通过*x打印出元素值。","head":[["meta",{"property":"og:url","content":"https://tobeprozy.github.io/12C_plus_plus/Cplus%E5%87%BD%E6%95%B0/STL%20Iterators.html"}],["meta",{"property":"og:site_name","content":"南叔先生-开源笔记"}],["meta",{"property":"og:title","content":"STL Iterators"}],["meta",{"property":"og:description","content":"提示 STL Iterators STL Iterators 迭代器定义 **迭代器（iterator）是一种可以遍历容器元素的数据类型。迭代器是一个变量，相当于容器和操纵容器的算法之间的中介。**C++更趋向于使用迭代器而不是数组下标操作，因为标准库为每一种标准容器（如vector、map和list等）定义了一种迭代器类型，而只有少数容器（如vector）支持数组下标操作访问容器元素。可以通过迭代器指向你想访问容器的元素地址，通过*x打印出元素值。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tobeprozy.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T10:25:41.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"STL Iterators"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"C plus"}],["meta",{"property":"article:published_time","content":"2023-04-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T10:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"STL Iterators\\",\\"image\\":[\\"https://tobeprozy.github.io/\\"],\\"datePublished\\":\\"2023-04-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-26T10:25:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1682504741000,"updatedTime":1682504741000,"contributors":[{"name":"tobeprozy","email":"904762096@qq.com","commits":1}]},"readingTime":{"minutes":1.71,"words":513},"filePathRelative":"12C_plus_plus/Cplus函数/STL Iterators.md","localizedDate":"2023年4月14日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>STL Iterators</p>\\n</div>\\n<h1> STL Iterators</h1>\\n<h1> 迭代器定义</h1>\\n<p>**迭代器（iterator）是一种可以遍历容器元素的数据类型。迭代器是一个变量，相当于容器和操纵容器的算法之间的中介。**C++更趋向于使用迭代器而不是数组下标操作，因为标准库为每一种标准容器（如vector、map和list等）定义了一种迭代器类型，而只有少数容器（如vector）支持数组下标操作访问容器元素。可以通过迭代器指向你想访问容器的元素地址，通过*x打印出元素值。</p>","autoDesc":true}');export{t as data};
